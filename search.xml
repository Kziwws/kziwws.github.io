<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac青花瓷Charles抓包使用详解</title>
    <url>/2021/12/10/technology20211210100122/</url>
    <content><![CDATA[<p><a href="https://imgtu.com/i/7TVvvD" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7TVvvD.png" alt="7TVvvD.png"></a></p>
<h5 id="Charles青花瓷是一个HTTP代理服务器-HTTP监视器-反转代理服务器，当程序连接Charles的代理访问互联网时，Charles可以监控这个程序发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request-response和HTTP-headers-（包含cookies与caching信息）。"><a href="#Charles青花瓷是一个HTTP代理服务器-HTTP监视器-反转代理服务器，当程序连接Charles的代理访问互联网时，Charles可以监控这个程序发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request-response和HTTP-headers-（包含cookies与caching信息）。" class="headerlink" title="Charles青花瓷是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当程序连接Charles的代理访问互联网时，Charles可以监控这个程序发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。"></a>Charles青花瓷是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当程序连接Charles的代理访问互联网时，Charles可以监控这个程序发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。</h5><p><font color="#B22222">青花瓷 v 4.6.2</font>下载链接 <a href="https://www.charlesproxy.com/assets/release/4.6.2/charles-proxy-4.6.2.dmg?k=ba07c34dbd" target="_blank" rel="noopener">点击下载 macOS (dmg, 54.3 MB)<br>Compatible with macOS 10.7 - 10.15</a></p>
<p>青花瓷注册码<br>Registered Name: <code>https://zhile.io</code><br>License Key: <code>48891cf209c6d32bf4</code></p>
<p>打开charles–help–register charles 输入上面注册码，然后就可以使用了</p>
<p><strong>使用步骤</strong></p>
<ul>
<li><a href="#certificate_install">安装Mac证书 浏览器请求抓包</a></li>
<li><a href="#client_install">移动客户端请求抓包</a></li>
</ul>
<h6 id="一、安装Mac证书"><a href="#一、安装Mac证书" class="headerlink" title="一、安装Mac证书"></a><a name='certificate_install'><font color="black">一、安装Mac证书</font></a></h6><p><code>Charles主界面</code> -&gt;<code>Help</code> -&gt; <code>SSL Proxying</code> -&gt;<code>Install Charles Root Certificate</code> </p>
<p><a href="https://imgtu.com/i/7TZ3GV" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7TZ3GV.png" alt="7TZ3GV.png"></a></p>
<p>然后在钥匙串找到 Charles Root Certificate 证书，我这边显示Charles Proxy CA ，然后系统默认是不信任Charles的证书的，此时<code>右键证书</code>-&gt;<code>显示简介</code> -&gt; <code>信任</code>中<code>使用此证书时</code>，把<code>使用系统默认</code>改为<code>始终信任</code></p>
<a id="more"></a>
<h6 id="二、安装客户端证书"><a href="#二、安装客户端证书" class="headerlink" title="二、安装客户端证书"></a><a name='client_install'><font color="black">二、安装客户端证书</font></a></h6><ul>
<li>设置客户端网络ip地址</li>
</ul>
<p><code>Charles主界面</code> -&gt;<code>Help</code> -&gt; <code>SSL Proxying</code> -&gt;<code>Install Charles Root Certificate Device or Remote Browser</code></p>
<p><a href="https://imgtu.com/i/7oTarj" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7oTarj.png" alt=""></a></p>
<p>只要手机和电脑链接的同一个网络就行，然后在 <code>设置</code> -&gt; <code>无线局域网</code> -&gt; <code>当前连接的无线</code> -&gt; <code>配置代理</code> –&gt; <code>手动</code> –&gt; 在<code>服务器</code>中输入<code>上面图片展示的IP地址</code> –&gt; <code>端口</code>添加<code>8888</code> -&gt; 点击右上角<code>存储</code>按钮。</p>
<p>备注: 如何有在Charles设置中修改过这个端口号，则上面这个端口号填写修改过后的没有修改过直接服务器ip和端口号填写你自己电脑点开上图上面的ip和端口。</p>
<p>也可以通过 <code>cat /etc/resolv.conf</code> 指令来查看ip 地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># This file is not consulted for DNS hostname resolution, address</span><br><span class="line"># resolution, or the DNS query routing mechanism used by most</span><br><span class="line"># processes on this system.</span><br><span class="line">#</span><br><span class="line"># To view the DNS configuration used by this system, use:</span><br><span class="line">#   scutil --dns</span><br><span class="line"></span><br><span class="line"># SEE ALSO</span><br><span class="line">#   dns-sd(1), scutil(8)</span><br><span class="line"># This file is automatically generated.</span><br><span class="line"></span><br><span class="line">nameserver 172.16.200.161 你的ip地址 </span><br><span class="line">nameserver 114.114.114.114</span><br></pre></td></tr></table></figure>
<ul>
<li><p>下载移动端证书</p>
<p>1、确保Mac上的Charles软件是打开状态。</p>
<p>2、打开苹果自带的safari浏览器输入 <code>http://charlesproxy.com/getssl</code> 或者<code>http://chls.pro/ssl</code>然后回车，会出现提示 此网站正尝试下载一个配置描述文件。您要允许？点击下载按钮。</p>
<p>如果出现以下问题:</p>
<p><font color="red">Q1:</font> safari输入出现 ，Charles SSL CA Certificate installation<br>Your browser should download and offer to install the Charles SSL CA Certificate in just a moment. If this doesn’t work, please check that your OS, or browser, is configured to use Charles as its proxy.<br><font color="red">w1:</font> 请看一下你手机所连接网络是否跳网，不是和电脑所在同一个网络。</p>
<p><font color="red">Q2:</font> 如何上面你都试过了还是不行。</p>
<p><font color="red">w1:</font>请直接safari浏览器输入<code>https://www.charlesproxy.com/documentation/additional/legacy-ssl-proxying/</code> 然后点击 itself here(for instaling on mobile devices)下载下来。</p>
</li>
</ul>
<ul>
<li><p>安装手机端的证书<br>1、然后点击<code>设置</code> -&gt; <code>通用</code> -&gt; <code>描述文件</code> -&gt;<code>选中 Charles Proxy SSL Proxying</code>按照要求进行安装就可以了。</p>
<p>2、然后信任证书，点击<code>设置</code> -&gt; <code>关于</code> -&gt; <code>证书信任设置</code> 在针对根证书启用完全信任勾上，Charles proxy SSL Proxying。<br><a href="https://imgtu.com/i/7T9PUS" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7T9PUS.png" alt=""></a></p>
</li>
</ul>
<h6 id="三、Mac端Charles中的设置"><a href="#三、Mac端Charles中的设置" class="headerlink" title="三、Mac端Charles中的设置"></a><font color="black">三、Mac端Charles中的设置</font></h6><h5 id="1、以上一系列设置过后，证书就安装完成。然后就是开始在Mac端-Charles-中开启macOS-Proxy。"><a href="#1、以上一系列设置过后，证书就安装完成。然后就是开始在Mac端-Charles-中开启macOS-Proxy。" class="headerlink" title="1、以上一系列设置过后，证书就安装完成。然后就是开始在Mac端 Charles 中开启macOS Proxy。"></a>1、以上一系列设置过后，证书就安装完成。然后就是开始在Mac端 Charles 中开启macOS Proxy。</h5><p><a href="https://imgtu.com/i/7T96KI" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7T96KI.png" alt="" style="zoom:50%;" /></a></p>
<h5 id="2、开启-ProxySettings开启-Enable-transparent-http-proxying。"><a href="#2、开启-ProxySettings开启-Enable-transparent-http-proxying。" class="headerlink" title="2、开启 ProxySettings开启 Enable transparent http proxying。"></a>2、开启 <code>ProxySettings</code>开启 Enable transparent http proxying。</h5><p><a href="https://imgtu.com/i/7TCSz9" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7TCSz9.png" alt="" style="zoom: 50%;" /></a></p>
<h5 id="3、开启SSL-Proxying-Settings-位置在Proxy-gt-SSL-Proxying-Settings-然后在-Enable-SSL-Proxying-这个一定要勾上-然后在Location-添加-表示全部拦截。到这儿位置就全部设置完毕了。然后开始拦截请求数据吧！"><a href="#3、开启SSL-Proxying-Settings-位置在Proxy-gt-SSL-Proxying-Settings-然后在-Enable-SSL-Proxying-这个一定要勾上-然后在Location-添加-表示全部拦截。到这儿位置就全部设置完毕了。然后开始拦截请求数据吧！" class="headerlink" title="3、开启SSL Proxying Settings,位置在Proxy-&gt;SSL Proxying Settings,然后在 Enable SSL Proxying 这个一定要勾上,然后在Location 添加*:*表示全部拦截。到这儿位置就全部设置完毕了。然后开始拦截请求数据吧！"></a>3、开启SSL Proxying Settings,位置在<code>Proxy</code>-&gt;<code>SSL Proxying Settings</code>,然后在 <font color="red">Enable SSL Proxying</font> 这个一定要勾上,然后在Location 添加*:*表示全部拦截。到这儿位置就全部设置完毕了。然后开始拦截请求数据吧！</h5><p><a href="https://imgtu.com/i/7TCOOI" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7TCOOI.png" alt=""></a></p>
<h5 id="最后开始尽情的享受不用找接口然后看到各个接口的数据的快乐吧"><a href="#最后开始尽情的享受不用找接口然后看到各个接口的数据的快乐吧" class="headerlink" title="最后开始尽情的享受不用找接口然后看到各个接口的数据的快乐吧"></a>最后开始尽情的享受不用找接口然后看到各个接口的数据的快乐吧</h5><h5 id="1、如果是客户端加证书请求的APP不可以抓包需要导入Client-Certificaters才可以。"><a href="#1、如果是客户端加证书请求的APP不可以抓包需要导入Client-Certificaters才可以。" class="headerlink" title="1、如果是客户端加证书请求的APP不可以抓包需要导入Client Certificaters才可以。"></a>1、如果是客户端加证书请求的APP不可以抓包需要导入Client Certificaters才可以。</h5><h5 id="2、有些APP是加密了，需要了解解密方式，把抓出来的解密才可以看到数据。"><a href="#2、有些APP是加密了，需要了解解密方式，把抓出来的解密才可以看到数据。" class="headerlink" title="2、有些APP是加密了，需要了解解密方式，把抓出来的解密才可以看到数据。"></a>2、有些APP是加密了，需要了解解密方式，把抓出来的解密才可以看到数据。</h5><p><a href="https://imgtu.com/i/7TieKA" target="_blank" rel="noopener"><img src="https://s4.ax1x.com/2022/01/24/7TieKA.png" alt=""></a></p>
]]></content>
      <categories>
        <category>charles</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>flutter基础学习</title>
    <url>/2021/10/10/technology20211010110234/</url>
    <content><![CDATA[<p>最近学习了一周flutter,做了一下笔记，之前看到一个推荐入门的视频，初步看了一下很不错，推荐给大家。<strong><strong><a href="https://www.bilibili.com/video/BV1kh411a7Lr?p=2" target="_blank" rel="noopener">全新升级小码哥Flutter实战教学完整版附资料</a></strong></strong> ，如果有Android和IOS原生开发经验的感觉学起来是相对好理解一点。最后面也分享一下写的一个页面代码，由于最近一周公司内部的业务笔记多相对较忙，然后断断续续的学。</p>
<p><font color="#B22222">1、</font>stl 回车快捷键创建 <code>StatelessWidget</code>。</p>
<p><font color="#B22222">2、</font>如果像<code>IOS UITableViewCell</code>中子视图设置间距的话，可以使用<code>SizeBox(height: 8)</code>,就是设置上下之前的控件距离8个像素，<br>有点类似<code>IOS ToolBar</code>中添加多个item时的 <code>UIBarButtonSystemItemFlexibleSpace.</code></p>
<p><font color="#B22222">3、</font>去掉APP展示<code>debug LOGO</code>时在启动 MaterialAPP内 使用<code>debugShowCheckedModeBanner: false</code>。</p>
<p><font color="#B22222">4、</font> 关于widget 有状态的Widget:StatefulWidget在运行过程中有一些状态data数据需要改变，无状态的widget:StatelessWidget内容是确定的没有状态data数据的改变。</p>
<p><font color="#B22222">5、</font>两个组件widget并排时用Row组件可以放多个组件，想要水平居中，使用Center组件包裹。想要Row里面的子元素在父widget x轴居中 使用<code>mainAxisAlignment: MainAxisAlignment.center.</code></p>
<p><font color="#B22222">6、</font>想要子元素垂直流水布局使用Cloumn组件，也是widget但是如果里面的元素超出手机最大长度，就是不能滚动的区域，会展示黄色条纹斑马线的多余区域，解决办法就是使用ListView 可滚动的widget。</p>
<p><font color="#B22222">7、</font>使用网络加载图片<code>Image.network(url)</code>。</p>
<p><font color="#B22222">8、</font>statelessWidget里的属性必须是不可修改的 用<code>final</code>修饰。并且是实现构造函数就是当前类型传进去的命名的各个参数。</p>
<p><font color="#B22222">9、</font>如果使用Checkbox组件有按钮点击回调参数如 <code>onChangeed:(value) =&gt;flag = value.</code></p>
<p><font color="#B22222">10、</font>@immutable注解标明的类或者子类都必须是不可变的。所以比如statelessWidget类的属性用final修饰。</p>
<p><font color="#B22222">11、</font>StatefullWidget继承自StatefulWidget的类(可以接受父Widget传过来的数据/state类(状态))。StatefulWidget 要实现 <code>createState()</code>方法，然后实现State类 这个类就是实现可变的属性。</p>
<p><font color="#B22222">12、</font>如果实现边框和内间距可以使用Container，<code>alt + enter</code> 快捷键可实现一个Widget快速包裹一个Container. Container其中有一个属性decoration翻译过来为装饰，<code>BoxDecoration(border: Border.all( width: 5</code>,//设置边框的宽度, <code>color: Colors.purple</code>//设置边框的颜色))。如果设置Container内间距(子视图到Container的内部间距) padding: EdgeInsets.all(8) 上下左右为8个像素的间距。</p>
<p><font color="#B22222">13、</font>Text组件中的textAlign相当于IOS中的UILable中的属性<code>textAlignment</code>。</p>
<p><font color="#B22222">14、</font>Column中属性主轴和交叉轴 <code>mainAxisAlignment: MainAxisAlignment.center</code> 交叉轴<code>crossAxisAlignment: CrossAxisAlignment.start</code>(就是开始元素在) Column中开始最左边显示。如果<code>CrossAxisAlignment.end</code> 从右边开始显示相当于。(Column垂直方向就是主轴，Row来说水平方向是主轴).</p>
<p><font color="#B22222">14、</font>一个类中如果有@protected 如: <code>createState()</code>修饰表示该方法是必须实现的。widget类是不加下划线的，暴露给别人使用,State是加下划线的，状态这个类只给widget使用。为什么Flutter在设计的时候StatefulWidget的build方法放在State中？原因有 一、build出来的Widget是需要依赖State中的变量(状态/数量) 二、在运行的过程中 widget是不断的销毁和创建的。当自己的状态发生改变时，并不希望重新创建一个新的State类。</p>
<p><font color="#B22222">15、</font>RaisedButton按钮组件 <code>Raisebutton( child; Icon(Icons.add)),onPressed:()=&gt; print(&quot;点击+&quot;)) Icon</code>是展示图标。</p>
<p><font color="#B22222">16、</font>如果在State状态类中想可变的参数和不可变的参数（接受StatefulWidget的值时），State本身会持有所归属的widget组件，所以在StatefulWidget类中之间申请属性然后直接可以使用<code>${widget.message}</code> 这儿的widget就是前面自定义的StatefulWidget组件 message属性就是自定义的StatefulWidget类的属性。</p>
<p><font color="#B22222">17、</font>StatelessWidget的生命周期： 只有本身的构造方法和<code>build(BuildContext context)</code>方法。<br>   StatefulWidget 的生命周期包括两个类widget和state，其中StatefulWidget的生命周期是<code>Constructor</code>、<code>Widget.createState()</code>. State类生命周期 先调用Constructor（构造方法）、initState(初始化状态)、<code>didChangeDependencies</code>(状态值发生改变的时候)、<code>build</code>、<code>dispose</code>(销毁方法)，这儿如果子类中实现了initState方法，这个方法在父内中是@mustCallSuper意思是自内必须调用的。调用会对父类做一些初始化，同理dispose方法也是一样子。</p>
<p><font color="#B22222">18、</font>state类里调用<code>setState(VoidCallback fn)</code>，会去先执行fn(),然后setState里会去执行<code>markneedsBuild()</code>方法，然后去执行build(),刷新UI。</p>
<p><font color="#B22222">19、</font>带边框的按钮OutlineButton、平坦的按钮FlatButton、浮动按钮<code>FloatingActionButton(child: Icon(Icons.add),onPressed:()=&gt;)</code>、凸出的按钮RaiseButton.</p>
<p><font color="#B22222">20、</font>当自定义按钮时<code>FlatButton(color: Colors.red,child: Row(mainAxisSize: MainAxisSize.max,children: &lt;widget&gt;[Icon(Icons.favorite,color: Colors.red,),Text(&quot;A&quot;)]),onPressed:(){})</code>, mainAxisSize 主轴上的大小。</p>
<p><font color="#B22222">21、</font>FlatButton使用圆角时<code>shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8))</code>。</p>
<p><font color="#B22222">22、</font>加载图片<code>Image(image: NetworkImage(&quot;https://~&quot;)),width: 200,height:200,fit:BoxFit.fitWidth,alignment: Alignment.BottomCenter)</code>。其中如果设置了图片的背景颜色是会覆盖在最上层，不过可以设置颜色混入模式与图片融合一体，<code>color: Colors.red,colorBlendMode: BlendMode.colorDodge</code>.</p>
<a id="more"></a>

<p><font color="#B22222">23、</font>加载本地图片<code>Image(image: AssetImage(&quot;&quot;))</code>，这个里面的图片路径有3个步骤，1、在项目中创建一个文件夹，存储图片 2、在pubspec.yaml进行配置 3、使用图片 如pubspec里的配置 <code>assets: - assets/images/ 这儿后面的可以不写图片名字</code>，就加载所有这个images目录的图片资源，然后在使用的时候<code>Image(image: AssetImage(&quot;assets/images/图片名字.png&quot;))</code>.</p>
<p><font color="#B22222">24、</font>FlatButton按钮如果再Column中会自动展示 48px间距，如果不足48px会自动填充48 padded，如果想去掉使用，<code>FlatButton(Flatbutton(color: Colors.red,materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,child: Text(&quot;Flot Button&quot;),textColor: Colors.white,onPressed:(){}))</code>.</p>
<p><font color="#B22222">25、</font>将StatelessWidget转 StatefulWidget 鼠标选中需要转换的类名,或光标放到类名之间 option + enter，抽取代码为单独的Widget 有时候代码嵌套太多,不方便阅读,抽取Widget为一个单独的类,提高代码的阅读性 鼠标选中需要转换的类名,或光标放到类名之间<code>command  + option + W</code>。</p>
<p><font color="#B22222">26、</font>初始化函数 <code>Person(this.name,{int age}):this.age = age ?? 10{}</code>。</p>
<p><font color="#B22222">27、</font><code>decoration = decoration ?? (color != null ? BoxDecorayion(color: color):null)</code>就是一个赋值语句，意思就是decoration不为空就用这个值，否则就用后面的值。</p>
<p><strong>一个注册页面</strong></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/gestures.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:pro_summary/utils/util.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WSLoginPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> WSLoginPage(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _WSLoginPageState createState() =&gt; _WSLoginPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_WSLoginPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">WSLoginPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> themeColor = <span class="keyword">const</span> Color.fromRGBO(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: <span class="keyword">const</span> Text(<span class="string">"注册"</span>, style: TextStyle(color: Colors.black)),</span><br><span class="line">          backgroundColor: themeColor,</span><br><span class="line">          elevation: <span class="number">0</span>, <span class="comment">//默认为4 设置成零就没有阴影</span></span><br><span class="line">          <span class="comment">//设置主题颜色无效</span></span><br><span class="line">          <span class="comment">/*iconTheme: IconThemeData(</span></span><br><span class="line"><span class="comment">            color: themeColor,</span></span><br><span class="line"><span class="comment">          ),*/</span></span><br><span class="line">          <span class="comment">//修改返回按钮的颜色</span></span><br><span class="line">          leading: BackButton(color: Colors.grey.withOpacity(<span class="number">0.5</span>)),</span><br><span class="line">        ),</span><br><span class="line">        backgroundColor: themeColor,</span><br><span class="line">        body: WSContentBody());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WSContentBody</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> WSContentBody(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;WSContentBody&gt; createState() =&gt; _WSContentBodyState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_WSContentBodyState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">WSContentBody</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> ListView(</span><br><span class="line">      padding: <span class="keyword">const</span> EdgeInsets.fromLTRB(<span class="number">15</span>, kToolbarHeight, <span class="number">15</span>, <span class="number">0</span>),</span><br><span class="line">      children: [</span><br><span class="line">        Expanded(</span><br><span class="line">          child: Column(children: [</span><br><span class="line">            BoxCellContainer(</span><br><span class="line">                <span class="string">"请输入邀请码"</span>, Toast2.loadImage(<span class="string">"icon_inputbox_recommend"</span>), <span class="number">0</span>),</span><br><span class="line">            BoxCellContainer(</span><br><span class="line">                <span class="string">"请输入11位手机号码"</span>, Toast2.loadImage(<span class="string">"icon_inputbox_phone"</span>), <span class="number">1</span>),</span><br><span class="line">            BoxCellContainer(</span><br><span class="line">                <span class="string">"请输入验证码"</span>, Toast2.loadImage(<span class="string">"icon_inputbox_code"</span>), <span class="number">2</span>),</span><br><span class="line">            <span class="keyword">const</span> SizedBox(height: <span class="number">38</span>),</span><br><span class="line">            getNextBtn()</span><br><span class="line">          ] <span class="comment">//下一步按钮,</span></span><br><span class="line">              ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">const</span> SizedBox(height: <span class="number">350</span>),</span><br><span class="line">        buildBottomRich()</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*构建底部富文本*/</span></span><br><span class="line">  buildBottomRich() &#123;</span><br><span class="line">    <span class="keyword">return</span> Expanded(</span><br><span class="line">      child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [</span><br><span class="line">        SizedBox(</span><br><span class="line">          width: <span class="number">34</span>,</span><br><span class="line">          height: <span class="number">34</span>,</span><br><span class="line">          child: FlatButton(</span><br><span class="line">              materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,</span><br><span class="line">              splashColor: Colors.white10,</span><br><span class="line">              highlightColor: Colors.white,</span><br><span class="line">              padding:</span><br><span class="line">                  <span class="keyword">const</span> EdgeInsets.only(left: <span class="number">0</span>, top: <span class="number">0</span>, right: <span class="number">0</span>, bottom: <span class="number">18</span>),</span><br><span class="line">              child: Image(</span><br><span class="line">                  width: <span class="number">14</span>,</span><br><span class="line">                  height: <span class="number">14</span>,</span><br><span class="line">                  image: AssetImage(Toast2.loadImage(<span class="string">"btn_bottom_agree_nor"</span>)),</span><br><span class="line">                  fit: BoxFit.contain),</span><br><span class="line">              <span class="comment">//color: const Color.fromRGBO(153, 153, 153, 0.3),</span></span><br><span class="line">              <span class="comment">//textColor: Colors.white,</span></span><br><span class="line">              onPressed: () &#123;&#125;),</span><br><span class="line">        ),</span><br><span class="line">        RichText(</span><br><span class="line">            textAlign: TextAlign.justify,</span><br><span class="line">            maxLines: <span class="number">2</span>,</span><br><span class="line">            text: TextSpan(</span><br><span class="line">                <span class="comment">//协议说明文案</span></span><br><span class="line">                text: <span class="string">"阅读并同意"</span>,</span><br><span class="line">                style: <span class="keyword">const</span> TextStyle(color: Colors.grey),</span><br><span class="line">                children: [</span><br><span class="line">                  <span class="comment">// Expanded(child: )</span></span><br><span class="line">                  TextSpan(</span><br><span class="line">                    text: <span class="string">"《喔刷伙伴Pro支付经销商协议》"</span>,</span><br><span class="line">                    style: <span class="keyword">const</span> TextStyle(color: Colors.blue),</span><br><span class="line">                    recognizer: TapGestureRecognizer()</span><br><span class="line">                      ..onTap = () &#123;</span><br><span class="line">                        opendUserProtocol();</span><br><span class="line">                      &#125;,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">const</span> TextSpan(</span><br><span class="line">                      text: <span class="string">"\n与"</span>, style: TextStyle(color: Colors.grey)),</span><br><span class="line">                  TextSpan(</span><br><span class="line">                    text: <span class="string">"《隐私协议》"</span>,</span><br><span class="line">                    style: <span class="keyword">const</span> TextStyle(color: Colors.blue),</span><br><span class="line">                    recognizer: TapGestureRecognizer()</span><br><span class="line">                      ..onTap = () &#123;</span><br><span class="line">                        opendUserProtocol();</span><br><span class="line">                      &#125;,</span><br><span class="line">                  )</span><br><span class="line">                ]))</span><br><span class="line">      ]),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*打开协议*/</span></span><br><span class="line">  opendUserProtocol() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  getNextBtn() &#123;</span><br><span class="line">    <span class="keyword">final</span> size = MediaQuery.of(context).size;</span><br><span class="line">    <span class="keyword">return</span> TextButton(</span><br><span class="line">        onPressed: _onPressed(<span class="string">""</span>),</span><br><span class="line">        child: <span class="keyword">const</span> Text(<span class="string">"下一步"</span>),</span><br><span class="line">        autofocus: <span class="keyword">true</span>,</span><br><span class="line">        <span class="comment">/*style: TextButton.styleFrom(</span></span><br><span class="line"><span class="comment">            //定义文本样式 这里设置的颜色是不起作用的</span></span><br><span class="line"><span class="comment">            textStyle: const TextStyle(fontSize: 19,color: Colors.white),</span></span><br><span class="line"><span class="comment">            padding: const EdgeInsets.all(15),</span></span><br><span class="line"><span class="comment">            backgroundColor: const Color.fromRGBO(153, 153, 153, 0.3)</span></span><br><span class="line"><span class="comment">          ),*/</span></span><br><span class="line">        style: ButtonStyle(</span><br><span class="line">            <span class="comment">//定义文本样式 这里设置的颜色是不起作用的</span></span><br><span class="line">            textStyle: MaterialStateProperty.all(</span><br><span class="line">              <span class="keyword">const</span> TextStyle(</span><br><span class="line">                  fontSize: <span class="number">19</span>, color: Color.fromRGBO(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">0.3</span>)),</span><br><span class="line">            ),</span><br><span class="line">            <span class="comment">//设置按钮字体颜色</span></span><br><span class="line">            foregroundColor: MaterialStateProperty.resolveWith((states) &#123;</span><br><span class="line">              <span class="keyword">if</span> (states.contains(MaterialState.focused) &amp;&amp;</span><br><span class="line">                  !states.contains(MaterialState.pressed)) &#123;</span><br><span class="line">                <span class="comment">//获取焦点时的颜色</span></span><br><span class="line">                <span class="keyword">return</span> Colors.blue;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (states.contains(MaterialState.pressed)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Colors.red;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> Colors.white;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="comment">//按钮的背景颜色</span></span><br><span class="line">            backgroundColor: MaterialStateProperty.resolveWith((states) &#123;</span><br><span class="line">              <span class="keyword">const</span> btnBGColor = Color.fromRGBO(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">0.3</span>);</span><br><span class="line">              <span class="keyword">if</span> (states.contains(MaterialState.pressed)) &#123;</span><br><span class="line">                <span class="keyword">return</span> btnBGColor;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> btnBGColor;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="comment">//padding: MaterialStateProperty.all(EdgeInsets.fromLTRB(15, 0, 15, 0)),</span></span><br><span class="line">            <span class="comment">//设置按钮大小</span></span><br><span class="line">            minimumSize: MaterialStateProperty.all(Size(size.width, <span class="number">52</span>)),</span><br><span class="line">            <span class="comment">//设置水波纹颜色</span></span><br><span class="line">            overlayColor: MaterialStateProperty.all(Colors.purple)));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*按钮事件*/</span></span><br><span class="line">  _onPressed(states) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"点击了按钮"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*单元格*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BoxCellContainer</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> placeholder;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> iconName;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int</span> index;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> BoxCellContainer(<span class="keyword">this</span>.placeholder, <span class="keyword">this</span>.iconName, <span class="keyword">this</span>.index,</span><br><span class="line">      &#123;Key? key&#125;)</span><br><span class="line">      : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> SizedBox(</span><br><span class="line">      height: <span class="number">75</span>,</span><br><span class="line">      child: Column(children: [</span><br><span class="line">        Row(</span><br><span class="line">          mainAxisSize: MainAxisSize.max,</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Image(</span><br><span class="line">                width: <span class="number">20</span>,</span><br><span class="line">                height: <span class="number">20</span>,</span><br><span class="line">                image: AssetImage(iconName),</span><br><span class="line">                fit: BoxFit.contain),</span><br><span class="line">            Expanded(</span><br><span class="line">              child: CupertinoTextField(</span><br><span class="line">                padding: <span class="keyword">const</span> EdgeInsets.only(left: <span class="number">15</span>, right: <span class="number">40</span>),</span><br><span class="line">                placeholder: placeholder,</span><br><span class="line">                decoration: BoxDecoration(</span><br><span class="line">                    borderRadius: BorderRadius.circular(<span class="number">2.0</span>),</span><br><span class="line">                    border: Border.all(</span><br><span class="line">                        color: <span class="keyword">const</span> Color.fromRGBO(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">                        style: BorderStyle.solid,</span><br><span class="line">                        width: <span class="number">2.0</span>)),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">0</span>)</span><br><span class="line">              Image(</span><br><span class="line">                  width: <span class="number">20</span>,</span><br><span class="line">                  height: <span class="number">20</span>,</span><br><span class="line">                  image: AssetImage(Toast2.loadImage(<span class="string">"btn_inputbox_scan_nor"</span>)),</span><br><span class="line">                  fit: BoxFit.cover),</span><br><span class="line">            <span class="comment">//获取验证码</span></span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">2</span>)</span><br><span class="line">              FlatButton(</span><br><span class="line">                  child: <span class="keyword">const</span> Text(<span class="string">"获取验证码"</span>),</span><br><span class="line">                  color: <span class="keyword">const</span> Color.fromRGBO(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">0.3</span>),</span><br><span class="line">                  textColor: Colors.white,</span><br><span class="line">                  onPressed: () &#123;&#125;)</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">const</span> Divider(</span><br><span class="line">            height: <span class="number">10</span>,</span><br><span class="line">            <span class="comment">//分割线区域的高度，并非分割线的高度</span></span><br><span class="line">            thickness: <span class="number">0.8</span>,</span><br><span class="line">            <span class="comment">//分割线的厚度，真正的分割线的高度</span></span><br><span class="line">            color: Color.fromRGBO(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">0.3</span>),</span><br><span class="line">            <span class="comment">//分割线颜色</span></span><br><span class="line">            indent: <span class="number">0</span>,</span><br><span class="line">            <span class="comment">//起点缩进距离</span></span><br><span class="line">            endIndent: <span class="number">0</span>) <span class="comment">//终点缩进距离</span></span><br><span class="line">      ]),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>flutter</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>《挽秋》</title>
    <url>/2021/08/21/poetry20210821%20102025/</url>
    <content><![CDATA[<p>庭前落尽梧桐，红尘尽染萧风。<br>黄粱舞色一梦，承旧已逝春秋。<br>贫富孰与睢鸠，黄泉背赴一宿。<br>叶落参差为何？黄昏秃柳间驹。<br>劳陇头五六清，道尽天下三分。<br>日暮剪烛皈客，人言西沉可多。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《掩埋》</title>
    <url>/2020/05/28/poetry20200528021344/</url>
    <content><![CDATA[<p>笑雨春风夕迟顾，青山遗忘任几出，无数，彷徨来时路。<br>青春荏苒流光束，寒红尤染雪里途，昙华，残刃何年纷葬墓。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《千嶂古木昏》</title>
    <url>/2020/05/14/poetry20200514110322/</url>
    <content><![CDATA[<p>千嶂厌浥，红楼过淅沥。取次草莺风嘻戏，沧澜重逢落残棋。<br>轻诋哀梨蒸食，川行东流人顾昏，捕云不休未前门，万里行舟浪迹深。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《难》</title>
    <url>/2020/05/10/poetry20200510100216/</url>
    <content><![CDATA[<p>素鸡诚。面围纶。直味中规不合饂。<br>暂声切。火煨炙。熟梨蒸食，实指为瞒。<br>难。难。难。<br>腹中宴。心切馋。人急伴作深巷湾。<br>拟情还。待君观。历三红愿，再点前缘。<br>伴。伴。伴。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《心徜徉》</title>
    <url>/2020/04/30/poetry20200430120106/</url>
    <content><![CDATA[<p>云卷谧疏层羽暮，斜阳卸下殇情袱。<br>作苦诗词风勤雨，许趁惊鸿绘婉玉。<br>入梦枕枝残片香，卿月此身伴君长。<br>凭栏共赏心徜徉，从此不再话沧桑。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《朝暮有情》</title>
    <url>/2020/04/24/poetry20200424010321/</url>
    <content><![CDATA[<p>凛寒无花江潋潋，暧濯木秾李纤纤。沌河泽缪绕，浑浑暮暮朝。</p>
<p>罗敷桑蚕女，襦绮妍姿玉。蜂腹花与蜜，青志有情痴。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《浪声有愧》</title>
    <url>/2020/04/15/poetry20200415042103/</url>
    <content><![CDATA[<p>没有大漠<br>只有慢慢消失在<br>窗台下、栅栏处、林榆间、眼泪里的夕阳<br>夜里带着疲惫深邃的黑<br>无畏闯荡只为那生来的一丝倔强<br>如果桃源的安宁是一方净土<br>城市楼宇的繁华是此起彼伏的褶皱<br>我愿意放下所有<br>为你的孤独安放自由<br>插上翅膀伴一叶扁舟<br>许下一世的温柔<br>水潭清幽可见鱼儿轻游<br>你说那是束缚、不可抗拒的理由<br>你说羡慕大海碧蓝、海天相阔、鲸鱼遨游<br>你说风里雨里、都安静地沉默在水里再也不会淋雨<br>混沌之中早已冥冥<br>偏执执拗仍不回头<br>我领悟这蚍蜉撼树的道理<br>饮一碗清粥<br>续一壶浊酒<br>浇一快要枯萎的盆植<br>怀揣一席的温柔 洒满整个深秋<br>把遗憾搁在昨天 并非我本意<br>折一只船 用于存放大海<br>有想着波涛汹涌 实则浪声有愧<br>于是把昨天幻化成了文字<br>埋藏在了你无声的岁月里<br>现在的你<br>你懂 他也懂<br>有很多解释没有等到需要理解那一天<br>还是那种感觉<br>想将你送去港湾 为了躲避赤裸的人间<br>昼夜如斯 我们都在感同<br>你不在是你<br>我也不再做自己的一抹云烟</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《难咎》</title>
    <url>/2020/04/10/poetry20200410120123/</url>
    <content><![CDATA[<p>红梅难咎赋雪搂，帘卷交织人依旧。恩怨离仇，烧一烛疏楼。<br>岁杪无凭逆西洲，炉眠翁媪白发守。户落轻鸥，暖一时清流。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《牵肠梦》</title>
    <url>/2020/03/30/poetry20200330010604/</url>
    <content><![CDATA[<p>雨矢入暮空人逢，万籁东西无影重。遗恨风吹花残悴，人言醉，八百回？<br>落里雪红牵肠梦，痴人难辨归里尘。芳迟羞阻冷媒户，窣身处，声噫呜。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《惊鸿》</title>
    <url>/2020/03/28/poetry20200328123409/</url>
    <content><![CDATA[<p>桃绯闭涩落肩红，惜柔暖阳画里梦。<br>最右一枝摇曳风，扶手依翩若惊鸿。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《落日残红》</title>
    <url>/2020/03/27/poetry20200327110824/</url>
    <content><![CDATA[<p>桃花褪红漫飘渺，风吹拂梢千丝绕。<br>遍地黄花窈欲高，落日残红风絮遥。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《皑城》</title>
    <url>/2020/03/26/poetry20200326124002/</url>
    <content><![CDATA[<p>青山淇岸汀白芷，瑶城皑皑凝波姿。<br>清风丽影常情客，载酒佳话人来思。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《桃花落》</title>
    <url>/2020/03/25/poetry20200325112308/</url>
    <content><![CDATA[<p>映入桃花池畔前，画红漪沦年年妍。<br>一丝一缕沁心房，执迷不误落红浅。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《兰花吟》</title>
    <url>/2020/03/24/poetry20200324130249/</url>
    <content><![CDATA[<p>馥气芬芳尘染华，春烟彩蝶永携跋。<br>兰植为期托香繋，不及千山伴晚霞。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《春红》</title>
    <url>/2020/03/22/poetry20200322132112/</url>
    <content><![CDATA[<p>白云作伴遍地黄，桃花褪红人情郎。<br>人前烟雨润琵琶，雨凝泪珠傍谁旁。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《往昔》</title>
    <url>/2020/03/22/poetry20200322030122/</url>
    <content><![CDATA[<p>草莺绕飞堤，独自殇离凄。<br>落松曾规啼，已成旧时昔。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《醉无可托》</title>
    <url>/2020/03/22/poetry20200323160213/</url>
    <content><![CDATA[<p>斜阳西照已迢迢，氤氲无限渺。晦桥柔行太匆匆，人流散尽东风中。<br>欲解灯前念谁何，一杯月可托。问君生畏何事多？最难异乡醉墙说。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《埋藏》</title>
    <url>/2020/03/21/poetry20200321171321/</url>
    <content><![CDATA[<p>盈花落尽年少轻狂，白首青丝泪且两行。<br>堪岁月缕缕成风霜，一腔热血为谁埋藏。<br>媚了红妆红尘向往，恩恩怨怨处处痴狂。<br>纵马沧桑天地相忘，云下青衫浴沐悲伤。<br>繁华荡气逐梦一场，朝暮浮云赴寄谁望。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《待何年》</title>
    <url>/2020/03/21/poetry20200321170326/</url>
    <content><![CDATA[<p>邀明赴月春何年，年年相恃池畔残。<br>莺飞四月杨柳堤，堪情一世误尘缘。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《笺相思》</title>
    <url>/2020/03/20/poetry20200320020123/</url>
    <content><![CDATA[<p>知熟心相月，谈秋往事怯。<br>花窗连枝妍，辗转红尘悦。<br>冬日压覆雪，城池患得挟，<br>生死自暗驿，寥寥两世决。<br>夜半鬓白丝，随笔落相思。<br>展卷心切辞，化骨笺纸史。<br>风露重来过，纠葛纷如我<br>茶酒情可多，塑世红莲坐。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《四月天》</title>
    <url>/2020/03/19/poetry20200319160323/</url>
    <content><![CDATA[<p>你是人间四月天，初芽泛绿伴炊烟。<br>谈笑三千遇柔肠，半世年华情模样。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《林斜阳》</title>
    <url>/2020/03/19/poetry20200319151235/</url>
    <content><![CDATA[<p>闲歇归兮天苍茫，林榭下日落残阳。<br>残枝畏寒几阶漫，共赴山河醉春山。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《九寒花开》</title>
    <url>/2020/03/18/poetry20200318140924/</url>
    <content><![CDATA[<p>九寒九尽花开，几阶寒清，孤伶一零星。<br>若熠星火怀长情，诉愿厢伴向天明。<br>烟黔五内，一语成谶，朝夕各自揾。<br>满笑风城，试问人间作客人？</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《梦杳云阙》</title>
    <url>/2020/02/19/poetry20200219101102/</url>
    <content><![CDATA[<p>梦杳云阙，绢生琉璃月。野游乌榆湛云穴，仓皇破砧残垣。<br>吟酌思复千年，昙花为雨难现。闲居朝屏饮血，月魅中疏圆缺。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《道别》</title>
    <url>/2020/01/25/poetry20200125011002/</url>
    <content><![CDATA[<p>雨捻露珠落日缓，长河风骨执平川。<br>残月诗里离合道，情上阁楼玉弦消。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《孟春宿雨》</title>
    <url>/2020/01/18/poetry20200118022002/</url>
    <content><![CDATA[<p>孟春宿雨，秩满花明又柳暗。平纱长梦，近在咫尺中。<br>行以朝夕，沧海白云济。人来去。知新故旧，醉卧黄昏骤。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac上安装Cocoapods基础和一些踩坑记录</title>
    <url>/2019/12/06/technology20191206020145/</url>
    <content><![CDATA[<h5 id="Cocoapods-为Xcode中的项目添加依赖库，我其实觉得这个真不好用，用过Android-Studio本身自带，链接第三方依赖库比这个方便。废话不多说，直接上步骤。"><a href="#Cocoapods-为Xcode中的项目添加依赖库，我其实觉得这个真不好用，用过Android-Studio本身自带，链接第三方依赖库比这个方便。废话不多说，直接上步骤。" class="headerlink" title="Cocoapods 为Xcode中的项目添加依赖库，我其实觉得这个真不好用，用过Android Studio本身自带，链接第三方依赖库比这个方便。废话不多说，直接上步骤。"></a>Cocoapods 为Xcode中的项目添加依赖库，我其实觉得这个真不好用，用过Android Studio本身自带，链接第三方依赖库比这个方便。废话不多说，直接上步骤。</h5><h4 id="Cocoapods安装步骤"><a href="#Cocoapods安装步骤" class="headerlink" title="Cocoapods安装步骤"></a>Cocoapods安装步骤</h4><p><strong>一、更新Ruby环境</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem update --system</span><br></pre></td></tr></table></figure>
<p><strong>二、换Ruby镜像</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem sources -l  #查看当前镜像</span><br><span class="line">gem sources --remove https:&#x2F;&#x2F;rubygems.org&#x2F; #移除当前的镜像 淘宝的Ruby镜像也不更新</span><br><span class="line">gem sources -a https:&#x2F;&#x2F;gems.ruby-china.com  #换成这个</span><br></pre></td></tr></table></figure>
<p><strong>三、安装CocoaPods</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure>

<p>上面如果没有权限需要输入 <code>sudo gem install -n /usr/local/bin cocoapods</code> ，横下以下是各种折腾。</p>
<hr>
<p><font color="#4183C4"> 如果出现: </font>  MacBook-Air ~ % sudo gem install cocoapods<br>ERROR:  Could not find a valid gem ‘cocoapods’ (&gt;= 0), here is why:<br>          Unable to download data from <a href="https://rubygems.org/" target="_blank" rel="noopener">https://rubygems.org/</a> - timed out (<a href="https://rubygems.org/specs.4.8.gz" target="_blank" rel="noopener">https://rubygems.org/specs.4.8.gz</a>)</p>
<p>请检查 <code>gem sources -l</code>是否是 <a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a></p>
<p><font color="red">如果再出现各种奇葩问题，这儿可以卸载 gem 安装的所有东西然后再重新安装。</font></p>
<p>可以在终端输入 <code>sudo rm -rf /usr/local/bin/pod</code>  然后在查看<code>gem list</code>看到中间部分以cocoapods开头的列表  </p>
<p>cocoapods (1.9.2)<br>cocoapods-core (1.9.2)<br>cocoapods-deintegrate (1.0.4)<br>cocoapods-downloader (1.3.0)<br>cocoapods-plugins (1.0.0)<br>cocoapods-search (1.0.0)<br>cocoapods-stats (1.1.0)<br>cocoapods-trunk (1.5.0)<br>cocoapods-try (1.2.0)</p>
<p>这儿以第一个为例挨个卸载，sudo gem uninstall cocoapods -v 1.9.2  sudo gem uninstall cocoapods-core -v 1.9.2 后面的类似。删除过后再执行重新<code>sudo gem install cocoapods</code></p>
<p><font color="red">上面的完成过后再次执行下面的命令，关键的时候来了，呵呵呵…. (网上说 这个过程是漫长的，要有耐心)，这哪是慢，根本不行好么，坑死人了。</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pod setup</span><br></pre></td></tr></table></figure>

<p>看别人说pod setup 过后会出现 Setting up CocoaPods master repo这个，这个至少会去下载，我特么直接出现Setup completed 这个，无论怎么网上的找方法试过了都没折，自己的笔记本上再 <font color="#4183C4">活动监视器</font> 搜索git至少还在 10k/s再走，然后之前回家等了两三个小时 然后居然直接中断了，什么垃圾东西呀，这是人干的事么。</p>
<p>我公司这一台什么都没有下载直接Setup completed 说完成了，clone repo到本地成功，压根就没有下载下来。然后我在电脑上执行 <code>pod search AFNetworking</code></p>
<p>是100%的出现 <font color="#4183C4">[!] Unable to find a pod with name, author, summary, or description matching AFNetworking</font></p>
<p>关于出现这个的帖子<a href="https://www.cnblogs.com/huaida/p/12701080.html" target="_blank" rel="noopener">https://www.cnblogs.com/huaida/p/12701080.html</a>,大部分说是因为缓存,然后删除~/Library/Caches/CocoaPods/search_index.json,这根本没用好么，然后试了一下这个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pod repo remove master</span><br><span class="line">cd ~&#x2F;.cocoapods&#x2F;repos</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;CocoaPods&#x2F;Specs.git master</span><br><span class="line">rm ~&#x2F;Library&#x2F;Caches&#x2F;CocoaPods&#x2F;search_index.json</span><br><span class="line">pod search afnetworking</span><br></pre></td></tr></table></figure>

<p>这个执行到从git仓库拉一样的慢成”苟“我去这个也太受不了了，恶心人么，这不是。</p>
<p>冷静一下 <code>pod setup</code>本身是把这个 <a href="https://github.com/CocoaPods/Specs.git" target="_blank" rel="noopener">https://github.com/CocoaPods/Specs.git</a> 地址中的文件clone下来，这儿慢的原因就是从git上下载，后来了解到可以直接把这个仓库克隆到国内的码云<a href="https://gitee.com" target="_blank" rel="noopener">https://gitee.com</a> ,这样子再从码云上clone下来。</p>
<p>然后这个是从git导入到码云上的地址: <a href="https://gitee.com/Kziwws/Specs.git" target="_blank" rel="noopener">https://gitee.com/Kziwws/Specs.git</a> ，然后把这句<code>git clone https://github.com/CocoaPods/Specs.git master</code> 换成 <code>git clone https://gitee.com/Kziwws/Specs.git</code>，这个clone 到 ~/.cocoapods/repos 这个目录。这下速度从三四个小时变成七八分钟就完成了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@MacBook-Pro ~ % cd ~&#x2F;.cocoapods&#x2F;</span><br><span class="line">@MacBook-Pro .cocoapods % du -sh *</span><br><span class="line">1.6G	repos #这大概1.81G呢 你得稍微等一下</span><br></pre></td></tr></table></figure>



<p>其实上面 <code>pod setup</code>和 <code>git clone https://gitee.com/Kziwws/Specs.git ~/.cocoapods/repos/master</code>等效的。如果上面不行用这个句命令。</p>
<hr>
<p>经过上面一些列的折腾基本上一会下载完成了，然后你再输入 <code>pod search AFNetworking</code>,如果出现 Creating search index for spec repo ‘master’.. Done! 一直等待。你就安静等一会儿。 </p>
<p><font color="#4183C4">如果出现:</font> </p>
<p>[!] CDN: trunk URL couldn’t be downloaded: <a href="https://cdn.cocoapods.org/all_pods_versions_8_9_b.txt" target="_blank" rel="noopener">https://cdn.cocoapods.org/all_pods_versions_8_9_b.txt</a> Response: Timeout was reached</p>
<p>或者</p>
<p>[!] CDN: trunk Repo update failed - 3 error(s):</p>
<p>CDN: trunk URL couldn’t be downloaded: <a href="https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.0/XJNetworking.podspec.json" target="_blank" rel="noopener">https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.0/XJNetworking.podspec.json</a> Response: Timeout was reached</p>
<p>CDN: trunk URL couldn’t be downloaded: <a href="https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.1/XJNetworking.podspec.json" target="_blank" rel="noopener">https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.1/XJNetworking.podspec.json</a> Response: Timeout was reached</p>
<p>CDN: trunk URL couldn’t be downloaded: <a href="https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.2/XJNetworking.podspec.json" target="_blank" rel="noopener">https://cdn.cocoapods.org/Specs/a/e/1/XJNetworking/1.0.2/XJNetworking.podspec.json</a> Response: Timeout was reached</p>
<p><font color="red">解决:CDN: trunk URL couldn’t be downloaded </font>,参考一下这篇帖子<a href="https://blog.csdn.net/miaopf123/article/details/104406595" target="_blank" rel="noopener">https://blog.csdn.net/miaopf123/article/details/104406595</a>,然后再 pod search AFNetworking 会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-&gt; AFNetworking (4.0.1)</span><br><span class="line">   A delightful networking framework for Apple platforms.</span><br><span class="line">   pod &#39;AFNetworking&#39;, &#39;~&gt; 4.0.1&#39;</span><br><span class="line">   - Homepage: https:&#x2F;&#x2F;github.com&#x2F;AFNetworking&#x2F;AFNetworking</span><br><span class="line">   - Source:   https:&#x2F;&#x2F;github.com&#x2F;AFNetworking&#x2F;AFNetworking.git</span><br><span class="line">   - Versions: 4.0.1, 4.0.0, 3.2.1, 3.2.0, 3.1.0, 3.0.4, 3.0.3, 3.0.2, 3.0.1,</span><br><span class="line">   3.0.0, 3.0.0-beta.3, 3.0.0-beta.2, 3.0.0-beta.1, 2.7.0, 2.6.3, 2.6.2, 2.6.1,</span><br><span class="line">   2.6.0, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.1, 2.4.0, 2.3.1, 2.3.0, 2.2.4,</span><br><span class="line">   2.2.3, 2.2.2, 2.2.1, 2.2.0, 2.1.0, 2.0.3, 2.0.2, 2.0.1, 2.0.0, 2.0.0-RC3,</span><br><span class="line">   2.0.0-RC2, 2.0.0-RC1, 1.3.4, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.1, 1.2.0, 1.1.0,</span><br><span class="line">   1.0.1, 1.0, 1.0RC3, 1.0RC2, 1.0RC1, 0.10.1, 0.10.0, 0.9.2, 0.9.1, 0.9.0,</span><br><span class="line">   0.7.0, 0.5.1 [master repo] ～</span><br></pre></td></tr></table></figure>

<p>这儿在多说一点，如果经过上面的折腾还是没有成功，你直接<a href="https://gitee.com/Kziwws/Specs.git" target="_blank" rel="noopener">https://gitee.com/Kziwws/Specs.git</a> 下载这个到桌面然后zip大概 367M，也相对挺快的。</p>
<p><img src="https://s1.ax1x.com/2020/06/19/Nu1kSU.png" alt=""></p>
<p>把右边的标记1～8的文件拷贝到左边的目录里，然后右边标记的零的如果直接拷贝不过来的，直接用记事本挨个打开把内容拷贝到右边来的文件相应的里面来。然后执行 <code>pod repo remove trunk</code>，基本就可以使用了。</p>
<hr>
<p><strong>四、CocoaPods基础使用</strong></p>
<p>  一、找到项目目录 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;Users&#x2F;wenshuang&#x2F;Desktop&#x2F;testPodDemo</span><br><span class="line">touch  Podfile   #项目里会出现Podfile文件</span><br><span class="line">vim pod file     #开始打开Podfile文件</span><br></pre></td></tr></table></figure>

<p> 二、输入i 开始编辑，输入所需要到的第三方库,如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">platform :ios,‘8.0’</span><br><span class="line">target‘testPodDemo’do</span><br><span class="line">pod‘AFNetworking’,‘~&gt; 3.0.4’</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>三、在按 esc 然后输入 : 然后再输入wq 然后回车，保存。</p>
<p>四、在终端里输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure>

<p>然后等一会就会出现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MacBook-Pro testPodDemo % pod install</span><br><span class="line">Analyzing dependencies</span><br><span class="line">Downloading dependencies</span><br><span class="line">Installing AFNetworking (3.0.4)</span><br><span class="line">Generating Pods project</span><br><span class="line">Integrating client project</span><br><span class="line"></span><br><span class="line">[!] Please close any current Xcode sessions and use &#96;testPodDemo.xcworkspace&#96; for this project from now on.</span><br><span class="line"></span><br><span class="line">Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.</span><br></pre></td></tr></table></figure>

<p>然后再用Xcode重新打开 testPodDemo.xcworkspace 这个文件就可以了。</p>
]]></content>
      <categories>
        <category>cocoapods</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocoapods</tag>
      </tags>
  </entry>
  <entry>
    <title>《庾居》</title>
    <url>/2019/10/17/poetry20191017032345/</url>
    <content><![CDATA[<p>顾长人决终渐歇<br>谁执低眉纸迹往事越<br>翌生两世<br>患失不惑<br>夜长身影疏狂<br>薄年清辉待敛容<br>袂尔星辰夜寐<br>蕎麦苦瘠白花开<br>菡萏染淤清浮来<br>不辨妍媸<br>不论相识<br>不可思量<br>心生久腹分自当<br>背时离其问何妨<br>结侣提携<br>夙明初日熟稔乡<br>共卮回时残缺辞<br>生有所畏<br>清霄温凉<br>误尽人间芳菲</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《妄念》</title>
    <url>/2019/09/01/poetry20190901052013/</url>
    <content><![CDATA[<p>“我们凭着本能，在黑夜中开了迷宫的门，没有走出去。在一次次的碰壁中，我们擦燃了火焰。一个人就是木屑或是草堆，是易燃的，不然何来那么多的心如死灰。”</p>
<p>嘴唇尝到泪水，<br>身体正经历一个雨天，它在收尾，可收尾是那么迟缓。<br>用颤栗的手掌握着你临近深渊的手掌，<br>将散的魂魄仍在寻觅缺失的螺丝，<br>我无法解决自己在人世间松动的问题，<br>为你摇曳，不确定何为悲，何为欢。<br>一直坠，<br>也一直追。<br>鲸鱼搁浅，为一生到异地，见风景，死而无憾。<br>我拂逆青春太多年，匆忙成熟，只为你摘我一瓣花。<br>花，你摘去，香气附赠。<br>郁郁的我啊，<br>去舀一勺你的泪，来解渴，来弥补缺失，来劝说自己值得。<br>秋天凝一滴心头血给这个清晨，<br>露珠重，滑离了叶。<br>大树于是恸哭。<br>你未醒来，我未醒来的清晨，<br>鸟鸣过于烈脆，如恶语，不承认我们的重叠。<br>瓜分昙花一现的温柔。<br>洗去昨夜的风。</p>
<p>《转自片刻-卡尔西法》</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>转录</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator中XMLHttpReques 网络数据请求</title>
    <url>/2019/08/01/technology20190801101045/</url>
    <content><![CDATA[<p>XMLHttpRequest 用于短连接, Web 平台上最广泛使用的标准网络接口，在IOS中 类似 AFNetworking 做IOS的应该知道。标准文档请参考 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="noopener">MDN 中文文档</a>。</p>
<p><strong>初始化</strong></p>
<ul>
<li>可以直接使用 <code>new XMLHttpRequest()</code> 来创建一个连接对象。</li>
<li><code>cc.loader.getXMLHttpRequest()</code> 来创建。</li>
</ul>
<p><strong>使用</strong><br>提交一个表单，它里面有两个字段，假如为 phone = 10086888888 和 password=1234`x。参数有特殊符号转换为ASCII HEX值。如果你用 POST 方法，那么服务器将会接收到一个字符串类似于下面三种情况之一，其中的区别依赖于你采用何种编码类型:</p>
<ul>
<li><p>POST ,Content-Type 为  application/x-www-form-urlencoded 编码类型</p>
<blockquote>
<p> Content-Type: application/x-www-form-urlencoded<br>phone=10086888888&amp;password=1234%60x</p>
</blockquote>
</li>
<li><p>POST ,Content-Type 为  text/plain 编码类型</p>
<blockquote>
<p>Content-Type: text/plain<br>phone=10086888888<br>password=1234%60x</p>
</blockquote>
</li>
<li><p>POST ,Content-Type 为  multipart/form-data 编码类型<br>multipart/form-data不会对参数编码，使用的boundary(分割线)，相当于&amp;，<br>boundary的值是——–314911788813839</p>
<blockquote>
<p>Content-Type: multipart/form-data;<br>——–314911788813839<br>Content-Disposition: form-data; name=”phone”<br>10086888888&amp;<br>——–314911788813839<br>Content-Disposition: form-data; name=”password”<br>1234%60x<br>——–314911788813839</p>
</blockquote>
</li>
<li><p>使用 GET 方法 请求Content-Type 属性会被忽略，像下面这样的字符串将被简单的附加到 URL</p>
<blockquote>
<p>?phone=10086888888&amp;password=1234%60x</p>
</blockquote>
</li>
</ul>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" target="_blank" rel="noopener">XMLHttpRequest的基础使用在MDN web docs参考</a>,<font color="red"></p>
<p>直接上代码。如果有问题可以下面评论留言交流。</font></p>
<a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMLRequest</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">constructor</span>()&#123;</span><br><span class="line">        <span class="comment">//console.log('constructor');</span></span><br><span class="line">        <span class="keyword">this</span>._token = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>._timeout = <span class="number">10.0</span> * <span class="number">1000</span>; <span class="comment">//10s 请求超时时间</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>url Url请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>params 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>callback 数据回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">get</span>(url,params,callback)&#123;</span><br><span class="line">        <span class="keyword">this</span>.logintoken(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> requestUrl = cc.config.host_address + url + <span class="string">"?"</span>;</span><br><span class="line">            <span class="keyword">if</span>(params)&#123;</span><br><span class="line">               params = <span class="keyword">this</span>.queryStringFromParameters(params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.xhrRequest(<span class="string">"GET"</span>,requestUrl,params,<span class="literal">true</span>,<span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>)) &#123;</span><br><span class="line">                    <span class="keyword">var</span> response = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                    <span class="built_in">console</span>.log(requestUrl + params + <span class="string">"\n\n"</span>+ <span class="built_in">JSON</span>.stringify(response));</span><br><span class="line">                    <span class="keyword">if</span>(response[<span class="string">"code"</span>] != <span class="number">0</span>)&#123;</span><br><span class="line">                        cc.hud.show(<span class="number">1.5</span>,response[<span class="string">"msg"</span>],<span class="literal">undefined</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> data = response[<span class="string">"data"</span>];</span><br><span class="line">                        <span class="keyword">if</span>(data &amp;&amp; callback)&#123;</span><br><span class="line">                            callback(data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">        &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>url Url请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>params 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>callback 数据回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    post(url,params,callback)&#123;</span><br><span class="line">        <span class="keyword">this</span>.logintoken(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> requestUrl = cc.config.host_address + url;</span><br><span class="line">            <span class="keyword">if</span>(params)&#123;</span><br><span class="line">               params = <span class="keyword">this</span>.queryStringFromParameters(params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.xhrRequest(<span class="string">"POST"</span>,requestUrl,params,<span class="literal">true</span>,<span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>)) &#123;</span><br><span class="line">                    <span class="keyword">var</span> response = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                    <span class="built_in">console</span>.log(requestUrl + params + <span class="string">"\n\n"</span>+ <span class="built_in">JSON</span>.stringify(response));</span><br><span class="line">                    <span class="keyword">if</span>(response[<span class="string">"code"</span>] != <span class="number">0</span>)&#123;</span><br><span class="line">                        cc.hud.show(<span class="number">1.5</span>,response[<span class="string">"msg"</span>],<span class="literal">undefined</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> data = response[<span class="string">"data"</span>];</span><br><span class="line">                        <span class="keyword">if</span>(data &amp;&amp; callback)&#123;</span><br><span class="line">                            callback(data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">        &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化一个请求类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>method "POST GET"</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>params 请求的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>async 是否移步</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>onreadystatechangeCallback 回调函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    xhrRequest(method, url, params, <span class="keyword">async</span>,onreadystatechangeCallback)&#123;</span><br><span class="line">        <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        xhr.timeout = <span class="keyword">this</span>._timeout;</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(onreadystatechangeCallback)&#123;</span><br><span class="line">               onreadystatechangeCallback(xhr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.open(method, url, <span class="keyword">async</span>);</span><br><span class="line">        xhr.setRequestHeader(<span class="string">"Content-Type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">        <span class="keyword">if</span>(cc.request._token)&#123;</span><br><span class="line">            xhr.setRequestHeader(<span class="string">"token"</span>,cc.request._token);</span><br><span class="line">        &#125;</span><br><span class="line">        xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line">        xhr.send(params);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 登录token</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    logintoken(callback)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>._token == <span class="literal">undefined</span> ||<span class="keyword">this</span>._token == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> requestUrl = cc.config.host_address + cc.config.login;</span><br><span class="line">            <span class="keyword">let</span> params = &#123;<span class="attr">password</span>: <span class="string">"123456"</span>,<span class="attr">phone</span>:<span class="string">"18888888888"</span>&#125;;</span><br><span class="line">            <span class="keyword">var</span> mutablePairs = <span class="keyword">this</span>.queryStringFromParameters(params);</span><br><span class="line">            <span class="keyword">this</span>.xhrRequest(<span class="string">"POST"</span>,requestUrl,mutablePairs,<span class="literal">true</span>,<span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>)</span>&#123;</span><br><span class="line">                xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> response = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                        cc.request._token = response[<span class="string">"data"</span>];</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"登录校验token "</span> + cc.request._token);</span><br><span class="line">                        <span class="keyword">if</span>(callback)&#123;</span><br><span class="line">                            callback();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(callback)&#123;</span><br><span class="line">                callback();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典转拼接的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    queryStringFromParameters(parameters)&#123;</span><br><span class="line">        <span class="keyword">var</span> mutablePairs = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> res = <span class="built_in">Object</span>.keys(parameters).sort(); </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> res)&#123;  </span><br><span class="line">            <span class="keyword">let</span> tempkey = res[key];</span><br><span class="line">            <span class="keyword">let</span> value = parameters[res[key]];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(value))&#123;</span><br><span class="line">                mutablePairs += tempkey + <span class="string">"="</span> + <span class="built_in">JSON</span>.stringify(value) +<span class="string">"&amp;"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mutablePairs += tempkey + <span class="string">"="</span> + value +<span class="string">"&amp;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mutablePairs.length &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            mutablePairs = mutablePairs.substr(<span class="number">0</span>,mutablePairs.length<span class="number">-1</span>);</span><br><span class="line">            mutablePairs = <span class="built_in">encodeURI</span>(mutablePairs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mutablePairs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Set the imageView `image` with an `url` and a placeholder.</span></span><br><span class="line"><span class="comment">    * The download is asynchronous and cached.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param </span>url         The url for the image.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param </span>placeholder The image to be set initially, until the image request finishes.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    setImageWithURL(sprite,url, placeholderImage)&#123;</span><br><span class="line">        <span class="keyword">let</span> remoteUrl = url;</span><br><span class="line">        <span class="keyword">if</span>(placeholderImage)&#123;</span><br><span class="line">            <span class="keyword">let</span> pathURL = placeholderImage;</span><br><span class="line">            cc.loader.loadRes(pathURL, cc.SpriteFrame, <span class="function"><span class="keyword">function</span> (<span class="params">err, sf</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.spriteFrame = sf;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"error:"</span>+err);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(sprite));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(remoteUrl)&#123;</span><br><span class="line">            cc.loader.load(remoteUrl, <span class="function"><span class="keyword">function</span> (<span class="params">err, texture</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// Use texture to create sprite frame</span></span><br><span class="line">                <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.spriteFrame = <span class="keyword">new</span> cc.SpriteFrame(texture);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"加载网络图片出错:"</span>+ err);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(sprite));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* get XMLRequest</span></span><br><span class="line"><span class="comment">* <span class="doctag">@returns <span class="type">&#123;XMLRequest&#125;</span></span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> instance;</span><br><span class="line"><span class="keyword">var</span> getXMLRequest = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">        instance = <span class="keyword">new</span> XMLRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = cc.request = getXMLRequest();</span><br></pre></td></tr></table></figure>

<p>上面是对 XMLHttpRequest简单的封装</p>
<ul>
<li>网络数据调用:<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">第一个参数为你接口路径地址,第二个为参数字典。</span><br><span class="line"></span><br><span class="line">cc.request.post(cc.config.question_getrandonequestion,<span class="literal">null</span>,<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">     <span class="keyword">this</span>._data = response;</span><br><span class="line">     <span class="keyword">this</span>.setDataResponse(response);</span><br><span class="line">&#125;.bind(<span class="keyword">this</span>));</span><br></pre></td></tr></table></figure></li>
<li>远程图片Url调用:<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cc.request.setImageWithURL(<span class="keyword">this</span>.questionImg.getComponent(cc.Sprite),imgUrl);</span><br></pre></td></tr></table></figure>



</li>
</ul>
<p><strong>creator.d.ts加载本地图片的两种方式</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> pathURL = <span class="string">"singleColor"</span>;<span class="comment">//这儿指必须在 resources 目标下的资源图片</span></span><br><span class="line">cc.loader.loadRes(pathURL, cc.SpriteFrame, <span class="function"><span class="keyword">function</span> (<span class="params">err, sf</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">        <span class="keyword">this</span>.hudNode.getComponent(cc.Sprite).spriteFrame = sf;</span><br><span class="line">        <span class="keyword">this</span>.hudNode.color = cc.Color.BLACK;</span><br><span class="line">        <span class="keyword">this</span>.hudNode.opacity = <span class="number">230</span>;</span><br><span class="line">        <span class="comment">//透明度级联功能从 v2.0 开始已移除 节点的不透明度值是否影响其子节点，默认值为 true</span></span><br><span class="line">        <span class="comment">//this.hudNode.cascadeOpacity = false;</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"error:"</span>+err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.bind(<span class="keyword">this</span>));</span><br></pre></td></tr></table></figure>
<p>第二种加载出Texture 构造SpriteFrame ，Use texture to create sprite frame。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.hudNode.spriteFrame = <span class="keyword">new</span> cc.SpriteFrame(cc.textureCache.addImage(cc.url.raw(pathURL)));</span><br><span class="line"></span><br><span class="line">等效</span><br><span class="line"></span><br><span class="line">cc.loader.loadRes(pathURL, cc.SpriteFrame, <span class="function"><span class="keyword">function</span> (<span class="params">err, sf</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">        <span class="keyword">this</span>.spriteFrame = sf;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"error:"</span>+err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.bind(sprite));</span><br></pre></td></tr></table></figure>



<p>如果出现 同源策略禁止读取位于 ‘http://你的地址’ 的远程资源。（原因：凭据不支持，如果 CORS 头 ‘Access-Control-Allow-Origin’ 为 ‘*’）一般情况下 </p>
<ul>
<li><p>请求的url是aspx页面，则需要在aspx页面中添加代码：Response.AddHeader(“Access-Control-Allow-Origin”, “*”);</p>
</li>
<li><p>请求的url是PHP页面，则需要在PHP页面中添加代码：header(“Access-Control-Allow-Origin: *”);</p>
</li>
<li><p>请求的url是静态的html页面，则需要在页面中添加meta标签代码。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>cocosCreator</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocosCreator</tag>
      </tags>
  </entry>
  <entry>
    <title>《半承言》</title>
    <url>/2019/07/22/poetry20190722034245/</url>
    <content><![CDATA[<p>风雨如晦即君子，酒故重逢伴乌蓬。<br>匆揉四海据拥有，闲岁梦入北风中。</p>
<p>by:霜</p>
<p>[风雨如晦，鸡鸣不已。<br>既见君子，云胡不喜？<br>风雨交加昏天地，窗外鸡鸣声不息。<br>风雨之时见到你，心里怎能不欢喜。]</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《赤雨》</title>
    <url>/2019/07/07/poetry20190707032356/</url>
    <content><![CDATA[<p>隐雨飒沓檐声无边<br>淋落在晦黯之间<br>阴泛起了思恋<br>长天皓洁一瞬<br>是谁乱了经年<br>变迁红尘蔓延<br>把一缕缠绵化作美眷<br>誓言心田<br>付流蒹葭<br>揭颜一发<br>一盏清茶<br>心自放下<br>泼墨熟宣执笔而画<br>微微红浥侧面脸颊<br>情愫一遍<br>昨日丢失梦里的潇洒<br>一匣信件<br>道不尽情意的话<br>谁能轻易<br>赴约此间风月<br>乱成桑麻<br>难情落寞心血来合<br>凭谁问<br>钟鼓馔玉<br>枯骨青灰皆如何</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《半生客》</title>
    <url>/2019/06/24/poetry20190624025820/</url>
    <content><![CDATA[<p>明月谱上轩窗<br>几度借閒云伴容妆<br>滋味难当<br>叹息浮生<br>月影门前照东墙<br>君子契阔<br>半生青丝白唯长<br>樽酒一杯醉兀人数几时休<br>多少人知灯火阑珊轻抚泪角<br>静夜疯长各恃一方<br>清风寄沥浥轻尘<br>蛐曲新色<br>岁聿其莫<br>轻离别<br>几团圆月<br>春归故园情如昨丝<br>过一段温暖时光<br>度一夜清凉夜色<br>此生渺<br>夜色故<br>三生六尘绕过归墟<br>画中知晓<br>玫瑰花香<br>抚一曲<br>宛若星河似你</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>使用gitee码云搭建Hexo博客</title>
    <url>/2019/06/21/technology20190621061319/</url>
    <content><![CDATA[<p>使用gitee搭建的博客 <a href="https://kziwws.gitee.io/" target="_blank" rel="noopener">https://kziwws.gitee.io</a>。 这儿前面介绍过使用 github 搭建，但是github访问太慢了，每次感觉都要很久才会加载出来。码云搭建的快很多。</p>
<h5 id="需要安装"><a href="#需要安装" class="headerlink" title="需要安装"></a>需要安装</h5><ul>
<li>Git</li>
<li>NodeJs</li>
</ul>
<p>安装这两个自行百度吧，挺简单的。</p>
<p>这儿如果你是使用Mac的小伙伴 我直接放两个安装包地址出来 ，这样子省去你敲一堆命令行，也许还会出错。</p>
<p><font color ="black" size = 3>NodeJs安装:</font>  这个<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官网</a>, 你可以直接下载mac <a href="https://nodejs.org/dist/v12.18.0/node-v12.18.0.pkg" target="_blank" rel="noopener">node-v12.18.0.pkg</a> 下载过直接安装然后成功过后会出现</p>
<p>This package has installed:<br> •    Node.js v12.18.0 to /usr/local/bin/node<br> •    npm v6.14.4 to /usr/local/bin/npm<br>Make sure that /usr/local/bin is in your $PATH.</p>
<p><font color ="black" size = 3>Git安装:</font> 这个<a href="https://git-scm.com/download/mac" target="_blank" rel="noopener">git网址</a>,  github地址 <a href="https://github.com/timcharper/git_osx_installer/releases" target="_blank" rel="noopener">https://github.com/timcharper/git_osx_installer/releases</a> 下载<a href="https://github.com/timcharper/git_osx_installer/releases/download/2.2.1/git-2.2.1-intel-universal-mavericks.dmg" target="_blank" rel="noopener">git-2.2.1-intel-universal-mavericks.dmg</a></p>
<p><img src="https://s1.ax1x.com/2020/06/17/NESmJH.png" alt=""></p>
<a id="more"></a>

<p>如过安装出现 打不开xxx 因为它来自身份不明的开发者，先得打开 Terminal 终端应用，可以在 Launchpad 的其它,然后输入命令 <code>sudo spctl --master-disable</code>  然后会出现 <font color ="#4183C4">允许任何来源</font>如图，然后左下角点击锁然后输入电脑密码，勾上任何来源，然后再次点击锁。</p>
<p><img src="https://s1.ax1x.com/2020/06/17/NENO8U.png" alt=""></p>
<h5 id="这儿多说一个如何让-Finder-显示隐藏文件和文件夹"><a href="#这儿多说一个如何让-Finder-显示隐藏文件和文件夹" class="headerlink" title="这儿多说一个如何让 Finder 显示隐藏文件和文件夹"></a>这儿多说一个如何让 Finder 显示隐藏文件和文件夹</h5><p>终端输入<code>defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder</code>，就可以现实隐藏点开头的文件，如果需要关闭<code>defaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder</code></p>
<h5 id="安装完成过后检查SSH-Keys设置"><a href="#安装完成过后检查SSH-Keys设置" class="headerlink" title="安装完成过后检查SSH Keys设置"></a>安装完成过后检查SSH Keys设置</h5><p>一、输入<code>cd ~/.ssh</code>, 如果没有会出现  .ssh :No such file or directory。</p>
<p>二、输入 <code>ssh-keygen -t rsa -C &quot;你gitee码云注册相关联的邮箱&quot;</code> 然后回车。这儿回车时需要输入用户名和密码，建议不要输入，全部回车就好，应为到时候hexo d会输入麻烦，可以查看这个链接 <a href="https://www.jianshu.com/p/0a8dcb68cb18" target="_blank" rel="noopener">报错 Enter passphrase for key ‘/Users/xxx/.ssh/id_rsa</a>,不过为了安全而已，不过也可以 <code>git config --global credential.helper store</code>然后 <code>git pull /git push</code> 再输入密码，下次就不再次输入密码了。</p>
<p>三、<code>cd ~/.ssh</code> 然后 <code>ls</code>会出现 id_rsa  和 id_rsa.pub。</p>
<p>四、输入<code>eval &quot;$(ssh-agent -s)&quot;</code>添加密钥到ssh-agent。</p>
<p>五、<code>ssh-add ~/.ssh/id_rsa</code>，添加生成的SSH key到ssh-agent。</p>
<p>六、/Users/你的电脑用户名/.ssh/id_rsa.pub  这个目录里就是前面生成的,如图打开电脑前往文件夹然后输入前面的路径</p>
<p><img src="https://s1.ax1x.com/2020/06/17/NEBDKS.png" alt=""></p>
<p>然后前往打开里面的id_rsa.pub使用记事本打开然后拷贝。<img src="https://s1.ax1x.com/2020/06/17/NEDSqe.png" alt=""></p>
<p>这儿就差不多完成了,现在去<a href="https://gitee.com/login" target="_blank" rel="noopener">https://gitee.com/login码云</a> ，没注册的自己注册然后去生成一个仓库，这儿多说一点，可以看到码云官网平台有说明 <a href="https://gitee.com/help/articles/4136#article-header0" target="_blank" rel="noopener">码云帮助中心 </a>这儿这么说的</p>
<h5 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h5><ol>
<li><p>如何创建一个首页访问地址不带二级目录的 pages，如ipvb.gitee.io？</p>
<p>答：如果你想你的 pages 首页访问地址不带二级目录，如ipvb.gitee.io，<strong>你需要建立一个与自己个性地址同名的仓库</strong>，如 <a href="https://gitee.com/ipvb" target="_blank" rel="noopener">https://gitee.com/ipvb</a> 这个用户，想要创建一个自己的站点，但不想以子目录的方式访问，想以<code>ipvb.gitee.io</code>直接访问，那么他就可以创建一个名字为<code>ipvb</code>的仓库 <a href="https://gitee.com/ipvb/ipvb" target="_blank" rel="noopener">https://gitee.com/ipvb/ipvb</a> 部署完成后，就可以以 <a href="https://ipvb.gitee.io" target="_blank" rel="noopener">https://ipvb.gitee.io</a> 进行访问了。</p>
</li>
<li><p>当要部署的项目与自己的个性地址不一致时，部署完成后存在一些资源访问404？</p>
<p>答：当需要部署的仓库和自己的个性地址不一致时，如：<a href="https://gitee.com/ipvb/blog" target="_blank" rel="noopener">https://gitee.com/ipvb/blog</a> ，生成的pages url 为 <a href="https://ipvb.gitee.io/blog" target="_blank" rel="noopener">https://ipvb.gitee.io/blog</a> ，而访问的资源404，如 <a href="https://ipvb.gitee.io/style.css" target="_blank" rel="noopener">https://ipvb.gitee.io/style.css</a> 。这是因为相应配置文件的相对路径存在问题导致的，生成的资源 url 应该为 <a href="https://ipvb.gitee.io/blog/style.css" target="_blank" rel="noopener">https://ipvb.gitee.io/blog/style.css</a> 才对。对于不同的静态资源生成器，配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Hexo 配置文件_config.yml的url和root修改如下：</span><br><span class="line">url: https://ipvb.gitee.io/blog</span><br><span class="line">root: /blog</span><br></pre></td></tr></table></figure>



</li>
</ol>
<p>上面是官网帮助文档里的。这儿你可能琢磨半天不需要二级目录，像我这个一样 <a href="https://kziwws.gitee.io" target="_blank" rel="noopener">https://kziwws.gitee.io</a> 你先去建立仓库的名字就是用户名字这样才可以，非这个名字的有二级目录。</p>
<p>建立的仓库过后，然后去码云个人用户信息里 设置里面注意这儿不是这儿<img src="https://s1.ax1x.com/2020/06/17/NE6stH.png" alt=""></p>
<p>如果下图是这个位置</p>
<p><img src="https://s1.ax1x.com/2020/06/17/NEcFjx.png" alt=""></p>
<p>然后把前面拷贝的SSH key粘贴进去就可以了。</p>
<h5 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h5><p>一、新建一个目录，你自己想建在哪儿就是哪儿，然后 终端 输入 <code>cd /你的建立的这个目录</code></p>
<p>二、在输入 <code>npm install -g hexo-cli</code> 完成过后 <code>hexo init</code>，过后会生成博客所需要的文件目录</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">_config.yml 站点配置文件</span><br><span class="line">package.json 站点依赖文件</span><br><span class="line">scaffolds 模板文件夹</span><br><span class="line">source 资源文件夹</span><br><span class="line">_drafts</span><br><span class="line">_posts</span><br><span class="line">themes 主题文件夹</span><br></pre></td></tr></table></figure>
<p>三、打开主配置文件_config.yml,然后在URL 这儿</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">url: https://kziwws.gitee.io</span><br><span class="line">root: /</span><br></pre></td></tr></table></figure>

<p>四、配置 Deployment最底部，这儿换成你自己的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://gitee.com/Kziwws/kziwws.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>五、配置 Themes  landscape-plus，我这儿是自己修改的一个。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape-plus</span><br></pre></td></tr></table></figure>

<p>六、先<code>hexo clean</code> 再<code>hexo g</code> 然后<code>hexo d</code>，如果出现以下问题。</p>
<ul>
<li>ERROR Deployer not found: git<br> 在终端中输入 <code>npm install hexo-deployer-git --save</code>安装 hexo-deployer-git插件</li>
</ul>
<h5 id="开启码云的pages功能"><a href="#开启码云的pages功能" class="headerlink" title="开启码云的pages功能"></a>开启码云的pages功能</h5><p><img src="https://s1.ax1x.com/2020/06/17/NE5fud.png" alt=""></p>
<p>打开https 然后浏览器里访问 上面的网站地址就可以了。这儿配置hexo 文件这些就不说了，前面有一篇文章已经说过了。<a href="https://kziwws.gitee.io/2018/03/18/technology20180318043111/" target="_blank" rel="noopener">分类写文章和基础配置介绍</a>，有一个感觉挺好用的在线Markdown编辑器 <a href="https://maxiang.io/" target="_blank" rel="noopener">https://maxiang.io/</a> 马克飞象挺好用。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>《寄俗》</title>
    <url>/2019/05/12/poetry20190512025624/</url>
    <content><![CDATA[<p>林泉鹿栖复一身，叶落终閒滋无穷。<br>酒醴霜风有虏尘，竹帘疏漏半锩空。<br>三生六尘濯百绮，凌山云蕴君难迹。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator打包原生Android项目接入微信登陆</title>
    <url>/2019/05/04/technology20190504061234/</url>
    <content><![CDATA[<p>前往 <a href="https://developers.weixin.qq.com/doc/oplatform/Downloads/Android_Resource.html" target="_blank" rel="noopener">微信官方文档 •开放平台</a> ，<a href="https://dl.bintray.com/wechat-sdk-team/maven/com/tencent/mm/opensdk/wechat-sdk-android-without-mta/6.6.4/" target="_blank" rel="noopener">Android开发工具包下载</a>，范例代码<a href="https://res.wx.qq.com/op_res/dl_hmdniBHBL1Jh2zHwHaZ-FM8YE9hTH6H6U7NKwbshR0QSgb7vH5aL4zwhtGqEt" target="_blank" rel="noopener">HelloWeixin下载</a>。</p>
<p><img src="https://s1.ax1x.com/2020/06/22/NGhlSe.png" alt=""></p>
<h5 id="一、生成安卓keystore签名"><a href="#一、生成安卓keystore签名" class="headerlink" title=" 一、生成安卓keystore签名"></a><font color="#4183C4"> 一、生成安卓keystore签名</font></h5><p>使用这个Android Studio 生成的keystore，有一个在线生成<a href="http://www.applicationloader.net/appuploader/keystore.php" target="_blank" rel="noopener">安卓证书在线制作工具</a></p>
<p><img src="https://s1.ax1x.com/2020/06/22/NGzbMn.png" alt=""></p>
<h5 id="二、在所在包名下的目录新建一个文件夹wxapi"><a href="#二、在所在包名下的目录新建一个文件夹wxapi" class="headerlink" title=" 二、在所在包名下的目录新建一个文件夹wxapi"></a><font color="#4183C4"> 二、在所在包名下的目录新建一个文件夹wxapi</font></h5><p>然后新建一个类 <code>WXEntryActivity.java</code>名字和文件名需要一样。</p>
<p><img src="https://s1.ax1x.com/2020/06/22/NJpatO.png" alt=""></p>
<h5 id="三、实现WXEntryActivity-java代码"><a href="#三、实现WXEntryActivity-java代码" class="headerlink" title=" 三、实现WXEntryActivity.java代码"></a><font color="#4183C4"> 三、实现WXEntryActivity.java代码</font></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Copyright (c) 2015-2016 Chukong Technologies Inc.</span></span><br><span class="line"><span class="comment"> Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.</span></span><br><span class="line"><span class="comment"> http://www.cocos2d-x.org</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> com.ds.quwami.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseReq;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseResp;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelmsg.SendAuth;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPIEventHandler;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.javascript.AppActivity;</span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.lib.Cocos2dxJavascriptJavaBridge;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WXEntryActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">IWXAPIEventHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String APP_ID = <span class="string">"wxq28466eh4b48be59"</span>;<span class="comment">//这个ID是错误的换成你自己的</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 微信的登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IWXAPI api;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        api= WXAPIFactory.createWXAPI(<span class="keyword">this</span>,APP_ID,<span class="keyword">true</span>);</span><br><span class="line">        api.registerApp(APP_ID);</span><br><span class="line">        api.handleIntent(getIntent(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onNewIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onNewIntent(intent);</span><br><span class="line">        setIntent(intent);</span><br><span class="line">        api.handleIntent(intent,<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReq</span><span class="params">(BaseReq baseReq)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResp</span><span class="params">(BaseResp resp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> errorCode = resp.errCode;</span><br><span class="line">        <span class="keyword">switch</span> (errorCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> BaseResp.ErrCode.ERR_OK:</span><br><span class="line">                <span class="comment">//用户同意</span></span><br><span class="line">                <span class="keyword">final</span> String code = ((SendAuth.Resp) resp).code;</span><br><span class="line">                Log.i(<span class="string">"WXEntryActivity"</span>, <span class="string">"WXEntryActivity onResp:  code="</span> + code);</span><br><span class="line"></span><br><span class="line">                AppActivity.calljs(code);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BaseResp.ErrCode.ERR_AUTH_DENIED:</span><br><span class="line">                <span class="comment">//用户拒绝</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"微信登录 用户拒绝"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BaseResp.ErrCode.ERR_USER_CANCEL:</span><br><span class="line">                <span class="comment">//用户取消</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"微信登录 用户取消"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在<font color="#4183C4"> <strong>AndroidManifest.xml</strong></font>主文件中添加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"com.ds.~.wxapi.WXEntryActivity"</span>//这儿换成你自己的</span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@android:style/Theme.Translucent.NoTitleBar"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:taskAffinity</span>=<span class="string">"com.ds.～"</span>//这儿换成你自己的</span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:launchMode</span>=<span class="string">"singleTask"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>添加位置，如图红色框的部分:</p>
<p><img src="https://s1.ax1x.com/2020/06/22/NJPe0I.png" alt=""></p>
<p>其中<code>android:name = &quot;com.~.wxapi.WXEntryActivity&quot;</code>这个就是对应这个路径目录。</p>
<p><font color="#4183C4"> 添加WXAPI依赖</font>，打开build.gradle文件,注意是proj.android-studio/～你的项目名字 目录下,在dependencies中加下面的代码 <code>api &#39;com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+&#39;</code>，这儿game下的 build.gradle也要添加。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])</span><br><span class="line">    implementation fileTree(dir: "/Applications/CocosCreator2.3.2.app/Contents/Resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])</span><br><span class="line">    implementation project(':libcocos2dx')</span><br><span class="line">    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+' </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AppActivity.java中的实现，wxLogin函数必须是静态的,这样才可以去外部调用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Copyright (c) 2015-2016 Chukong Technologies Inc.</span></span><br><span class="line"><span class="comment"> Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.</span></span><br><span class="line"><span class="comment"> http://www.cocos2d-x.org</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> org.cocos2dx.javascript;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelmsg.SendAuth;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.lib.Cocos2dxActivity;</span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.lib.Cocos2dxGLSurfaceView;</span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.lib.Cocos2dxJavascriptJavaBridge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppActivity</span> <span class="keyword">extends</span> <span class="title">Cocos2dxActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String APP_ID = <span class="string">"wxq28466eh4b48be59"</span>;<span class="comment">//这个ID是错误的换成你自己的</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 微信的登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IWXAPI api;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AppActivity act;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (!isTaskRoot()) &#123;</span><br><span class="line">            <span class="comment">// Android launched another instance of the root activity into an existing task</span></span><br><span class="line">            <span class="comment">// so just quietly finish and go away, dropping the user back into the activity</span></span><br><span class="line">            <span class="comment">// at the top of the stack (ie: the last state of this task)</span></span><br><span class="line">            <span class="comment">// Don't need to finish it again since it's finished in super.onCreate .</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// DO OTHER INITIALIZATION BELOW</span></span><br><span class="line">        SDKWrapper.getInstance().init(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        api= WXAPIFactory.createWXAPI(<span class="keyword">this</span>,APP_ID);</span><br><span class="line">        api.registerApp(APP_ID);</span><br><span class="line">        act = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cocos2dxGLSurfaceView <span class="title">onCreateView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Cocos2dxGLSurfaceView glSurfaceView = <span class="keyword">new</span> Cocos2dxGLSurfaceView(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// TestCpp should create stencil buffer</span></span><br><span class="line">        glSurfaceView.setEGLConfigChooser(<span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">8</span>);</span><br><span class="line">        SDKWrapper.getInstance().setGLSurfaceView(glSurfaceView, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> glSurfaceView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        SDKWrapper.getInstance().onResume();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        SDKWrapper.getInstance().onPause();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="keyword">if</span> (!isTaskRoot()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SDKWrapper.getInstance().onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        SDKWrapper.getInstance().onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onNewIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onNewIntent(intent);</span><br><span class="line">        SDKWrapper.getInstance().onNewIntent(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        SDKWrapper.getInstance().onRestart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        SDKWrapper.getInstance().onStop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SDKWrapper.getInstance().onBackPressed();</span><br><span class="line">        <span class="keyword">super</span>.onBackPressed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</span><br><span class="line">        SDKWrapper.getInstance().onConfigurationChanged(newConfig);</span><br><span class="line">        <span class="keyword">super</span>.onConfigurationChanged(newConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestoreInstanceState</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        SDKWrapper.getInstance().onRestoreInstanceState(savedInstanceState);</span><br><span class="line">        <span class="keyword">super</span>.onRestoreInstanceState(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span> </span>&#123;</span><br><span class="line">        SDKWrapper.getInstance().onSaveInstanceState(outState);</span><br><span class="line">        <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SDKWrapper.getInstance().onStart();</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 微信登录-唤起微信</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wxLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!api.isWXAppInstalled()) &#123;</span><br><span class="line">            Toast.makeText(act, <span class="string">"您还未安装微信客户端"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            SendAuth.Req req=<span class="keyword">new</span> SendAuth.Req();</span><br><span class="line">            req.scope=<span class="string">"snsapi_userinfo"</span>;</span><br><span class="line">            req.state=<span class="string">"wx_login"</span>;</span><br><span class="line">            api.sendReq(req);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">calljs</span><span class="params">(<span class="keyword">final</span> String code)</span></span>&#123;</span><br><span class="line">        act.runOnGLThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">final</span> String jvCallCode =String.format(<span class="string">"cc.jsEngineCallback(\"%s\")"</span>,code);</span><br><span class="line">                Cocos2dxJavascriptJavaBridge.evalString(jvCallCode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><font color="#4183C4">  cocos登陆页面调用，微信登陆。</font></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">wxChatLogin()&#123;</span><br><span class="line">    <span class="keyword">if</span>(cc.sys.OS_ANDROID == cc.sys.os)&#123;<span class="comment">//安卓</span></span><br><span class="line">        jsb.reflection.callStaticMethod(<span class="string">"org/cocos2dx/javascript/AppActivity"</span>, <span class="string">"wxLogin"</span>, <span class="string">"()V"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cc.sys.OS_IOS == cc.sys.os)&#123;<span class="comment">//苹果</span></span><br><span class="line">       jsb.reflection.callStaticMethod(<span class="string">"AppController"</span>, <span class="string">"wxSendAuth"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cc.hud.show(<span class="number">1.5</span>,<span class="string">'非移动客户端暂不支持微信登陆'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//响应过后传递过来的值</span></span><br><span class="line">    cc.jsEngineCallback = <span class="function"><span class="keyword">function</span>(<span class="params">wxCode</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.getWXCodeSuceess(wxCode);</span><br><span class="line">    &#125;.bind(<span class="keyword">this</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><font color="#4183C4"> 这儿微信登陆需要真机调试，为了方便直接打包debug和release使用之前生成keystore。</font></p>
<p><img src="https://s1.ax1x.com/2020/06/22/NJZCb4.png" alt=""></p>
<p>上面的密码改成生成 keystore时的密码，然后再调试运行在手机上。</p>
<p>这儿如果有什么问题可以直接企鹅上留言: <font color="#4183C4">1197696574</font> 交流。</p>
]]></content>
      <categories>
        <category>cocosCreator</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocosCreator</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>《白首辞》</title>
    <url>/2019/03/17/poetry20190317032120/</url>
    <content><![CDATA[<p>梨花参差春带雨，揽衣起舞暮暮情。<br>昨夜星辰昨夜风，月如君兮君不梦。<br>十里煌绸心聒碎，觑于朝暮翩跹度。<br>落樱春水世难顾，共逝与谁续白昼。<br>枕疏眉语几声留，相寻娇云东逝走。<br>清风拂尘契相生，只语阑珊未羞眸。<br>等闲春深懒红妆，彻鼓欲新待思量。<br>孤鸿寒枝未可栖，天地风情任由意。<br>有情萧何百年过，身陷囹圄良人许。<br>斯时一人一心忧，月上柳梢云未休。<br>何人与你共消酒，化作相思酿作泥。<br>誓恨成蝶伴花丛，枫林风下诉情话。<br>烟雨朦胧未见他，念旧时过往真假。<br>谦逊言温婉举止，再梦回红尘晚霞。<br>形单影只长路漫，不畏牵绊朱颜改。<br>天若有情天亦老，步尘时遥知谁好。<br>知荣岁月度匆忙，恋一生儿女情长。<br>悲欢离合世事道，策马一声诲人啸。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2019/03/05/technology20190305060134/</url>
    <content><![CDATA[<p><strong>正则表达式</strong>，又称规则表达式<strong>。</strong>在代码中常简写为regex、regexp或RE，计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。</p>
<p>给定一个正则表达式和另一个字符串，我们可以达到如下的目的：</p>
<blockquote>
<p>给定的字符串是否符合正则表达式的过滤逻辑（“匹配”）；<br>通过正则表达式，从文本字符串中获取我们想要的特定部分（“过滤”）。</p>
</blockquote>
<h5 id="正则表达式匹配规则"><a href="#正则表达式匹配规则" class="headerlink" title="正则表达式匹配规则"></a>正则表达式匹配规则</h5><ul>
<li><a href="#ZF_install">字符</a></li>
<li><a href="#YDZF_install">预定义字符集</a>(可以写在字符集[…]中)</li>
<li><a href="#SL_install">数量词</a>(用在字符或(…)之后)</li>
<li><a href="#BJPP_install">边界匹配</a>(不消耗待匹配字符串中的字符)</li>
<li><a href="#LJFZ_install">逻辑、分组</a></li>
<li><a href="#TSGZ_install">特殊构造</a>(不作为分组)</li>
</ul>
<table>
<thead>
<tr>
<th align="center">语法</th>
<th align="left">说明</th>
<th align="center">表达式实例</th>
<th align="center">完整匹配的字符串</th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="left"><a name='ZF_install'><strong><font color = red>字符</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">一般字符</td>
<td align="left">匹配自身</td>
<td align="center">abc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">.</td>
<td align="left">匹配任意除换行符”\n”外的字符。在DOTALL模式中也能匹配换行符。</td>
<td align="center">a.c</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\</td>
<td align="left">转义字符，使后一个字符改变原来的意思,如果字符串中有字符<em>需要匹配，可以使用\</em>或者字符集[*].</td>
<td align="center">a\.c   a\\c</td>
<td align="center">a\c</td>
</tr>
<tr>
<td align="center">[…]</td>
<td align="left">字符集(字符类)。对应的位置可以是字符集中任意字符。字符集中的字符可以逐个列出，也可以给出范围，如[abc]或[a-c].第一个字符如果是^则表示取反，如[^abc]表示不是abc的其他字符。所有的特殊字符在字符集中都失去其原有的特俗含义。在字符集中如果要使用]、-或^,可以在前面加上反斜杠,或把]、-放在第一个字符，把^放在非第一个字符。</td>
<td align="center">a[bcd]c</td>
<td align="center">abe ace ade</td>
</tr>
<tr>
<td align="center"></td>
<td align="left"><a name='YDZF_install'><strong><font color = red>预定义字符集</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">\d</td>
<td align="left">数字:[0-9]</td>
<td align="center">a\dc</td>
<td align="center">a1c</td>
</tr>
<tr>
<td align="center">\D</td>
<td align="left">非数字:[^\d]</td>
<td align="center">a\Dc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\s</td>
<td align="left">空白字符:[&lt;空格&gt;\t\r\n\f\v]</td>
<td align="center">a\sc</td>
<td align="center">a c</td>
</tr>
<tr>
<td align="center">\w</td>
<td align="left">单词字符:[A-Z a-Z 0-9_]</td>
<td align="center">a\wc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\W</td>
<td align="left">非单词字符:[^\W]</td>
<td align="center">a\Wc</td>
<td align="center">a c</td>
</tr>
<tr>
<td align="center"></td>
<td align="left"><a name='SL_install'><strong><font color = red>数量词</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">*</td>
<td align="left">匹配前一个字符0或无限次</td>
<td align="center">abc*</td>
<td align="center">ab abcc</td>
</tr>
<tr>
<td align="center">+</td>
<td align="left">匹配前一个字符1次或无限次</td>
<td align="center">abc+</td>
<td align="center">abc abcc</td>
</tr>
<tr>
<td align="center">?</td>
<td align="left">匹配前一个字符0次或1次</td>
<td align="center">abc?</td>
<td align="center">ab abc abbc</td>
</tr>
<tr>
<td align="center">{m}</td>
<td align="left">匹配前一个字符m次</td>
<td align="center">ab{2}c</td>
<td align="center">abbc</td>
</tr>
<tr>
<td align="center">{m,n}</td>
<td align="left">匹配前一个字符m至n次。m和n可以省略:若省略m,则匹配0至n次；若省略n则匹配m至无限次。</td>
<td align="center">ab{1,2}c</td>
<td align="center">abc abbc</td>
</tr>
<tr>
<td align="center"></td>
<td align="left"><a name='BJPP_install'><strong><font color = red>边界匹配</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">^</td>
<td align="left">匹配字符串开头。在多行模式中匹配每一行的开头</td>
<td align="center">^abc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">$</td>
<td align="left">匹配字符串末尾。在多行模式中匹配每一行的末尾</td>
<td align="center">abc$</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\A</td>
<td align="left">仅匹配字符串开头。</td>
<td align="center">\Aabc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\Z</td>
<td align="left">仅匹配字符串末尾。</td>
<td align="center">abc\Z</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center">\b</td>
<td align="left">匹配字\w和\W之间。</td>
<td align="center">a\b!bc</td>
<td align="center">a!bc</td>
</tr>
<tr>
<td align="center">\B</td>
<td align="left">[^\b]</td>
<td align="center">a\Bbc</td>
<td align="center">abc</td>
</tr>
<tr>
<td align="center"></td>
<td align="left"><a name='LJFZ_install'><strong><font color = red>逻辑分组</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">|</td>
<td align="left">|代表左右表达式任意匹配一个。它总是先尝试匹配左边的表达式，一旦成功匹配则跳过匹配右边的表达式。如果|没有被包括在()中,则它的范围是整个正则表达式。</td>
<td align="center">abc|def</td>
<td align="center">abc def</td>
</tr>
<tr>
<td align="center">(…)</td>
<td align="left">被括起来的表达式将作为分组，从表达式左边开始每遇到一个分组的左括号’(‘,编号+1.另外分组表达式作为一个整体,可以后接数量词。表达式中的|仅在该组中有效。</td>
<td align="center">(abc){2} a{123|456)c</td>
<td align="center">abcabc a456c</td>
</tr>
<tr>
<td align="center">(?P&lt;name&gt;…)</td>
<td align="left">分组除了原来的编号另外再指定一个额外的别名。</td>
<td align="center">(?P&lt;id&gt;abc){2}</td>
<td align="center">abcabc</td>
</tr>
<tr>
<td align="center">\&lt;number&gt;</td>
<td align="left">引用编号为&lt;number&gt;的分组匹配到的字符串。</td>
<td align="center">(\d)abc\1</td>
<td align="center">1abc1 5abc5</td>
</tr>
<tr>
<td align="center"></td>
<td align="left"><a name='TSGZ_install'><strong><font color = red>特殊构造</font></strong></a></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">(?…)</td>
<td align="left">(…)的部分组版本，用于使用”|”或后接数量词。</td>
<td align="center">(?:abc){2}</td>
<td align="center">abcabc</td>
</tr>
<tr>
<td align="center">(?iLmsux)</td>
<td align="left">iLmsux的每个字符代表一个匹配模式，只能用在正则表达式的开头，可选多个。匹配模式将在下文介绍。</td>
<td align="center">(?i)abc</td>
<td align="center">Abc</td>
</tr>
<tr>
<td align="center">(?#…)</td>
<td align="left">#后的内容将作为注释被忽略。</td>
<td align="center">abc(?#comment)123</td>
<td align="center">abc123</td>
</tr>
<tr>
<td align="center">(?=…)</td>
<td align="left">之后的字符串内容需要匹配表达式。才能成功匹配。不消耗字符串内容。</td>
<td align="center">a(?=\d)后面是数字的a</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">(?!…)</td>
<td align="left">之后的字符串内容需要不匹配表达式。才能成功匹配。不消耗字符串内容。</td>
<td align="center">a(?!\d) 后面不是数字的a</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">(?&lt;=…)</td>
<td align="left">之前的字符串内容需要匹配表达式。才能成功匹配。不消耗字符串内容。</td>
<td align="center">a(?&lt;=\d)a 前面是数字的a</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">(?&lt;!…)</td>
<td align="left">之前的字符串内容需要不匹配表达式。才能成功匹配。不消耗字符串内容。</td>
<td align="center">a(?&lt;!\d)a 前面不是数字的a</td>
<td align="center"></td>
</tr>
</tbody></table>
<h5 id="理解技巧"><a href="#理解技巧" class="headerlink" title="理解技巧"></a>理解技巧</h5><h5 id="一、-d-w-都是等价字符"><a href="#一、-d-w-都是等价字符" class="headerlink" title="一、?,*,+,\d,\w 都是等价字符"></a>一、?,*,+,\d,\w 都是等价字符</h5><p>?等价于匹配长度{0,1}<br>*等价于匹配长度{0,}<br>+等价于匹配长度{1,}<br>\d等价于[0-9]<br>\D等价于[^0-9]<br>\w等价于[A-Za-z_0-9]<br>\W等价于[^A-Za-z_0-9]。</p>
<h5 id="二、常用运算符与表达式"><a href="#二、常用运算符与表达式" class="headerlink" title="二、常用运算符与表达式"></a>二、常用运算符与表达式</h5><p>^ 开始<br>() 域段<br>[] 包含,默认是一个字符长度<br>[^] 不包含,默认是一个字符长度<br>{n,m} 匹配长度<br>. 任何单个字符(. 字符点)<br>| 或<br>\ 转义<br>$ 结尾<br>[A-Z] 26个大写字母<br>[a-z] 26个小写字母<br>[0-9] 0至9数字<br>[A-Za-z0-9] 26个大写字母、26个小写字母和0至9数字</p>
<h5 id="三、分割"><a href="#三、分割" class="headerlink" title="三、分割"></a>三、分割</h5><p>[A,H,T,W] 包含A或H或T或W字母<br>[a,h,t,w] 包含a或h或t或w字母<br>[0,3,6,8] 包含0或3或6或8数字</p>
]]></content>
      <categories>
        <category>regexp</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>regexp</tag>
      </tags>
  </entry>
  <entry>
    <title>《故乡桃花》</title>
    <url>/2019/01/22/poetry20190122003921/</url>
    <content><![CDATA[<p>十里桃花<br>三月情染风韵年华<br>冰冷指间<br>难解落雁为谁红霞<br>飘洒延绵风纱<br>漫天定温婉如画<br>空留一毯绿叶红花<br>故乡的桃花<br>风悠悠相思寄眉头<br>十里桃花<br>倔强的年华<br>挥洒热血<br>梦里烟花<br>三春遗落成过往<br>缠绵成桂香<br>镜花水月<br>回眸映前世三千姻缘<br>故乡那时的桃花</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>Python基础语法</title>
    <url>/2019/01/12/technology20190112101223/</url>
    <content><![CDATA[<p><font color="#4183C4">1、</font>以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入。</p>
<p><font color="#4183C4">2、</font>以双下划线开头的_<em>foo 代表类的私有成员，以双下划线开头和结尾的_<em>foo</em></em> 代表 Python 里特殊方法专用的标识，如_<em>init_</em>() 代表类的构造函数。</p>
<p><font color="#4183C4">3、</font>Python 的关键字只包含小写字母，and、exec、not、assert、finally、or、break、for    pass、class、from、print、continue、global    、raise、def、if、return、del、import、try、elif、in、while、else、is、with、except、lambda、yield。</p>
<p><font color="#4183C4">4、</font>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>
<p><font color="#4183C4">5、</font>Python语句中一般以新行作为语句的结束符，一行可以执行多个语句用;分开，可以使用斜杠\将一行的语句分为多行显示。</p>
<p><font color="#4183C4">6、</font>使用引号( ‘ )、双引号( “ )、三引号( ‘’’ 或 “”” ) 来表示字符串，三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。</p>
<p><font color="#4183C4">7、</font>python中单行注释采用 # 开头，多行注释使用三个单引号(‘’’)或三个双引号(“””)。</p>
<p><font color="#4183C4">8、</font>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上逗号 ,。</p>
<p><font color="#4183C4">9、</font>Python 中的变量赋值不需要类型声明，每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。</p>
<p><font color="#4183C4">10、</font>标准数据类型，Numbers（数字）、String（字符串）、List（列表）、Tuple（元组）、Dictionary（字典）。</p>
<p><font color="#4183C4">11、</font>Python支持四种不同的数字类型，int（有符号整型）、long（长整型[也可以代表八进制和十六进制])、float（浮点型）、complex（复数）</p>
<p><font color="#4183C4">12、</font>Python 还支持复数，复数由实数部分和虚数部分构成，可以用 a + bj,或者 complex(a,b) 表示， 复数的实部 a 和虚部 b 都是浮点型。 </p>
<p><font color="#4183C4">13、</font>字符串截取 [头下标:尾下标] 获取的子字符串包含头下标的字符，但不包含尾下标的字符。例如 s = ‘abcdef’ s[1:5] 输出’bcde’，s[2:]，输出从第三个字符开始的字符串 s[1] 的值 b ，s[5] 的值 f。</p>
<p><font color="#4183C4">14、</font>列表相当于IOS中的数组。截取可以接收第三个参数，参数作用是截取的步长，以下实例在索引 1 到索引 4 的位置并设置为步长为 2（间隔一个位置）来截取字符串，如：ss = [‘c’,’h’,’e’,’c’,’k’,’i’,’o’] ss[1:4:2] 结果为[‘h’,’c’]。</p>
<p><font color="#4183C4">15、</font>加号（+）是字符串连接运算符 str + “TEST” ，星号（*）是重复操作 s * 2 输出字符串两次。</p>
<p><font color="#4183C4">16、</font>元组是另一个数据类型，类似于 List（列表）。元组用 () 标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。tuple = ( ‘runoob’, 786 , 2.23, ‘john’, 70.2 ) list = [ ‘runoob’, 786 , 2.23, ‘john’, 70.2 ] tuple[2] = 1000 元组中是非法应用 list[2] = 1000 列表中是合法应用</p>
<p><font color="#4183C4">17、</font>pythan中的字典当中的元素是通过键来存取的，而不是通过偏移存取。字典用”{ }”标识。字典由索引(key)和它对应的值value组成。dict.keys()取出所有键 dict.values()取出所有值 和IOS基本无异。</p>
<p><font color="#4183C4">18、</font>数据类型转换 float(x) 将x转换到一个浮点数 int(x [,base])将x转换为一个整数 str(x) 将对象 x 转换为字符串 set(s) 转换为可变集合 dict(d) 创建一个字典。d 必须是一个序列 (key,value)元组。</p>
<p><font color="#4183C4">19、</font>算术运算符，这儿介绍一个// 取整除 - 返回商的整数部分（向下取整）9//2 4 和js基本无异。</p>
<p><font color="#4183C4">20、</font>Python身份运算符 is 是判断两个标识符是不是引用自一个对象 x is y,  id() 函数用于获取对象内存地址 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False is not 是判断两个标识符是不是引用自不同对象</p>
<p><font color="#4183C4">21、</font>is 与 == 区别 is 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。</p>
<p><font color="#4183C4">22、</font>简单的语句，可以在同一行的位置上使用if条件判断语句，如：var = 100 ;if ( var  == 100 ) : print “变量 var 的值为100” .</p>
<p><font color="#4183C4">23、</font>Python for 循环语句 for iterating_var in sequence: statements(s) for letter in ‘Python’:     # 第一个实例  print ‘当前字母 :’, letter </p>
<p><font color="#4183C4">24、 </font>使用 class 语句来创建一个新类，class 之后为类的名称并以冒号结尾:<br>class Employee:<br>   ‘所有员工的基类’<br>   empCount = 0</p>
<p>   def <strong>init</strong>(self, name, salary):<br>      self.name = name<br>      self.salary = salary<br>      Employee.empCount += 1</p>
<p>   def displayCount(self):<br>     print “Total Employee %d” % Employee.empCount</p>
<p>   def displayEmployee(self):<br>      print “Name : “, self.name,  “, Salary: “, self.salary</p>
<p>empCount 变量是一个类变量，它的值将在这个类的所有实例之间共享。你可以在内部类或外部类使用 Employee.empCount 访问。第一种方法<strong>init</strong>()方法是一种特殊的方法，被称为类的构造函数或初始化方法，当创建了这个类的实例时就会调用该方法，self 代表类的实例，self 在定义类的方法时是必须有的，虽然在调用时不必传入相应的参数。</p>
<p><font color="#4183C4">25、</font>self代表类的实例，而非类 类的方法与普通的函数只有一个特别的区别——它们必须有一个额外的第一个参数名称, 按照惯例它的名称是 self。<br>class Test:<br>    def prt(self):<br>        print(self)<br>        print(self.<strong>class</strong>)</p>
<p>t = Test()<br>t.prt()</p>
<p><font color="#4183C4">26、</font>使用点号 . 来访问对象的属性。使用如下类的名称访问类变量:</p>
<p>emp1.displayEmployee()<br>emp2.displayEmployee()<br>print “Total Employee %d” % Employee.empCount</p>
<p>也可以删除 del emp1.age  # 删除 ‘age’ 属性</p>
<p>hasattr(emp1, ‘age’)    # 如果存在 ‘age’ 属性返回 True。<br>getattr(emp1, ‘age’)    # 返回 ‘age’ 属性的值<br>setattr(emp1, ‘age’, 8) # 添加属性 ‘age’ 值为 8<br>delattr(emp1, ‘age’)    # 删除属性 ‘age’</p>
<p><font color="#4183C4">27、</font>pythan可以多继承，继承过后父类方法的功能不能满足你的需求，子类重写你父类的方法。你可以使用issubclass()或者isinstance()方法来检测。issubclass() - 布尔函数判断一个类是另一个类的子类或者子孙类，语法：issubclass(sub,sup)， isinstance(obj, Class) 布尔函数如果obj是Class类的实例对象或者是一个Class子类的实例对象则返回true。</p>
<p><font color="#4183C4">28、</font>Python同样支持运算符重载，实例如下：</p>
<p>class Vector:<br>   def _<em>init_</em>(self, a, b):<br>      self.a = a<br>      self.b = b</p>
<p>   def _<em>str_</em>(self):<br>      return ‘Vector (%d, %d)’ % (self.a, self.b)</p>
<p>   def_<em>add_</em>(self,other):<br>      return Vector(self.a + other.a, self.b + other.b)</p>
<p>v1 = Vector(2,10)<br>v2 = Vector(5,-2)<br>print v1 + v2<br>结果：Vector(7,8)</p>
<p><font color="#4183C4">29、</font>类的私有属性__private_attrs：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 self.__private_attrs，在类的内部，使用 def 关键字可以为类定义一个方法，与一般函数定义不同，类方法必须包含参数 self,且为第一个参数。</p>
<p><font color="#4183C4">30、</font>单下划线、双下划线、头尾双下划线说明：<br>_<em>foo_</em>: 定义的是特殊方法，一般是系统定义名字 ，类似_<em>init_</em>() 之类的。</p>
<p> _foo: 以单下划线开头的表示的是 protected 类型的变量，即保护类型只能允许其本身与子类进行访问，不能用于 from module import *</p>
<p>__foo: 双下划线的表示的是私有类型(private)的变量, 只能是允许这个类本身进行访问了。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>《再无春夏秋冬》</title>
    <url>/2018/12/23/poetry20181223024620/</url>
    <content><![CDATA[<p>凡尘疑似千非尽<br>生命有时就像花开时<br>花开蝶影总会好多顾虑<br>也许都隐藏了自己的多少秘密<br>生活不知道诉说了多少不甘和苦涩<br>又在黑夜里放纵了多少笙歌<br>灵魂里沉睡的自己<br>不知道何时会有希望和光明<br>一个又一个的懦弱和胆怯<br>一个又一个的倾述和陪伴<br>时间里的那些人<br>永远总会有人去你不该去的地方<br>做你不可能做的事情<br>你不理解她的过去<br>也不明白她的未来<br>所有的存储在大脑里的絮物<br>都像风一样<br>有的飘走<br>有的视如自己犹如生命的东西<br>漠然里退场<br>有时候不知道是岁月伤害了我<br>还是承诺辜负了岁月<br>当你拼命去想拯救的东西<br>后来都变成新的曲殇<br>有时候很想问<br>这个世界上有沾满鲜血的手<br>是不去曾经掏过别人的心的<br>枝头的鸟<br>明天会迎来新的黎明<br>岁月的伤痕<br>永远都会慢慢流失<br>只是生活不曾实现过承诺<br>也没能挽救那只<br>想要日落黄昏归去的小鸟<br>于是一次又一次的在夜幕里<br>黑暗笼罩了它的双眼<br>再也找不到自己的方向<br>如果小鸟饮的不是淡水<br>那它应该也不会”食盐”吧<br>在黑夜里寂静的死亡<br>等待的又一个黎明<br>只是再无小鸟<br>再无春夏和秋冬</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>使用git在码云gitee和github上提交代码</title>
    <url>/2018/11/10/technology20181110040214/</url>
    <content><![CDATA[<p><strong><a href="https://gitee.com/login" target="_blank" rel="noopener">gitee码云</a></strong> </p>
<p>这儿我以我自己的 BankLoans 这个仓库名为例。对应的仓库地址为<a href="https://gitee.com/Kziwws/BankLoans.git" target="_blank" rel="noopener">https://gitee.com/Kziwws/BankLoans.git</a></p>
<ul>
<li><strong>第一种</strong> ：向仓库里提交代码，是从项目上拉取下来，然后修改了再提交上去。</li>
<li><strong>第二种</strong>：仓库为空的，直接将本地连接到此仓库，然后再全部提交上去。</li>
</ul>
<h4 id="方法一、先将仓库clone到本地，修改后再push到码云的仓库仓库。"><a href="#方法一、先将仓库clone到本地，修改后再push到码云的仓库仓库。" class="headerlink" title="方法一、先将仓库clone到本地，修改后再push到码云的仓库仓库。"></a>方法一、先将仓库clone到本地，修改后再push到码云的仓库仓库。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;Kziwws&#x2F;BankLoans.git #将远程仓库克隆到本地</span><br></pre></td></tr></table></figure>

<p>克隆下来过后，找到这个文件路径，mac端的话 cd 然后拖入回车就好了.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;~你的目录路径</span><br></pre></td></tr></table></figure>

<p>修改代码后,在仓库目录下执行下面命令，将当前目录所有文件添加到git暂存区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>提交并备注提交信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;项目第一次上传&quot;</span><br></pre></td></tr></table></figure>
<p>将本地提交推送到远程仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>克隆下来如果是私有仓库，需要输入码云的账号和密码。</p>
<h4 id="方法二、本地初始化一个仓库，设置远程仓库地址后再做push。"><a href="#方法二、本地初始化一个仓库，设置远程仓库地址后再做push。" class="headerlink" title="方法二、本地初始化一个仓库，设置远程仓库地址后再做push。"></a>方法二、本地初始化一个仓库，设置远程仓库地址后再做push。</h4><p>找到你项目目录文件路径，mac端的话 cd 然后拖入回车就好了.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;~你的项目目录路径</span><br></pre></td></tr></table></figure>
<p>始化一个仓库，本地仓库默认创建 master 分支,设置远程仓库地址，这儿这个地址要先去<a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a>建立一个私有仓库。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init </span><br><span class="line">git remote add origin https:&#x2F;&#x2F;gitee.com&#x2F;Kziwws&#x2F;BankLoans.git</span><br></pre></td></tr></table></figure>

<p>然后再push推送上去</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;项目第一次上传&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>



<p>如果是提交时可能会存在冲突，这时用户需要选择的是保留线上的文件或者舍弃线上的文件，如果您舍弃线上的文件，则在推送时选择强制推送，强制推送需要执行下面的命令(默认不推荐该行为):<code>git push origin master -f</code>，如果您选择保留线上的 readme 文件,则需要先执行：<code>git pull origin master</code></p>
<p><a href="https://github.com/login?return_to=%2Fjoin" target="_blank" rel="noopener">gitHub</a></p>
<p>这儿我以我自己的 BankLoans 这个仓库名为例。对应的仓库地址为<a href="https://github.com/Kziwws/BankLoans.git" target="_blank" rel="noopener">https://github.com/Kziwws/BankLoans.git</a></p>
<ul>
<li><strong>第一种</strong>：向仓库里提交代码，是从项目上拉取下来，然后修改了再提交上去。</li>
<li><strong>第二种</strong>：仓库为空的，直接将本地连接到此仓库，然后再全部提交上去。</li>
</ul>
<h4 id="方法一、先将仓库clone到本地，修改后再push到github的仓库仓库。"><a href="#方法一、先将仓库clone到本地，修改后再push到github的仓库仓库。" class="headerlink" title="方法一、先将仓库clone到本地，修改后再push到github的仓库仓库。"></a>方法一、先将仓库clone到本地，修改后再push到github的仓库仓库。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Kziwws&#x2F;BankLoans.git #将远程仓库克隆到本地</span><br><span class="line">cd &#x2F;~你克隆下来的目录路径</span><br><span class="line">git add .  #.是把文件夹下面的文件都添加进来   </span><br><span class="line">git commit  -m &quot;提交的更新信息&quot; </span><br><span class="line">git push -u origin master #此步骤需要你输入帐号和密码</span><br></pre></td></tr></table></figure>


<h4 id="方法二、本地初始化一个仓库，设置远程仓库地址后再做push。-1"><a href="#方法二、本地初始化一个仓库，设置远程仓库地址后再做push。-1" class="headerlink" title="方法二、本地初始化一个仓库，设置远程仓库地址后再做push。"></a>方法二、本地初始化一个仓库，设置远程仓库地址后再做push。</h4><p>找到你项目目录文件路径，mac端的话 cd 然后拖入回车就好了.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;~你的项目目录路径</span><br></pre></td></tr></table></figure>

<p>始化一个仓库，设置远程仓库地址，这儿这个地址要先去<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>建立一个私有仓库。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init </span><br><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;Kziwws&#x2F;BankLoans.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;项目第一次上传&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux服务器使用Nginx搭建Hexo博客+Github Pages</title>
    <url>/2018/11/02/technology20181102023521/</url>
    <content><![CDATA[<p>看了很多搭建博客的 <a href="https://wordpress.org/" target="_blank" rel="noopener">wordpress</a>、<a href="https://ghost.org/" target="_blank" rel="noopener">ghost</a>、<a href="https://jekyllcn.com/" target="_blank" rel="noopener">jekyllcn</a>、<a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="noopener">hexo</a>。这些都可以搭建属于自己的博客，各有各的优点，开始的时候使用了wordpress搭建了一个感觉太弱鸡了。先安装一个 <a href="https://www.bt.cn" target="_blank" rel="noopener">宝塔</a>软件，然后安装wordpress没什么难度，关键定制里面的东西感觉一点都不方便，重点是界面极丑，我感觉自己把主题全部换遍了然后都没有一个我自己觉得满意的，然后我放弃了,不用这个搭建。</p>
<p><strong>然后看了其他很多搭建博客的，后来选择了hexo。</strong></p>
<blockquote>
<p><font color= 'grey'>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo的主题样式也有很多好看的，而且github都有star上万的。说明还是很受欢迎的。</font></p>
</blockquote>
<p>如果有人想使用Ghost搭建的轻型博客可以去看一下<a href="https://shevakuilin.com/build-ghost-on-centos7/" target="_blank" rel="noopener">如何在 CentOS 7 上搭建一个 Ghost 博客</a>，朋友就是使用这个搭建的，我选择了hexo我就不去折腾了。</p>
<p>hexo 搭建博客可以采用 </p>
<p>​    1、<a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="noopener">Hexo</a> + <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> 的方案，前往<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a>注册一个账号。<br>​    2 、采用 CentOS 搭建在云服务器上，我的是CentOS / 7.6 x64系统，就是Linux操作系统的一个发行版本。</p>
<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul>
<li><a href="#node_install">Node安装</a></li>
<li><a href="#git_install">Git环境安装</a></li>
<li><a href="#hexo_install">Hexo安装</a></li>
<li><a href="#nginx_install">Nginx配置安装</a></li>
</ul>
<p><strong>如果直接在放在服务器上,可以不用安装git,只是需要安装<code>node</code>、<code>Hexo</code>、<code>nginx</code>。如果使用Github搭建,则需要按照安装。意思就是如果你想要通过git从一个地方提交到远程仓库，就需要安装。</strong></p>
<p>免费的代码存储空间，先去上面的网址注册一个账号，这个账号就是作为博客的网址的前缀，注意这个是不能修改的<code>https://xxx.github.io</code>。由于我都使用工具在云服务器操作的，所以这儿推荐一个Mac系统软件上感觉相对好用的软件 <code>FinalShell SSH工具</code><a href="http://www.hostbuf.com" target="_blank" rel="noopener">简陋的官网</a>，不过我喜欢，就喜欢简单而又直白的…。<a href="http://www.hostbuf.com/downloads/finalshell_install.pkg" target="_blank" rel="noopener">macOs系统版本FinalShell下载</a>，<a href="http://www.hostbuf.com/downloads/finalshell_install.exe" target="_blank" rel="noopener">windows版本FinalShell下载</a>。不过你喜欢用其他也行，只要能连接上服务器就完事。</p>
<p><a name='node_install'><strong>一、配置Node和安装</strong></a></p>
<ul>
<li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网</a>下载node安装包，下载<a href="https://nodejs.org/dist/v12.14.1/node-v12.14.1-linux-x64.tar.xz" target="_blank" rel="noopener">Linux Binaries (x64) node-v12.14.1-linux-x64.tar.xz includes npm 6.13.4</a> </li>
</ul>
<ul>
<li><p>如果你是使用的Final的话，你自己选择一个node要安装的目录，你也可以新建一个。我的是在主目录新建了一个/soft，然后在命令工具cd /soft 该目录，如果你这儿是想放在其他目录里，你自己cd到要的那个目录里，然后你直接把下载下来的node包拖到这个目录下，就会显示上传。如果你使用的其他工具请自行解决，你也可以使用服务器远程桌面连接，然后在服务上直接下载也行。</p>
</li>
<li><p>使用命令 <code>xz -d node-v12.14.1-linux-x64.tar.xz</code>转为 <code>node-v12.14.1-linux-x64.tar</code>文件 然后<code>tar -xvf node-v10.15.1-linux-x64.tar</code>解压，然后使用删除 <code>rm -rf node-v12.14.1-linux-x64.tar</code>源文件，重命文件夹 <code>mv node-v12.14.1-linux-x64 node</code> 后面好使用。</p>
</li>
<li><p>建立软连接，就是快捷方式就相当于一个入口相当于桌面快捷方式，前面部分就是你先前安装路径 后面是快捷方式路径。</p>
<p><code>ln -s /soft/node/bin/node /usr/local/bin/node</code><br><code>ln -s /soft/node/bin/npm /usr/local/bin/npm</code></p>
</li>
<li><p>使用 <code>npm - v</code>和<code>node - v</code>是否安装成功，如果成功会输出版本号<code>#node -v v12.14.1</code> 和 `#npm -v6.13.4。</p>
<p>找到这个 <code>/usr/local/bin</code> 路径会node和npm的快捷方式，带有绿色的箭头。</p>
</li>
</ul>
<p><a name='git_install'><strong>二、Git环境安装</strong></a></p>
<ul>
<li><p>选择一个目录安装Git，看你自己安装在哪儿。我的是安装到/usr/local目录下,<code>cd /usr/local/git</code>。</p>
</li>
<li><p><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/" target="_blank" rel="noopener">这儿查看git最新版本</a> 或者<a href="https://github.com/git/git/releases" target="_blank" rel="noopener">github上查看</a>，我使用的是<a href="https://github.com/git/git/releases/tag/v2.20.0-rc0" target="_blank" rel="noopener">git v2.20.0-rc0</a>版本，你可以直接下载下来上传到linux环境中。也可以使用命令  <code>wget https://github.com/git/git/archive/v2.20.0-rc0.tar.gz</code>。</p>
</li>
<li><p>下载过后然后解压和上面的步骤一样 <code>tar -zxvf git-v2.20.0-rc0.tar.gz</code>,然后删除<code>rm -rf git-v2.20.0-rc0.tar.gz</code>源文件。</p>
</li>
<li><p>安装依赖包, <code>yum install curl-devel</code>。</p>
<p>开始安装Git   <code>./configure --prefix=/usr/local/git</code> 这儿这个/usr/local/git 就儿这个目录是你的git安装目录，之前的解压出来目录是 /usr/local/git-v2.20.0-rc0 。</p>
<p>执行 <code>make。</code></p>
<p>再执行完成过后，执行 <code>make install</code>。</p>
<p>建立软连接，和前面的意思一样快捷方式 <code>ln -s /usr/local/git/bin/* /usr/bin/</code>。</p>
<p>查看版本<code>git --version</code></p>
</li>
<li><p>GitHub 添加 <code>SSH key</code>,先看本地是否有<code>cd ~/.ssh</code> 然后再执行<code>ls</code>，存在会显示 id_rsa、id_rsa.pub、know_hosts 三个文件，没有创建 <code>ssh-keygen -t rsa -C &quot;xxx邮箱&quot;</code>，把 “xxx邮箱” 替换成你真实的注册github时的邮箱,然后回车输入两次密码。直接回车为空就行，成功后通过如下命令拷贝 SSH key 的内容 <code>clip &lt; ~/.ssh/id_rsa.pub</code>不过你也可以直接打开然后再复制。然后再github新建的仓库里，用你的用户名命名。创建成功过后打开<code>SSH and GPD Keys</code>然后填入信息和刚才复制的 <code>SSH keys</code>值 ,到这儿github pages配置完成。</p>
</li>
</ul>
<p><a name='hexo_install'><strong>三、Hexo安装</strong></a></p>
<ul>
<li><p>安装 <code>npm install -g hexo-cli</code>,hexo为node的一个模块。</p>
</li>
<li><p>建立hexo 软连接 <code>ln -s /soft/node/bin/node/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</code>。</p>
</li>
<li><p><code>cd  /soft/hexo/hexoblog</code>,然后执行 <code>hexo init hexoblog</code>  <code>npm install</code>。</p>
</li>
<li><p>hexoblog目录下会多出来<code>.deploy_git</code>、<code>node_modules</code>、<code>scaffolds</code>、<code>public</code>、<code>source</code>、<code>themes</code>等一些配置文件夹，这儿public就是hexo 执行<code>hexo g</code>过后生成的网站根目录，source是编写的Markdown文件资源,themes是hexo博客的一些主题目录。这儿还有一个重要的目录配置文件<code>_config.yml</code>这个就是配置网站里的基础信息。</p>
</li>
<li><p><code>hexo clean</code>、<code>hexo generate、</code> <code>hexo server</code>、 <code>hexo deploy</code> 分别对应简写<code>hexo c、 g 、s 、d</code>，第一个清除所有生成网页文件，第二个生成静态的网页文件，第三个开始启动本地服务器 <code>http://localhost:4000/</code>临时时访问，第四个是生成后立即部署网站。更多指令可以前往<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">hexo官网查看</a>。</p>
</li>
<li><p>这儿public目录下的<code>_config.yml</code>配置如果是使用github+pages 。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">heme: landscape-plus ##这儿默认是landscape主题官方</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:xxx/xxx.github.io.git ##这儿换成你github用户名</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置过后就可以<code>hexo s</code>查看<code>hexo d</code>发布到github了。</p>
</li>
</ul>
<p><a name='nginx_install'><strong>四、Nginx配置安装</strong></a></p>
<ul>
<li><p>去<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">官网下载</a>最新的Nginx安装包<a href="http://nginx.org/download/nginx-1.14.2.tar.gz" target="_blank" rel="noopener">nginx-1.14.2</a>。</p>
</li>
<li><p>上传到服务器 <code>/usr/local</code>,和前面一样的解压，然后 <code>cd /usr/local/ngxin-1.14.2</code>,再执行命令<code>./configure --prefix=/usr/local/nginx-1.14.2</code>。</p>
</li>
<li><p>执行 <code>make</code> ,再执行 <code>make install</code>。</p>
</li>
<li><p>找到安装完成过后的 <code>/usr/local/nginx/sbin/nginx</code>的文件，我这儿把nginx-1.14.2重命名nginx。然后修改nginx的配置。找到路径 /usr/local/nginx/conf/nginx.conf  打开这儿就是一系列的配置。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80;#可以修改成其他端口,确定该端口可用</span><br><span class="line">      server_name  localhost;#有域名填写域名</span><br><span class="line">      </span><br><span class="line">      listen <span class="number">443</span> ssl;</span><br><span class="line">      ssl_certificate      server.crt;</span><br><span class="line">      ssl_certificate_key  server_nopwd.key;</span><br><span class="line">      #charset koi8-r;</span><br><span class="line">      #access_log  logs/host.access.log  main;</span><br><span class="line">      location / &#123;</span><br><span class="line">          root   /soft/hexo/nginxblog/<span class="keyword">public</span>; </span><br><span class="line">          #这儿就是你要修改的hexo生成的静态网站目录</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">      #error_page  404   /404.html;</span><br><span class="line">      # redirect server error pages to the static page /50x.html</span><br><span class="line">      error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> <span class="number">404</span> /<span class="number">404</span>x.html;</span><br><span class="line">      location = /<span class="number">404</span>x.html &#123;</span><br><span class="line">          root   html;</span><br><span class="line">      &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>然后启动nginx, <code>/usr/local/nginx/sbin/nginx -s reload</code> 如果有错误的话会提示错误。<code>/usr/local/nginx/sbin/nginx -t</code>会检查nginx配置文件是否正确。<code>/usr/local/nginx/sbin/nginx -s stop</code>快速停止。</p>
</li>
<li><p>如果启动出现<font color='red'>telnet: connect to address ~ no route to host</font> 重新关闭了重启开始出现的话，请先检查端口是否可用，可以使用指令查看 <code>ps -ef | grep nginx</code>  查看nginx端口是否启动成功。<code>netstat -a</code>  查看所有服务端口运行情况。如果还是没有解决，直接关闭防火墙<code>iptables -F</code>，然后再重启nginx。</p>
</li>
<li><p>到这儿如果是80端口的话，你直接在你电脑上输入服务器主ip地址应该就可以看到你的博客界面了。</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator中JS调用Android平台实现复制功能</title>
    <url>/2018/08/15/technology20180815161022/</url>
    <content><![CDATA[<p>在cocos2dx-js中先在判断是否是手机端<code>isMobile</code>,手机端包括手机网页<code>isNative</code>和手机原生端<code>cc.sys.OS_IOS 、 cc.sys.OS_ANDROID</code>，web端<code>isBrowser</code>。</p>
<p><strong>在cocos项目中需要点击复制的地方写上方法</strong></p>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">touchCopy()&#123;</span><br><span class="line">    <span class="keyword">let</span> text = <span class="keyword">this</span>.label.string;</span><br><span class="line">    <span class="keyword">if</span>(cc.sys.isMobile)&#123;</span><br><span class="line">        jsb.reflection.callStaticMethod(<span class="string">"org/cocos2dx/javascript/AppActivity"</span>, <span class="string">"copyTextFuc"</span>, <span class="string">"(Ljava/lang/String;)V"</span>,text);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cc.sys.isBrowser)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> el = <span class="built_in">document</span>.createElement(<span class="string">'textarea'</span>);</span><br><span class="line">        el.value = text;</span><br><span class="line">        el.setAttribute(<span class="string">'readonly'</span>, <span class="string">''</span>);</span><br><span class="line">        el.style.contain = <span class="string">'strict'</span>;</span><br><span class="line">        el.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">        el.style.left = <span class="string">'-9999px'</span>;</span><br><span class="line">        el.style.fontSize = <span class="string">'12pt'</span>; <span class="comment">// Prevent zooming on iOS</span></span><br><span class="line">        <span class="keyword">const</span> selection = getSelection();</span><br><span class="line">        <span class="keyword">var</span> originalRange = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (selection.rangeCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            originalRange = selection.getRangeAt(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(el);</span><br><span class="line">        el.select();</span><br><span class="line">        el.selectionStart = <span class="number">0</span>;</span><br><span class="line">        el.selectionEnd = input.length;</span><br><span class="line">        <span class="keyword">var</span> success = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            success = <span class="built_in">document</span>.execCommand(<span class="string">'copy'</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="built_in">document</span>.body.removeChild(el);</span><br><span class="line">            <span class="keyword">if</span> (originalRange) &#123;</span><br><span class="line">                selection.removeAllRanges();</span><br><span class="line">                selection.addRange(originalRange);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>


<p><b> 关于 <font color="red">jsb.reflection.callStaticMethod(className, methodName, methodSignature, parameters…) </font>方法中参数介绍: </b></p>
<ul>
<li>第一个参：第一个为打包过后需要调用的类的所在文件下的包名+类名。</li>
<li>第二个参:方法名，在该类下的方法名字需公共方法 <code>public static</code>。</li>
<li>第三个参:<code>(Ljava/lang/String;)V</code>代表带一个字符串参数没有返回值的方法函数。<ul>
<li>例一: <font color='red'>(II)V </font>代表含有两个int类型的没有返回值的方法函数。</li>
<li>例二：<font color='red'>(Ljava/lang/String;Ljava/lang/String;)I </font> 代表含有两个字符串参数的返回值为int类型的方法函数。</li>
<li>例三：<font color='red'>(FI)Z</font> 代表含有一个float和一个int，返回值为boolean的方法函数。</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>java类型</th>
<th align="center">签名</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td align="center">I</td>
</tr>
<tr>
<td>float</td>
<td align="center">F</td>
</tr>
<tr>
<td>boolean</td>
<td align="center">Z</td>
</tr>
<tr>
<td>String</td>
<td align="center">Ljava/lang/String;</td>
</tr>
</tbody></table>
<p><strong>用Android Studio打开项目</strong><br>在AppActivity中写入上面的回调方法函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppActivity</span> <span class="keyword">extends</span> <span class="title">Cocos2dxActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AppActivity app;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">// Workaround in https://stackoverflow.com/questions/16283079/re-launch-of-activity-on-home-button-but-only-the-first-time/16447508</span></span><br><span class="line">        <span class="keyword">if</span> (!isTaskRoot()) &#123;</span><br><span class="line">            <span class="comment">// Android launched another instance of the root activity into an existing task</span></span><br><span class="line">            <span class="comment">//  so just quietly finish and go away, dropping the user back into the activity</span></span><br><span class="line">            <span class="comment">//  at the top of the stack (ie: the last state of this task)</span></span><br><span class="line">            <span class="comment">// Don't need to finish it again since it's finished in super.onCreate .</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// DO OTHER INITIALIZATION BELOW</span></span><br><span class="line">        SDKWrapper.getInstance().init(<span class="keyword">this</span>);</span><br><span class="line">        app = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyTextFuc</span><span class="params">(<span class="keyword">final</span> String message)</span></span>&#123;</span><br><span class="line">        app.showAlertDialog(message);</span><br><span class="line">        <span class="comment">//获取剪贴板管理器：</span></span><br><span class="line">        ClipboardManager cm = (ClipboardManager) app.getSystemService(Context.CLIPBOARD_SERVICE);</span><br><span class="line">        <span class="comment">// 创建普通字符型ClipData</span></span><br><span class="line">        ClipData mClipData = ClipData.newPlainText(<span class="string">"Label"</span>, message);</span><br><span class="line">        <span class="comment">//将ClipData内容放到系统剪贴板里。</span></span><br><span class="line">        cm.setPrimaryClip(mClipData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showAlertDialog</span><span class="params">(<span class="keyword">final</span> String message)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用runOnUiThread</span></span><br><span class="line">        app.runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                AlertDialog alertDialog = <span class="keyword">new</span> AlertDialog.Builder(app).create();</span><br><span class="line">                alertDialog.setMessage(message);</span><br><span class="line">                alertDialog.setIcon(R.drawable.ic_dialog_alert);</span><br><span class="line">                alertDialog.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果是mac端的Android studio 直接使用option+enter 快捷导入使用到的包名。</p>
<blockquote>
<p>import android.R;<br>import android.app.AlertDialog;<br>import android.content.ClipData;<br>import android.content.ClipboardManager;</p>
</blockquote>
<h3 id="然后打包测试-应该就可以复制粘贴了。"><a href="#然后打包测试-应该就可以复制粘贴了。" class="headerlink" title="然后打包测试 应该就可以复制粘贴了。"></a>然后打包测试 应该就可以复制粘贴了。</h3>]]></content>
      <categories>
        <category>cocosCreator</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocosCreator</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator中JS调用Android平台实现复制功能</title>
    <url>/2018/08/15/technology20200105060134/</url>
    <content><![CDATA[<p>在cocos2dx-js中先在判断是否是手机端<code>isMobile</code>,手机端包括手机网页<code>isNative</code>和手机原生端<code>cc.sys.OS_IOS 、 cc.sys.OS_ANDROID</code>，web端<code>isBrowser</code>。</p>
<p><strong>在cocos项目中需要点击复制的地方写上方法</strong></p>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">touchCopy()&#123;</span><br><span class="line">    <span class="keyword">let</span> text = <span class="keyword">this</span>.label.string;</span><br><span class="line">    <span class="keyword">if</span>(cc.sys.isMobile)&#123;</span><br><span class="line">        jsb.reflection.callStaticMethod(<span class="string">"org/cocos2dx/javascript/AppActivity"</span>, <span class="string">"copyTextFuc"</span>, <span class="string">"(Ljava/lang/String;)V"</span>,text);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cc.sys.isBrowser)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> el = <span class="built_in">document</span>.createElement(<span class="string">'textarea'</span>);</span><br><span class="line">        el.value = text;</span><br><span class="line">        el.setAttribute(<span class="string">'readonly'</span>, <span class="string">''</span>);</span><br><span class="line">        el.style.contain = <span class="string">'strict'</span>;</span><br><span class="line">        el.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">        el.style.left = <span class="string">'-9999px'</span>;</span><br><span class="line">        el.style.fontSize = <span class="string">'12pt'</span>; <span class="comment">// Prevent zooming on iOS</span></span><br><span class="line">        <span class="keyword">const</span> selection = getSelection();</span><br><span class="line">        <span class="keyword">var</span> originalRange = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (selection.rangeCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            originalRange = selection.getRangeAt(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(el);</span><br><span class="line">        el.select();</span><br><span class="line">        el.selectionStart = <span class="number">0</span>;</span><br><span class="line">        el.selectionEnd = input.length;</span><br><span class="line">        <span class="keyword">var</span> success = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            success = <span class="built_in">document</span>.execCommand(<span class="string">'copy'</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="built_in">document</span>.body.removeChild(el);</span><br><span class="line">            <span class="keyword">if</span> (originalRange) &#123;</span><br><span class="line">                selection.removeAllRanges();</span><br><span class="line">                selection.addRange(originalRange);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>


<p><b> 关于 <font color="red">jsb.reflection.callStaticMethod(className, methodName, methodSignature, parameters…) </font>方法中参数介绍: </b></p>
<ul>
<li>第一个参：第一个为打包过后需要调用的类的所在文件下的包名+类名。</li>
<li>第二个参:方法名，在该类下的方法名字需公共方法 <code>public static</code>。</li>
<li>第三个参:<code>(Ljava/lang/String;)V</code>代表带一个字符串参数没有返回值的方法函数。<ul>
<li>例一: <font color='red'>(II)V </font>代表含有两个int类型的没有返回值的方法函数。</li>
<li>例二：<font color='red'>(Ljava/lang/String;Ljava/lang/String;)I </font> 代表含有两个字符串参数的返回值为int类型的方法函数。</li>
<li>例三：<font color='red'>(FI)Z</font> 代表含有一个float和一个int，返回值为boolean的方法函数。</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>java类型</th>
<th align="center">签名</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td align="center">I</td>
</tr>
<tr>
<td>float</td>
<td align="center">F</td>
</tr>
<tr>
<td>boolean</td>
<td align="center">Z</td>
</tr>
<tr>
<td>String</td>
<td align="center">Ljava/lang/String;</td>
</tr>
</tbody></table>
<p><strong>用Android Studio打开项目</strong><br>在AppActivity中写入上面的回调方法函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppActivity</span> <span class="keyword">extends</span> <span class="title">Cocos2dxActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AppActivity app;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">// Workaround in https://stackoverflow.com/questions/16283079/re-launch-of-activity-on-home-button-but-only-the-first-time/16447508</span></span><br><span class="line">        <span class="keyword">if</span> (!isTaskRoot()) &#123;</span><br><span class="line">            <span class="comment">// Android launched another instance of the root activity into an existing task</span></span><br><span class="line">            <span class="comment">//  so just quietly finish and go away, dropping the user back into the activity</span></span><br><span class="line">            <span class="comment">//  at the top of the stack (ie: the last state of this task)</span></span><br><span class="line">            <span class="comment">// Don't need to finish it again since it's finished in super.onCreate .</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// DO OTHER INITIALIZATION BELOW</span></span><br><span class="line">        SDKWrapper.getInstance().init(<span class="keyword">this</span>);</span><br><span class="line">        app = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyTextFuc</span><span class="params">(<span class="keyword">final</span> String message)</span></span>&#123;</span><br><span class="line">        app.showAlertDialog(message);</span><br><span class="line">        <span class="comment">//获取剪贴板管理器：</span></span><br><span class="line">        ClipboardManager cm = (ClipboardManager) app.getSystemService(Context.CLIPBOARD_SERVICE);</span><br><span class="line">        <span class="comment">// 创建普通字符型ClipData</span></span><br><span class="line">        ClipData mClipData = ClipData.newPlainText(<span class="string">"Label"</span>, message);</span><br><span class="line">        <span class="comment">//将ClipData内容放到系统剪贴板里。</span></span><br><span class="line">        cm.setPrimaryClip(mClipData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showAlertDialog</span><span class="params">(<span class="keyword">final</span> String message)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用runOnUiThread</span></span><br><span class="line">        app.runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                AlertDialog alertDialog = <span class="keyword">new</span> AlertDialog.Builder(app).create();</span><br><span class="line">                alertDialog.setMessage(message);</span><br><span class="line">                alertDialog.setIcon(R.drawable.ic_dialog_alert);</span><br><span class="line">                alertDialog.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果是mac端的Android studio 直接使用option+enter 快捷导入使用到的包名。</p>
<blockquote>
<p>import android.R;<br>import android.app.AlertDialog;<br>import android.content.ClipData;<br>import android.content.ClipboardManager;</p>
</blockquote>
<h3 id="然后打包测试-应该就可以复制粘贴了。"><a href="#然后打包测试-应该就可以复制粘贴了。" class="headerlink" title="然后打包测试 应该就可以复制粘贴了。"></a>然后打包测试 应该就可以复制粘贴了。</h3>]]></content>
      <categories>
        <category>cocosCreator</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocosCreator</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator游戏开发打包安卓apk</title>
    <url>/2018/08/10/technology20180810152102/</url>
    <content><![CDATA[<p><strong>我自己测试通过的打包所使用的开发工具和版本</strong></p>
<table>
<thead>
<tr>
<th align="center">开发工具版本</th>
<th align="center">测试版本</th>
<th align="right">下载</th>
<th align="center">前往官网</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CocosCreator</td>
<td align="center">2.0～2.2</td>
<td align="right"><a href="http://cocos2d-x.org/filedown/CocosCreator_v2.2.1_mac" target="_blank" rel="noopener">直接下载2.2Mac版</a></td>
<td align="center"><a href="https://www.cocos.com/creator" target="_blank" rel="noopener">官网选择其它版本</a></td>
</tr>
<tr>
<td align="center">android-sdk</td>
<td align="center">android-21</td>
<td align="right"><a href="https://pan.baidu.com/s/1o6v7E2I?utm_source=androiddevtools&utm_medium=website&errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&traceid=" target="_blank" rel="noopener">直接下载android sdk21-5.0</a></td>
<td align="center"><a href="https://www.androiddevtools.cn" target="_blank" rel="noopener">选择其他SDK版本</a></td>
</tr>
<tr>
<td align="center">android-ndk</td>
<td align="center">android-ndk-r16-beta1</td>
<td align="right"><a href="https://dl.google.com/android/repository/android-ndk-r16-beta1-darwin-x86_64.zip?utm_source=androiddevtools&utm_medium=website" target="_blank" rel="noopener">直接下载android ndk-r16-beta1</a></td>
<td align="center"><a href="https://www.androiddevtools.cn" target="_blank" rel="noopener">选择其他NDK版本</a></td>
</tr>
</tbody></table>
<a id="more"></a>

<h4 id="一、链接SDK和NDK"><a href="#一、链接SDK和NDK" class="headerlink" title="一、链接SDK和NDK"></a>一、链接SDK和NDK</h4><ul>
<li>选择<code>偏好设置</code>将下载好的<code>DNK</code>和<code>SDK</code>指定路径，然后保存。<br><img src="https://s1.ax1x.com/2020/06/17/NExcdO.jpg" alt=""></li>
</ul>
<h4 id="二、配置打包参数"><a href="#二、配置打包参数" class="headerlink" title="二、配置打包参数"></a>二、配置打包参数</h4><ul>
<li><p>配置<br>1、游戏名称: 你的项目游戏名<br>2、发布平台: <code>安卓</code><br>3、发布路径: 默认为<code>./build</code><br>4、初始化场景: 这儿是选择你APP运行时的第一屏出现的页面场景，如果选错会直接加载到其他页面。<br>5、参与构建的场景: 只是要参与游戏的页面有关的场景都要选上。<br>6、模版:<code>default</code> 即可<br>7、包名:你自己的包名<br>8、选择Target API Level，我之前选择的android-21,你选择你的就可以下载的SDK对应版本就可以了。<br>9、APP ABI: armeabi-v7a</p>
<blockquote>
<p>armeabi-v7a: ARM v7 目前主流版本，第7代及以上的 ARM 处理器。2011年15月以后的生产的大部分Android设备都使用它。<br>arm64-v8a: 64位支持，第8代、64位ARM处理器，很少设备，三星 Galaxy S6是其中之一。<br>x86 架构的手机、平板、模拟器用。</p>
</blockquote>
<p>10、密钥库: 发布正式版，请自行生成密钥。<br>11、设备方向: 按照项目需求来。</p>
</li>
</ul>
<p><img src="https://s2.ax1x.com/2020/01/13/l7kUD1.png" alt=""></p>
<ul>
<li><p>然后构建，等构建完成,选择编译等待编译完成，编译完成过后一般在路径下的 <code>jsb-default\publish\android</code>下。</br></p>
<h4 id="如果前面编译失败的情况下，直接使用Android-Studio编译打包"><a href="#如果前面编译失败的情况下，直接使用Android-Studio编译打包" class="headerlink" title="如果前面编译失败的情况下，直接使用Android Studio编译打包"></a><font color="black">如果前面编译失败的情况下，直接使用Android Studio编译打包</font></br></h4><p>使用<code>Android Studio</code>打开<code>build-&gt;jsb-default-&gt;frameworks-&gt;runtime-src-&gt;proj.android-studio</code></p>
</li>
<li><p>如果遇到以下报错问题:</p>
<ul>
<li><p>出现一:<font color="red">Failed to find Platform SDK with path: platforms;android–1</font></br> 解决: 直接在gradle.properties文件中<code>PROP_COMPILE_SDK_VERSION</code>和<code>PROP_TARGET_SDK_VERSION</code>修改成已经下载好的SDK版本，我的这儿是 21，然后在<code>Try Again</code>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Android SDK version that will be used as the compile project</span><br><span class="line">PROP_COMPILE_SDK_VERSION=-1 改成你的SDK版本</span><br><span class="line">Android SDK version that will be used as the earliest version of android this application can run on</span><br><span class="line">PROP_MIN_SDK_VERSION=16</span><br><span class="line">Android SDK version that will be used as the latest version of android this application has been tested on</span><br><span class="line">PROP_TARGET_SDK_VERSION=-1  改成你的SDK版本</span><br></pre></td></tr></table></figure>
</li>
<li><p>出现二: <font color="red"> Android resource linking failed Output:  ~/build/intermediates/merged_manifests/debug/processDebugManifest/merged/AndroidManifest.xml:29: error: attribute android:usesCleartextTraffic not found.error: failed processing manifest. </font><br>  解决: 直接在你的项目名称下面的<code>manifests</code>文件夹下<code>AndroidManifest.xml</code>，去掉 <font color="#4183C4"><code>android:usesCleartextTraffic=&quot;true&quot;</code></font></p>
<blockquote>
<p>android：usesCleartextTraffic 指示应用程序是否打算使用明文网络流量，例如明文HTTP。目标API级别为27或更低的应用程序的默认值为“ true”。面向API级别28或更高级别的应用默认为“ false”。当属性设置为“ false”时，平台组件（如HTTP和FTP堆栈，DownloadManager和MediaPlayer）将拒绝应用程序使用明文流量的请求。避免明文通信的主要原因是缺乏机密性，真实性和防篡改保护；网络攻击者可以窃听所传输的数据，并且还可以对其进行修改而不会被检测到。</p>
</blockquote>
</li>
</ul>
</li>
<li><p>我的SDK版本是Android21,所以去掉.<br>这儿如果编译过慢可以gradle配置一下放在本地，就不会去网络加载了。前往下载<a href="https://services.gradle.org/distributions/" target="_blank" rel="noopener">各个gradle版本</a><br>然后设置<code>gradle-wrapper.properties</code> <font color="#4183C4">distributionUrl=https://services.gradle.org/distributions/gradle-4.10.3-all.zip</font> </p>
</li>
<li><p>至于配置签名这儿就不多说了.<br>给一个传送门<u><a href="https://www.jianshu.com/p/d5aa7952b580" target="_blank" rel="noopener">Android如何生成签名文件</a></u></p>
</li>
</ul>
<h3 id="要耐心等待一会儿，就编译成功了"><a href="#要耐心等待一会儿，就编译成功了" class="headerlink" title="要耐心等待一会儿，就编译成功了"></a>要耐心等待一会儿，就编译成功了</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Gradle build finished in <span class="number">8</span> s <span class="number">291</span> ms </span><br><span class="line"><span class="function">Build <span class="title">APK</span><span class="params">(s)</span></span></span><br><span class="line"><span class="function"><span class="title">APK</span><span class="params">(s)</span> generated successfully <span class="keyword">for</span> 1 <span class="keyword">module</span></span></span><br><span class="line"><span class="function">Module 'xxx': locate or analyze the APK.</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>cocosCreator</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>cocosCreator</tag>
      </tags>
  </entry>
  <entry>
    <title>《梦宵》</title>
    <url>/2018/08/05/poetry20180805051120/</url>
    <content><![CDATA[<p>梦里想见到的人<br>大概在梦里也会找她吧<br>寻寻觅觅<br>大概也会从梦里惊醒吧<br>山中兰若<br>绝迹蓬蒿<br>云雨楚楚<br>化作烟雨倾覆你<br>执枪八方<br>暮雪空壕<br>沙场言笑<br>吹彻画角<br>江南晚客红绳发梢<br>胜者归来<br>卿与良宵</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《彼岸》</title>
    <url>/2018/07/28/poetry20180728015635/</url>
    <content><![CDATA[<p>晚风给予你一丝清凉<br>抚去欲望与焦灼<br>每个闯荡归来的人<br>暮色都会赐予神秘的面纱<br>至此不分娇韵的脸庞<br>从还音行断<br>沉色暗涌<br>半生月色意在眉弯<br>许诺风声余留两尖<br>蝉鸣不知白昼<br>逾越一个又一个萧稠<br>叶落不知殇秋<br>辜负了一个又一个挽留<br>涓涓溪流<br>日月盘恒邻水至洲<br>愿作你流淌着的热血<br>拥有你的生息与衰亡<br>寒风总伴夜雪苍白人<br>尤留世间容褶白赴<br>蒯覆石泐凝霜<br>回首凝望<br>愿你醒来亦是彼岸<br>拥有了不一样的星光</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《余生》</title>
    <url>/2018/07/28/poetry20180728015521/</url>
    <content><![CDATA[<p>弥静黑夜中的烛火<br>斑斑点点<br>彻夜通明<br>萦绕着小时候的记忆<br>你诉说理想<br>清澈明亮的眼睛<br>沾染不得生活的一丝浑浊<br>匆匆茫茫的行人<br>从不打烊的灯光<br>映忖着城市的繁华与喧嚣<br>每个长大的人<br>都演绎着哀忧悲怆<br>不一样的肝肠<br>痴心妄想的疯狂<br>从灵魂里涌入冰凉<br>遮住双眼<br>余生太长<br>这俗世<br>这一杯<br>这一次<br>为你行走锋芒</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗歌</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《採桑》</title>
    <url>/2018/06/20/poetry20180620150223/</url>
    <content><![CDATA[<p>水流脩荺声潺泱，风遇花蕾馥郁芳。<br>残月诗里离合道，佳人烟波阁楼霄。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客landscape-plus移值next主题的站内搜索功能</title>
    <url>/2018/03/20/technology20180320031020/</url>
    <content><![CDATA[<p>由于<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="noopener">landscape-plus主题</a>使用的外部百度搜索，搜索到在进入目标文章。外部搜索没有站内搜素方便，其实<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">next主题</a>就有一个看上去不错的站内搜索，但是next主题又不是我喜欢的风格，所以查找很多博客文章最后看到可以移值next主题的搜索，所以有点兴趣，然后开始了next 主题搜索的移值功能。</p>
<p>参考了<a href="https://hans2936.github.io/2018/06/15/HexoSearch/" target="_blank" rel="noopener">NexT本地搜索引擎的移植</a>这篇文章，感谢这位小哥！期间也遇到很多小的问题这儿总结说一下。</p>
<h4 id="search的安装和配置"><a href="#search的安装和配置" class="headerlink" title="search的安装和配置"></a>search的安装和配置</h4><p>打开博客所在目录，然后运行安装 <code>npm install hexo-generator-searchdb --save</code>,然后在博客的主要配置文件中<code>_config.yml</code>里面加上</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 1000</span><br></pre></td></tr></table></figure>

<p>然后打开landscape-plus主题下的<code>_config.yml</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># search </span><br><span class="line">local_search:</span><br><span class="line">  enable: true </span><br><span class="line">  trigger: auto  ## 表示搜索结果会不会打字时自动显示</span><br><span class="line">  top_n_per_article: -1 ## 表示每篇文章最多显示几条结果（-1为不限数字）</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next</a>主题中的搜索文件后缀是<code>.swig</code>,而<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="noopener">landscape-plus</a>主题中是<code>.ejs</code>, 在next中<a href="https://github.com/iissnan/hexo-theme-next/blob/master/layout/_third-party/search/localsearch.swig" target="_blank" rel="noopener">localsearch.swig</a>、<a href="https://github.com/iissnan/hexo-theme-next/blob/master/source/css/_common/components/third-party/localsearch.styl" target="_blank" rel="noopener">localsearch.styl</a>、<a href="https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/search/localsearch.swig" target="_blank" rel="noopener">另一个localsearch.swig</a>、<a href="https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/header.swig" target="_blank" rel="noopener">header.swig</a>代码拷贝然后重新定义图标。</p>
<h4 id="具体操作步骤"><a href="#具体操作步骤" class="headerlink" title="具体操作步骤"></a>具体操作步骤</h4><ul>
<li><p>定义三个图标，由于Next主题图标使用的是<a href="http://fontawesome.dashgame.com" target="_blank" rel="noopener">FontAwesome 图标</a>。如localsearch.swig <code>&lt;i class = &quot;fa ...&gt; &lt;/i&gt;</code>在landscape 却不支持这样子所以要修改一下，打开<code>~/themes/landscape-plus/source/css/_partial/header.styl</code>文件，加入三个图标。</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#icon-close</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: FontAwesome;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\f146"</span>;<span class="comment">/*关闭搜索框的图标 移植时用&lt;span id="icon-close"&gt;&lt;/span&gt;*/</span></span><br><span class="line">  <span class="attribute">font-size</span>: x-large</span><br><span class="line">&#125;</span><br><span class="line">#icon-search:before &#123;</span><br><span class="line">  font-family: FontAwesome;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\f002"</span>;<span class="comment">/*搜索框的图标 移植时用&lt;span id="icon-search"&gt;&lt;/span&gt;*/</span></span><br><span class="line">  <span class="attribute">font-size</span>: x-large</span><br><span class="line">&#125;</span><br><span class="line">#icon-frown:before &#123;</span><br><span class="line">  font-family: FontAwesome;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\f119"</span>;<span class="comment">/*搜索无结果时的图标 移植时用&lt;span id="icon-frown"&gt;&lt;/span&gt;*/</span></span><br><span class="line">  <span class="attribute">font-size</span>: x-large</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在你的landscape-plus主题<code>~/themes/landscape-plus/layout/_partial/header.ejs</code>打开，<a href="https://github.com/xiangming/landscape-plus/blob/master/layout/_partial/header.ejs" target="_blank" rel="noopener">header.ejs</a>文件的25行修改替换，就换成了<code>local_search.enable</code> 来控制搜索功能了。打开本地搜索，会启动<code>class=&quot;popup-trigger&quot;</code>就打开了本地搜索引擎。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"nav-search-btn"</span> <span class="attr">class</span>=<span class="string">"nav-icon"</span> <span class="attr">title</span>=<span class="string">"Search"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">"换成"</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(!<span class="attr">theme.local_search.enable</span>) &#123; %&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"nav-search-btn"</span> <span class="attr">class</span>=<span class="string">"nav-icon"</span> <span class="attr">title</span>=<span class="string">"&lt;%= __('search') %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.local_search.enable</span>) &#123; %&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"popup-trigger nav-icon"</span> <span class="attr">id</span>=<span class="string">"nav-search-btn"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>

<p>还是<a href="https://github.com/xiangming/landscape-plus/blob/master/layout/_partial/header.ejs" target="_blank" rel="noopener">header.ejs</a>文件的第38行后面加上这句。就是<code>&lt;/header&gt;</code>标签前面。其中指向了<code>search.ejs</code>,这个文件就是Next主题的<a href="https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/search/localsearch.swig" target="_blank" rel="noopener">另一个localsearch.swig</a> 重命名。然后将这个重命名的<code>search.ejs</code>文件放到你的landscape-plus主题和<code>header.ejs</code>同级的目录下。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.local_search.enable</span>) &#123; %&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"local-search-inner"</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">search</span>') %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>

<p> 修改这个<code>search.ejs</code>文件下的适配图标，和默认的提示搜索的placeholder文本。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popup search-popup local-search-popup"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"local-search-header clearfix"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"search-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"popup-btn-close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-times-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"local-search-input-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">placeholder</span>=<span class="string">"&#123;&#123; __('search.placeholder') &#125;&#125;"</span> <span class="attr">spellcheck</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"local-search-input"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"local-search-result"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  "修改成"</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popup search-popup local-search-popup"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"local-search-header clearfix"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"search-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"popup-btn-close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"icon-close"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"local-search-input-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">placeholder</span>=<span class="string">"本地搜索..."</span> <span class="attr">spellcheck</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"local-search-input"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"local-search-result"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>开始放入核心 javascript代码。把<a href="https://github.com/iissnan/hexo-theme-next/blob/master/layout/_third-party/search/localsearch.swig" target="_blank" rel="noopener">localsearch.swig</a>重命名成<code>localsearch.ejs</code>放入<code>~/themes/landscape-plus/layout/_partial</code>目录下，然后在<code>~/themes/landscape-plus/layout/layout.ejs</code> <a href="https://github.com/xiangming/landscape-plus/blob/master/layout/layout.ejs" target="_blank" rel="noopener">layout.ejs</a> 文件的最后第40行后面，就是<code>&lt;/body&gt;</code>之前。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">localsearch</span>') %&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后进入过后要修改几个地方。现在这个核心文件<code>localsearch.ejs</code>目录在<code>~/themes/landscape-plus/layout/_partial</code>, 第1行、第7行、第58行、第254行、第256行、第276行修改成。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.local_search.enable %&#125;</span><br><span class="line"><span class="string">"1行处修改成"</span></span><br><span class="line">&lt;% <span class="keyword">if</span> (!theme.local_search.enable)&#123; %&gt;<span class="xml"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">var search_path = "&#123;&#123; config.search.path &#125;&#125;";</span></span><br><span class="line"><span class="xml">"7行处修改成"</span></span><br><span class="line"><span class="xml">var search_path = "<span class="tag">&lt;<span class="name">%=</span> <span class="attr">config.search.path</span> %&gt;</span>"; </span></span><br><span class="line"></span><br><span class="line"><span class="xml">$('.popup').detach().appendTo('.header-inner');</span></span><br><span class="line"><span class="xml">"58行处修改成" //这儿.header-inner是搜索框的位置</span></span><br><span class="line"><span class="xml">$('.popup').detach().appendTo('.local-search-inner');</span></span><br><span class="line"><span class="xml">                                   </span></span><br><span class="line">'&lt;div id="no-result"&gt;&lt;i class="fa fa-search fa-5x" /&gt;&lt;/div&gt;'</span><br><span class="line">"253行修改成"</span><br><span class="line">'&lt;div id="no-result"&gt;&lt;span id="icon-search"&gt;&lt;/span&gt;&lt;/div&gt;'</span><br><span class="line">                                   </span><br><span class="line">'&lt;div id="no-result"&gt;&lt;i class="fa fa-frown-o fa-5x" /&gt;&lt;/div&gt;'</span><br><span class="line">"256行修改成"</span><br><span class="line">'&lt;div id="no-result"&gt;&lt;span id="icon-frown"&gt;&lt;/span&gt;&lt;/div&gt;'</span><br><span class="line">                                        </span><br><span class="line">if('auto' === '&#123;&#123; theme.local_search.trigger &#125;&#125;')</span><br><span class="line">"276行修改成"</span><br><span class="line">if ('auto' === '&lt;%= theme.local_search.trigger %&gt;')</span><br></pre></td></tr></table></figure>
</li>
<li><p>放入渲染文件，可以把 <a href="https://github.com/iissnan/hexo-theme-next/blob/master/source/css/_common/components/third-party/localsearch.styl" target="_blank" rel="noopener">localsearch.styl</a> 放入 <code>/source/css/_partial/</code><br>然后在主渲染文件<code>～/themes/landscape-plus/source/css/_partial</code>中，然后找到<code>~/themes/landscape-plus/source/css/style.styl</code> 这件打开 加上 <code>@import &quot;_partial/localsearch&quot;</code> 就可以了，就是导入这个文件。</p>
<p>如果搜索引擎的阴影背景<code>.local-search-pop-overlay</code> 总是会出现在最上方，导致搜索框出来之后根本点不到。我直接给它设置 <code>z-index: auto</code> ，跳过了这个问题。</p>
<p>然后就是细节调试一下这个里面的样式，这儿我修改的部分，就参考和修改了三个地方。</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.local-search-pop-overlay</span></span><br><span class="line">  <span class="attribute">position</span>: fixed</span><br><span class="line">  width: <span class="number">100%</span></span><br><span class="line">  height: <span class="number">100%</span></span><br><span class="line">  top: <span class="number">0</span></span><br><span class="line">  left: <span class="number">0</span></span><br><span class="line">  z-index: <span class="number">2080</span></span><br><span class="line">  background-color: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>)</span><br><span class="line">  z-index: auto //解决阴影背景出现在最上方的问题</span><br><span class="line"></span><br><span class="line">.local-search-popup</span><br><span class="line">  display: none</span><br><span class="line">  position: fixed</span><br><span class="line">  top: <span class="number">10%</span></span><br><span class="line">  left: <span class="number">50%</span></span><br><span class="line">  margin-left: -<span class="number">350px</span></span><br><span class="line">  width: <span class="number">700px</span></span><br><span class="line">  height: <span class="number">80%</span></span><br><span class="line">  padding: <span class="number">0</span></span><br><span class="line">  background: <span class="number">#fff</span></span><br><span class="line">  color: <span class="number">#333</span></span><br><span class="line">  z-index: <span class="number">9999</span></span><br><span class="line">  border-radius: <span class="number">5px</span></span><br><span class="line">  @media mq-mobile /*这儿在next主题中是+mobile() 这个是在手机端展示的时候执行的样式*/</span><br><span class="line">    padding: <span class="number">0</span>     /*在landscape-plus定义了@media mq-mobile*/</span><br><span class="line">    top: <span class="number">0</span></span><br><span class="line">    left: <span class="number">0</span></span><br><span class="line">    margin: <span class="number">0</span></span><br><span class="line">    width: <span class="number">100%</span></span><br><span class="line">    height: <span class="number">100%</span></span><br><span class="line">    border-radius: <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">.local-search-popup</span><br><span class="line">  display: none</span><br><span class="line">  position: fixed</span><br><span class="line">  top: <span class="number">10%</span></span><br><span class="line">  left: <span class="number">50%</span></span><br><span class="line">  margin-left: -<span class="number">350px</span></span><br><span class="line">  width: <span class="number">700px</span></span><br><span class="line">  height: <span class="number">80%</span></span><br><span class="line">  padding: <span class="number">0</span></span><br><span class="line">  background: <span class="number">#fff</span></span><br><span class="line">  color: <span class="number">#333</span></span><br><span class="line">  z-index: <span class="number">9999</span></span><br><span class="line">  border-radius: <span class="number">5px</span></span><br><span class="line">  @media mq-mobile</span><br><span class="line">    padding: <span class="number">0</span></span><br><span class="line">    top: <span class="number">0</span></span><br><span class="line">    left: <span class="number">0</span></span><br><span class="line">    margin: <span class="number">0</span></span><br><span class="line">    width: <span class="number">100%</span></span><br><span class="line">    height: <span class="number">100%</span></span><br><span class="line">    border-radius: <span class="number">0</span></span><br><span class="line">    .search-icon, .popup-btn-close</span><br><span class="line">    display: inline-block</span><br><span class="line">    font-size: <span class="number">18px</span></span><br><span class="line">    color: <span class="number">#999</span></span><br><span class="line">    height: <span class="number">36px</span></span><br><span class="line">    width: <span class="number">18px</span></span><br><span class="line">    padding-left: <span class="number">10px</span></span><br><span class="line">    padding-right: <span class="number">10px</span></span><br><span class="line">    padding-top: <span class="number">5px</span> //移动到输入框位置</span><br></pre></td></tr></table></figure>
</li>
<li><p>关闭原先的搜索功能在<code>~/themes/landscape-plus/source/js/script.js</code>第27行到60行屏蔽掉，使用<code>/**/</code>。这儿在<code>~/themes/landscape-plus/layout/_partial/localsearch.ejs</code>第一行加入的<code>&lt;% if (!theme.local_search.enable){ %&gt;&lt;% } %&gt;</code>已经可以动态控制开启了。</p>
</li>
<li><p>到这个重新<code>hexo c</code>、  <code>hexo g</code>就可以看到效果了。是不是很有成就感！我这儿使用的<a href="https://imgchr.com" target="_blank" rel="noopener">免费的图床</a>。<img src="https://s2.ax1x.com/2020/01/19/1CjIaQ.jpg" alt=""></p>
</li>
</ul>
<h4 id="结束心得："><a href="#结束心得：" class="headerlink" title="结束心得："></a>结束心得：</h4><p>其实开始我也是修改的不是那么顺利，特么是有些网上说的根本不一样，文件有的缺失然后又看不到。只要一个小的细节没有注意到就会出错。导致修改半天不知道哪儿的原因，但是只要你心态好有耐心，很多都是可以慢慢去学，只要你喜欢折腾，不放弃，相信自己就一定可以做到。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客landscape-plus加入评论系统Valine</title>
    <url>/2018/03/19/technology20180319112009/</url>
    <content><![CDATA[<p>Landscape-plus主题使用的是”多说“，但是多说早就停止运营了。</p>
<p>所以考虑其他的评论系统替换，这儿我查找了其他的评论如<code>Disqus</code>、<code>Gitment</code>、<code>来必力</code>等，如果需要集成Gitment评论系统的可以参考<a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="noopener">这一篇文章</a>，我最后选择了valine。</p>
<p>这儿参考了<a href="https://bfdz.github.io/2017/10/29/60/" target="_blank" rel="noopener">博客添加评论系统</a>这篇文章，感谢这位小哥！</p>
<h4 id="使用valine介绍"><a href="#使用valine介绍" class="headerlink" title="使用valine介绍"></a>使用valine介绍</h4><p>   高速，使用国内后端云服务提供商 LeanCloud 提供的存储服务<br>   开源，自定义程度高<br>   支持邮件通知<br>   支持验证码<br>   支持 Markdown</p>
<h4 id="valine-的安装和使用"><a href="#valine-的安装和使用" class="headerlink" title="valine 的安装和使用"></a>valine 的安装和使用</h4><ul>
<li><p>前往<a href="https://leancloud.cn注册" target="_blank" rel="noopener">https://leancloud.cn注册</a> appid和appkey。</p>
</li>
<li><p>这儿是对<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="noopener">landscape-plus</a>修改，替换之前的<code>Duoshuo</code>，首先打开主题下的<code>_config.yml</code>去掉主题下的</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Duoshuo</span><br><span class="line">duoshuo_shortname: reqianduan</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>“换成”</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#valine leancloud</span><br><span class="line">valine_enable: true # 是否开启 控制评论的开关</span><br><span class="line">valine:</span><br><span class="line">  appid: kh6N00Qk8UIhu1N8Qfu168TH-g3gzo7sz #leancloud中的appid  换成你申请的 这儿这个id是无效的</span><br><span class="line">  appkey: YJrjTtExKMfc45OMLWhCzpHk #leancloud中的appKey 换成你申请的 这儿这个key是无效的</span><br><span class="line">  placeholder: 想说点什么...  #默认留言框内的文字</span><br><span class="line">  notify: false  #新留言是否需要通知 https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false  #是否需要验证 验证比较反人类建议false关闭</span><br><span class="line">  avatar: mm  #是否需要验证 验证比较反人类建议false关闭 #默认头像 hide:不显示头像 mm:一个灰白的头像 identicon:抽象的几何图形(根据邮箱或者昵称生成) monsterid:小怪物 wavatar:用不同面孔和背景组合生成的头像(根据邮箱或者昵称生成) retro:八位像素复古头像(根据邮箱或者昵称生成) </span><br><span class="line">  guest_info: nick,mail # 默认留言框的头部需要访问者输入的信息</span><br><span class="line">  pageSize: 15 #默认单页的留言条数</span><br></pre></td></tr></table></figure>

<ul>
<li>再打开<code>\themes\landscape-plus\layout_partial\after-footer.ejs</code><a href="https://github.com/xiangming/landscape-plus/blob/master/layout/_partial/after-footer.ejs" target="_blank" rel="noopener">after-footer.ejs文件</a>从第4行到32行换成valine的。</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (config.duoshuo_shortname || theme.duoshuo_shortname)&#123; %&gt;</span><br><span class="line">&lt;!-- 多说公共js代码 start --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">"&lt;%= config.duoshuo_shortname || theme.duoshuo_shortname %&gt;"</span>&#125;;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">    ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">    ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]</span><br><span class="line">     || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">  &#125;)();</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 多说公共js代码 end --&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; else if (config.disqus_shortname || theme.disqus_shortname)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  var disqus_shortname = '&lt;%= config.disqus_shortname || theme.disqus_shortname %&gt;';</span></span><br><span class="line"><span class="regexp">  &lt;% if (page.permalink)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">  var disqus_url = '&lt;%= page.permalink %&gt;';</span></span><br><span class="line"><span class="regexp">  &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp">  (function()&#123;</span></span><br><span class="line"><span class="regexp">    var dsq = document.createElement('script');</span></span><br><span class="line"><span class="regexp">    dsq.type = 'text/</span>javascript<span class="string">';</span></span><br><span class="line"><span class="string">    dsq.async = true;</span></span><br><span class="line"><span class="string">    dsq.src = '</span><span class="comment">//' + disqus_shortname + '.disqus.com/&lt;% if (page.comments) &#123; %&gt;embed.js&lt;% &#125; else &#123; %&gt;count.js&lt;% &#125; %&gt;';</span></span><br><span class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(dsq);</span><br><span class="line">  &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">"换成"</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;% if (config.valine_enable || theme.valine_enable)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--载入js，在&lt;/</span>body&gt;之前插入即可--&gt;</span><br><span class="line">    &lt;!--Leancloud 操作库:--&gt;</span><br><span class="line">    &lt;script src=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;!--Valine 的核心代码库--&gt;</span><br><span class="line">    &lt;script src=<span class="string">"/js/Valine.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">            av: AV, </span><br><span class="line">            el: <span class="string">'.comment'</span>,</span><br><span class="line">            app_id: <span class="string">'&lt;%= theme.valine.appid %&gt;'</span>,</span><br><span class="line">            app_key: <span class="string">'&lt;%= theme.valine.appkey %&gt;'</span>,</span><br><span class="line">            placeholder: <span class="string">'&lt;%= theme.valine.placeholder %&gt;'</span>,</span><br><span class="line">            pageSize: <span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.pageSize</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">            notify: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.notify</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">            verify: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.verify</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<p>这儿值得注意的是</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">这种格式的在next主题下是可以读取的</span><br><span class="line">在landscape-plus主题下要用&lt;% ~ %&gt;，如果是字符串的前后有一个 ` 符号。</span><br><span class="line">如果是<span class="keyword">boolean</span>和<span class="keyword">int</span>类型的值，则不需要前后的这个符号。</span><br><span class="line">app_id: `&#123;&#123; theme.valine.appkey &#125;&#125;` 要改成 `&lt;%= theme.valine.appkey %&gt;`</span><br></pre></td></tr></table></figure>

<ul>
<li>然后再打开<code>/themes/landscape-plus/layout/_partial/article.ejs</code> <a href="https://github.com/xiangming/landscape-plus/blob/master/layout/_partial/article.ejs" target="_blank" rel="noopener">article.ejs文件</a>从32行到36换成valine的代码。</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (post.comments &amp;&amp; (config.duoshuo_shortname || theme.duoshuo_shortname))&#123; %&gt;</span><br><span class="line">        &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#ds-thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">comments</span>') %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">      &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (post.comments &amp;&amp; (config.disqus_shortname || theme.disqus_shortname))&#123; %&gt;</span><br><span class="line">        &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#disqus_thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">comments</span>') %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"> &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line"> “换成”</span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">if</span> (post.comments &amp;&amp; (config.valine_enable || theme.valine_enable))&#123; %&gt;</span><br><span class="line">   &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#valine_thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">comments</span>') %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>


<p>还是该文件把46行到56行替换掉</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; (config.duoshuo_shortname || theme.duoshuo_shortname))&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"ds-thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"&lt;%= post.path %&gt;"</span> data-title=<span class="string">"&lt;%= post.title %&gt;"</span> data-url=<span class="string">"&lt;%= post.permalink %&gt;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/section&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; else if (!index &amp;&amp; post.comments &amp;&amp; (config.disqus_shortname || theme.disqus_shortname))&#123; %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;section id="comments"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="disqus_thread"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;noscript&gt;Please enable JavaScript to view the &lt;a href="/</span><span class="regexp">/disqus.com/</span>?ref_noscript<span class="string">"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/section&gt;</span></span><br><span class="line"><span class="string">&lt;% &#125; %&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  “换成“</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; (config.valine_enable || theme.valine_enable))&#123; %&gt;</span></span><br><span class="line"><span class="string">  &lt;section id="</span>comments<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;div id="</span>valine_thread<span class="string">"&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="</span>comment<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/section&gt;</span></span><br><span class="line"><span class="string">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>最后一步<code>Valine.min.js</code>放到 <code>/themes\landscape-plus\source\js</code>文件夹内，这儿是<a href="https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/" target="_blank" rel="noopener">Valine.min.js下载链接</a>，只保存Valine.min.js文件就行了。因为前面 <font color =red>&lt;script src=”/js/Valine.min.js”&gt;&lt;/script&gt; </font>已经引用的这个文件。</li>
</ul>
<h4 id="这儿为止-valine就替换完成了"><a href="#这儿为止-valine就替换完成了" class="headerlink" title="这儿为止,valine就替换完成了"></a>这儿为止,valine就替换完成了</h4><p><code>hexo clean</code>重新清除一下，然后再<code>hexo g</code>重新生成就可以看到评论系统了。</p>
<p>如果出现评论按钮没有说明你这儿写的格式有问题:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Valine(&#123;</span><br><span class="line">    av: AV, </span><br><span class="line">    el: <span class="string">'.comment'</span>,</span><br><span class="line">    app_id: <span class="string">'&lt;%= theme.valine.appid %&gt;'</span>,</span><br><span class="line">    app_key: <span class="string">'&lt;%= theme.valine.appkey %&gt;'</span>,</span><br><span class="line">    placeholder: <span class="string">'&lt;%= theme.valine.placeholder %&gt;'</span>,</span><br><span class="line">    pageSize: <span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.pageSize</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">    notify: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.notify</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">    verify: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.verify</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">&#125;);</span></span><br></pre></td></tr></table></figure>

<p>仔细再检查一下，不行的话只添加av、el、app_id、app_key试试看看能不能正常运行，一个一个字段的添加。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客landscape-plus之新建分类写文章和基础配置介绍</title>
    <url>/2018/03/18/technology20180318043111/</url>
    <content><![CDATA[<p><strong>这儿有一个整体主题使用排名: <a href="https://www.hexothe.me" target="_blank" rel="noopener">https://www.hexothe.me</a></strong></p>
<p>在网上找了很多hexo主题，其中有的还是挺好看的。我喜欢简约看上去”干净”的主题，最后选择了<font color='red'>landscape-plus</font>的确满足我的风格，<a href="https://arvinxiang.com/landscape-plus/" target="_blank" rel="noopener">主题演示</a>，主题github下载地址:<a href="https://github.com/xiangming/landscape-plus" target="_blank" rel="noopener">https://github.com/xiangming/landscape-plus</a>，而我的在这个基础上整合网上的大佬们整改了一些样式和一些细节处理，因为我感觉自己有”强迫症“。</p>
<p><strong>首先我推荐自己感觉还不错的hexo主题:</strong></p>
<ul>
<li><p>skapp主题地址: <a href="https://github.com/Mrminfive/hexo-theme-skapp" target="_blank" rel="noopener">https://github.com/Mrminfive/hexo-theme-skapp</a>   <a href="http://blog.minfive.com/" target="_blank" rel="noopener">预览效果</a></p>
</li>
<li><p>smackdown主题地址: <a href="https://github.com/smackgg/hexo-theme-smackdown" target="_blank" rel="noopener">https://github.com/smackgg/hexo-theme-smackdown</a>  <a href="http://oldblog.smackgg.cn/" target="_blank" rel="noopener">预览效果</a></p>
</li>
<li><p>light主题地址: <a href="https://github.com/hexojs/hexo-theme-light" target="_blank" rel="noopener">https://github.com/hexojs/hexo-theme-light</a> </p>
</li>
<li><p>even主题地址: <a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="noopener">https://github.com/ahonn/hexo-theme-even</a></p>
</li>
<li><p>基于next主题修改 地址: <a href="https://github.com/Lruihao/hexo-theme-next" target="_blank" rel="noopener">https://github.com/Lruihao/hexo-theme-next</a>   <a href="www.lruihao.cn">预览效果</a></p>
</li>
<li><p>TKL主题地址: <a href="https://github.com/SuperKieran/TKL" target="_blank" rel="noopener">https://github.com/SuperKieran/TKL</a>    <a href="https://go.kieran.top/post/14/" target="_blank" rel="noopener">预览效果</a></p>
<p>感谢这些制作和修改主题和爱分享的小伙伴们。</p>
</li>
</ul>
<a id="more"></a>
<h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装:"></a>主题安装:</h4><p>这儿下载安装主题 以landscape-plus为例 <code>git clone https://github.com/xiangming/landscape-plus.git themes/landscape-plus</code> ，只要把这个主题名字修改成你喜欢的主题名字就行了。</p>
<p>然后修改根目录下的<code>_config.yml</code>把 <code>theme</code>的值设置为<code>landscape-plus</code>，然后运行<code>hexo clean</code>在执行<code>hexo  g</code>重新生成一下就换掉主题了。</p>
<h4 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍:"></a>配置介绍:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;configuration.html</span><br><span class="line">## Source: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;</span><br><span class="line"># en</span><br><span class="line"># Site</span><br><span class="line">title: &#39;する&#39; #网站名称</span><br><span class="line">subtitle: &#39;始まりは不明で終わりは分からない&#39; #副标题</span><br><span class="line">description: &#39;&#39; #描述</span><br><span class="line">keywords:</span><br><span class="line">author: kziwws #底部作者</span><br><span class="line">language: zh-CN #显示中文</span><br><span class="line">timezone: &#39;&#39;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: #如果有网址填写你的域名 没有可以填写服务器IP地址</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads&#x2F;code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link:</span><br><span class="line">  enable: true # Open external links in new tab</span><br><span class="line">  field: site # Apply to the whole site</span><br><span class="line">  exclude: &#39;&#39;</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace: &#39;&#39;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default &#x3D; &#39;&#39;)</span><br><span class="line"># per_page: Posts displayed per page. (0 &#x3D; disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#39;&#39;</span><br><span class="line">  per_page: 8</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 1000</span><br><span class="line"></span><br><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https:&#x2F;&#x2F;leancloud.cn</span><br><span class="line"># more info please open https:&#x2F;&#x2F;valine.js.org</span><br><span class="line">  </span><br><span class="line"># Metadata elements</span><br><span class="line">## https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTML&#x2F;Element&#x2F;meta</span><br><span class="line">meta_generator: true</span><br><span class="line"></span><br><span class="line"># Date &#x2F; Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http:&#x2F;&#x2F;momentjs.com&#x2F;docs&#x2F;#&#x2F;displaying&#x2F;format&#x2F;</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">## Use posts date for updated date unless set in front-matter</span><br><span class="line">use_date_for_updated: false</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 15</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Include &#x2F; Exclude file(s)</span><br><span class="line">## include:&#x2F;exclude: options only apply to the &#39;source&#x2F;&#39; folder</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: landscape-plus</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">#使用git提交到github仓库里</span><br><span class="line">#xxx换成你的使用的github的用户名</span><br><span class="line">deploy:</span><br><span class="line">  type: git #这儿前面有两个空格 中间有一个空格 后面的类似</span><br><span class="line">  repository: git@github.com:xxx&#x2F;xxx.github.io.git </span><br><span class="line">  branch: master</span><br><span class="line">  </span><br><span class="line">#如果是使用rsync部署到服务器 </span><br><span class="line">deploy:</span><br><span class="line">  type: rsync</span><br><span class="line">  host: 服务器名 主机IP</span><br><span class="line">  user: 用户名 ssh的用户名</span><br><span class="line">  root: 远程主机目录</span><br><span class="line">  port: ssh登录端口 如22</span><br></pre></td></tr></table></figure>

<h4 id="关于写文章和新建分类"><a href="#关于写文章和新建分类" class="headerlink" title="关于写文章和新建分类:"></a>关于写文章和新建分类:</h4><ul>
<li><p><code>hexo new page categories</code> 这儿本身有 _posts和tags 新建过后会出现一个文件，然后打开这个文件,打开里面的<code>index.md</code>,写上 <code>type: &quot;categories&quot;</code>，类别建立成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-01-06 15:51:07</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>新写文章 <code>hexo new &quot;文件名字如:title&quot;</code>会在 <code>source/_post</code> 文件夹下创建一个文件，命名为：<code>title.md</code>.</p>
</li>
<li><p>这儿打开过后</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 比如hexo如果写文件</span><br><span class="line">date: 2018-03-18 04:31:11</span><br><span class="line">categories:&#x2F;&#x2F;这个是文章对应的分类，如果一篇文章只能属于一个大的分类，但是这个大的分类又可以细分，比如这儿这儿写的这篇属于技术technology，细分过后属于hexo 博客搭建，这儿写上阶梯型的就像是二叉树一样的结构。这个当然你明白了就行了，后面也可以根据分类去查找文章</span><br><span class="line"> - technology</span><br><span class="line"> - hexo</span><br><span class="line">tags: &#x2F;&#x2F;这儿文章可以属于任何一个标签，你喜欢它属于哪一个标签就写上，同一篇文章可以属于不同的标签，这个理解没有问题吧，先懂这点就行,因为建类别的时候就是根据这个标签去查找的。这个是如果有同阶梯的，表示同等级的权重。</span><br><span class="line"> - hexo</span><br><span class="line">keywords: hexo博客,landscape-plus，新建分类，基础配置介绍</span><br><span class="line">description: Hexo写文章新建分类和基础配置介绍</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>写文章这儿推荐使用<a href="http://soft.down9.xyz/typoraformac_1503.dmg" target="_blank" rel="noopener">Typora</a> 这个链接我放了一个Mac版本的，不知道是不是最新，自己鉴定，不过是真心好用的。如果你SSH工具使用的是<a href="http://www.hostbuf.com/" target="_blank" rel="noopener">FinalShell 前往下载</a>这个的话，你可以直接设置<code>文件点击右键-&gt;选择文本编辑器-&gt;设置外部文本编辑器-&gt;然后选择Typora</code>下一次打开方式选择<code>文本编辑器</code>,就方便多了，只要在文章的时候就会打开这个方便的工具。</p>
</li>
<li><p>现在开始如何设置分类。现在 <code>/soft/hexo/nginxblog/themes/landscape-plus</code>我的是这目录，你的我不知道，现在要打开的是主题下<code>landscape-plus-&gt;_config.yml</code>，直接上配置更加直观。里面会详细介绍。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: &#x2F;</span><br><span class="line">  编程技术: &#x2F;tags&#x2F;technology </span><br><span class="line">  诗: &#x2F;tags&#x2F;poetry</span><br><span class="line">  生活随笔: &#x2F;tags&#x2F;life</span><br><span class="line">  所有文章: &#x2F;archives</span><br><span class="line">rss: &#x2F;atom.xml</span><br><span class="line"></span><br><span class="line">#上面分类解释一下,前面不是介绍了tags和categories这儿举一个例子，就拿编程技术来说有两种都可以，第一种根据tags标签来分类，&#x2F;tags&#x2F;technology 凡是文章属于大的标签”技术“都是属于这一类，还有另外一种就是&#x2F;categories&#x2F;technology&#x2F;hexo 也可以塞选出来。但是遇到分类的时候就会出现塞选不全面。所以使用tags感觉好一点。</span><br><span class="line"></span><br><span class="line"># Content</span><br><span class="line">excerpt_link: &quot;阅读全文&quot; #Read More 这个是查看更多是文本</span><br><span class="line">fancybox: true #相册功能</span><br><span class="line">mathjax: true  #开启渲染数学公式</span><br><span class="line"></span><br><span class="line"># Sidebar</span><br><span class="line">sidebar: right #左边sidebar位置</span><br><span class="line">widgets:       #各个挂件的widget</span><br><span class="line">- category</span><br><span class="line">- tag</span><br><span class="line">- tagcloud</span><br><span class="line">- archive</span><br><span class="line">- recent_posts</span><br><span class="line">- links</span><br><span class="line"></span><br><span class="line"># Links</span><br><span class="line">links: #友情链接</span><br><span class="line">  github: ～</span><br><span class="line"></span><br><span class="line"># Miscellaneous</span><br><span class="line"># google_analytics: UA-066185928-1 #这个东西需要翻墙,谷歌统计分析，这儿是一个不能使用的ID，后来我放弃了。所以被我改成百度统计了</span><br><span class="line"></span><br><span class="line">baidu_tongji: &#39;81e087347845b30641d06f11be8hb143&#39;#去百度统计里注册,谷歌统计分析，这儿是一个不能使用的ID,只是为了模拟数据</span><br><span class="line">favicon: &#x2F;favicon.png</span><br><span class="line">twitter:</span><br><span class="line">google_plus:</span><br><span class="line">fb_admins: </span><br><span class="line">fb_app_id:</span><br><span class="line"></span><br><span class="line"># Toc</span><br><span class="line">toc:</span><br><span class="line">  article: true   ## show contents in article.</span><br><span class="line">  aside: true     ## show contents in aside.</span><br><span class="line"># Scroll to top</span><br><span class="line">go_top: true</span><br><span class="line"></span><br><span class="line"># search # 这儿之前是跳转到百度搜索引擎 于是参考网上的小伙伴分享的技术和自己的琢磨移植了next主题内部的搜素功能，又很多坑，我趟过来了。哈哈后面我会将具体的移值分分享。</span><br><span class="line">local_search:</span><br><span class="line">  enable: true </span><br><span class="line">  trigger: auto  #表示搜索结果会不会打字时自动显示</span><br><span class="line">  top_n_per_article: -1 #表示每篇文章最多显示几条结果（-1为不限数字）</span><br><span class="line"></span><br><span class="line"># Duoshuo</span><br><span class="line"># duoshuo_shortname: reqianduan</span><br><span class="line">#这儿之前是”多说“现在官网都打不开了好吧,然后移植了leancloud, 后面也会分享出来的。</span><br><span class="line"></span><br><span class="line"># valine leancloud</span><br><span class="line">valine_enable: true # valine评论是否开启</span><br><span class="line">valine:</span><br><span class="line">  appid: vh2N08Qk3UIsu1N8QHu468BH-gzGZoHsz #leancloud中的appid 这儿是模拟的一个ID，无效你需要注册替换成你自己官网注册的。</span><br><span class="line">  appkey: JxrjTSEoPMfc35OMLWhHzcHk #leancloud中的appKey这儿是模拟的一个ID，无效你需要注册替换成你自己官网注册的。</span><br><span class="line">  placeholder: 想说点什么...  #默认留言框内的文字</span><br><span class="line">  notify: false  #新留言是否需要通知 https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: false  #是否需要验证 验证比较反人类建议false关闭</span><br><span class="line">  avatar: mm  #默认头像</span><br><span class="line">  guest_info: nick,mail # 默认留言框的头部需要访问者输入的信息</span><br><span class="line">  pageSize: 15 #默认单页的留言条数</span><br><span class="line">  </span><br><span class="line"># Baidu share</span><br><span class="line">baidushare: true #是否开启百度分享</span><br></pre></td></tr></table></figure>
</li>
<li><p>这儿由于上面的移植next主题search功能，和替换掉了”多说”评论 valine leancloud,所以里面的代码肯定是没有修改过的，你先屏蔽掉。然后运行，应该你想要的样子新的类别和新写的文章和一些<code>config.yml</code>里设置的基础配置应该就出来。</p>
</li>
</ul>
<h4 id="这儿再分享一个404页面"><a href="#这儿再分享一个404页面" class="headerlink" title="这儿再分享一个404页面:"></a>这儿再分享一个404页面:</h4><ul>
<li><p>当服务器在找不到页面和加载失败的时候使用,直接保存成<code>404x.html</code>文件放在nginx所在的目录下。<code>/usr/local/nginx/html</code>我的是这个目录，放进去过后是<code>/usr/local/nginx/html/404x.html</code>，中间有三个链接，自己填成你的。这个页面也是网上看到扁平化简约风格页面我挺喜欢。也在次感谢提供这个<code>h5</code>的小伙伴。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Error<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">body, div, h3, h4, li, ol &#123;</span><br><span class="line">	margin: 0;</span><br><span class="line">	padding: 0</span><br><span class="line">&#125;</span><br><span class="line">body &#123;</span><br><span class="line">	font: 14px/1.5 'Microsoft YaHei', '微软雅黑', Helvetica, Sans-serif;</span><br><span class="line">	min-width: 1100px;</span><br><span class="line"><span class="css">	<span class="selector-tag">background</span>: <span class="selector-id">#f0f1f3</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line">	outline: 0</span><br><span class="line">&#125;</span><br><span class="line">h3, h4, strong &#123;</span><br><span class="line">	font-weight: 700</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line"><span class="css">	<span class="selector-tag">color</span>: <span class="selector-id">#428bca</span>;</span></span><br><span class="line">	text-decoration: none</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">	text-decoration: underline</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page</span> &#123;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">background</span>: <span class="selector-id">#f0f1f3</span>;</span></span><br><span class="line">	padding: 80px 0 180px</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-container</span> &#123;</span></span><br><span class="line">	position: relative;</span><br><span class="line">	z-index: 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-main</span> &#123;</span></span><br><span class="line">	position: relative;</span><br><span class="line"><span class="css">	<span class="selector-tag">background</span>: <span class="selector-id">#f9f9f9</span>;</span></span><br><span class="line">	margin: 0 auto;</span><br><span class="line">	width: 617px;</span><br><span class="line">	-ms-box-sizing: border-box;</span><br><span class="line">	-webkit-box-sizing: border-box;</span><br><span class="line">	-moz-box-sizing: border-box;</span><br><span class="line">	box-sizing: border-box;</span><br><span class="line">	padding: 50px 50px 70px</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-main</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line">	content: '';</span><br><span class="line">	display: block;</span><br><span class="line">	background: url(img/errorPageBorder.png?1427783409637);</span><br><span class="line">	height: 7px;</span><br><span class="line">	position: absolute;</span><br><span class="line">	top: -7px;</span><br><span class="line">	width: 100%;</span><br><span class="line">	left: 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-main</span> <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line">	font-size: 24px;</span><br><span class="line">	font-weight: 400;</span><br><span class="line"><span class="css">	<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#d0d0d0</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-main</span> <span class="selector-tag">h3</span> <span class="selector-tag">strong</span> &#123;</span></span><br><span class="line">	font-size: 54px;</span><br><span class="line">	font-weight: 400;</span><br><span class="line">	margin-right: 20px</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.error-page-main</span> <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line">	font-size: 20px;</span><br><span class="line">	font-weight: 400;</span><br><span class="line"><span class="css">	<span class="selector-tag">color</span>: <span class="selector-id">#333</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span> &#123;</span></span><br><span class="line">	font-size: 0;</span><br><span class="line">	z-index: 100</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">	font-size: 14px;</span><br><span class="line">	display: inline-block;</span><br><span class="line">	padding: 30px 0 0 10px;</span><br><span class="line">	width: 50%;</span><br><span class="line">	-ms-box-sizing: border-box;</span><br><span class="line">	-webkit-box-sizing: border-box;</span><br><span class="line">	-moz-box-sizing: border-box;</span><br><span class="line">	box-sizing: border-box;</span><br><span class="line"><span class="css">	<span class="selector-tag">color</span>: <span class="selector-id">#838383</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span> <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line">	list-style: decimal;</span><br><span class="line">	padding-left: 20px</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">line-height</span>: 2<span class="selector-class">.5em</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line">	content: '';</span><br><span class="line">	display: block;</span><br><span class="line">	position: absolute;</span><br><span class="line">	z-index: -1;</span><br><span class="line">	bottom: 17px;</span><br><span class="line">	left: 50px;</span><br><span class="line">	width: 200px;</span><br><span class="line">	height: 10px;</span><br><span class="line"><span class="css">	<span class="selector-tag">-moz-box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">-webkit-box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">	-moz-transform: rotate(-4deg);</span><br><span class="line">	-webkit-transform: rotate(-4deg);</span><br><span class="line">	-ms-transform: rotate(-4deg);</span><br><span class="line">	-o-transform: rotate(-4deg);</span><br><span class="line">	transform: rotate(-4deg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error-page-actions</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">	content: '';</span><br><span class="line">	display: block;</span><br><span class="line">	position: absolute;</span><br><span class="line">	z-index: -1;</span><br><span class="line">	bottom: 17px;</span><br><span class="line">	right: 50px;</span><br><span class="line">	width: 200px;</span><br><span class="line">	height: 10px;</span><br><span class="line"><span class="css">	<span class="selector-tag">-moz-box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">-webkit-box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line"><span class="css">	<span class="selector-tag">box-shadow</span>: 4<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 31<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">	-moz-transform: rotate(4deg);</span><br><span class="line">	-webkit-transform: rotate(4deg);</span><br><span class="line">	-ms-transform: rotate(4deg);</span><br><span class="line">	-o-transform: rotate(4deg);</span><br><span class="line">	transform: rotate(4deg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-page"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-page-container"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-page-main"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">strong</span>&gt;</span>404<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>很抱歉，您要访问的页面不存在！</span><br><span class="line">				<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-page-actions"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">h4</span>&gt;</span>可能原因：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span>网络信号差不稳定<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span>找不到请求的页面<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span>输入的网址不正确<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">h4</span>&gt;</span>可以尝试：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.rumoss.cn"</span>&gt;</span>返回首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>留言反馈<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系站长<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>nginx中去配置:</p>
<p>对应的nginx配置目录<code>/usr/local/nginx/conf/nginx.conf</code>,然后打开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">error_page   500 502 503 504 404 &#x2F;404x.html;</span><br><span class="line">location &#x3D; &#x2F;404x.html &#123;</span><br><span class="line">    root   html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>我这个主题相对于landscape-plus来说修改了一些细节上的样式，好奇的话后面我会发一篇，具体的修改了哪些样式。</strong></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>IOS关于极光推送JPush不能上报deviceToken的问题</title>
    <url>/2017/06/12/technology20170612104702/</url>
    <content><![CDATA[<p><font color="red"><strong>问题一、</strong></font><font color="red"> ld:library not found for -ljpush-ios-3.0.9</font><br>    clang: error: linker command failed with exit code 1 (use -v to see invocation)</p>
<p><font color="red"><strong>问题二、</strong></font><font color="red">JIGUANGDeviceTokenController</font> Not get deviceToken yet. Maybe: your certificate not configured APNs? or current network is not so good so APNs registration failed?  or there is no APNs register code? Please refer to JPush docs.</p>
<h5 id="由于项目比较老，推送的SDK版本比较低的原因，之前老的项目可以正常推送，现在在旧项目基础上新改版的一个app不能正常推送，推送账号一切都是正常的。"><a href="#由于项目比较老，推送的SDK版本比较低的原因，之前老的项目可以正常推送，现在在旧项目基础上新改版的一个app不能正常推送，推送账号一切都是正常的。" class="headerlink" title="由于项目比较老，推送的SDK版本比较低的原因，之前老的项目可以正常推送，现在在旧项目基础上新改版的一个app不能正常推送，推送账号一切都是正常的。"></a>由于项目比较老，推送的SDK版本比较低的原因，之前老的项目可以正常推送，现在在旧项目基础上新改版的一个app不能正常推送，推送账号一切都是正常的。</h5><a id="more"></a>

<h4 id="解决问题一"><a href="#解决问题一" class="headerlink" title="解决问题一"></a><font color="red">解决问题一</font></h4><p>查询了相关的网上解决办法</p>
<ul>
<li><p><strong>一、</strong>在Build Settings 中的 Library Search Paths 中手动添加其路径。</p>
</li>
<li><p><strong>二、</strong>在Build Phases 中的 Link Binary With Libraries删除重新添加,有的说是物理路径删除了，引用的路径还在，会出现红色文件缺失，在这儿我根本没有找到对应的.a文件。然后我重新添加上去也根本没有效果。</p>
</li>
<li><p><strong>三、</strong>已经使用了CocoaPods更新到jpush-ios-3.1.2,开始的时候出现了两个，引用路径只有一个，删除了以前的3.0.9的版本，重新添加，一样的无效。</p>
</li>
</ul>
<p>最后查找到一个方法说在<font color="#4183C4">  <code>&quot;xxxx&quot;.xcodeproj</code></font> 文件显示包内容，打开以文本显示。然后比如你缺失的一个<font color="#4183C4"> <code>SDK</code> </font>或者<font color="#4183C4"> <code>.a</code></font>文件名称在里面全局搜索到所有引用到这个文件的地方然后在替换成前面报的错的地方的文件名称<font color="#4183C4">  <code>ljpush-ios-3.0.9</code> </font>换成<font color="#4183C4">  <code>ljpush-ios-3.1.2</code> </font></p>
<p><font color="red">注意:这儿修改如过害怕修改配置错误，你可以先备份一份。因为这个修改错误项目有的会打不开。</font></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">MARKETING_VERSION = 1.5.5;</span><br><span class="line">  OTHER_LDFLAGS = (</span><br><span class="line">  "$(inherited)",</span><br><span class="line">  "-ObjC",</span><br><span class="line">  "-l\"GZCQRCodeManager\"",</span><br><span class="line">  "-l\"c++\"",</span><br><span class="line">  "-l\"jcore-ios-2.1.8\"",</span><br><span class="line">  "-l\"jpush-ios-3.0.9\"",   </span><br><span class="line">  -&gt;这儿换成你需要的 "jpush-ios-3.1.2"</span><br><span class="line">  "-l\"resolv\"",</span><br><span class="line">  "-l\"z\"",</span><br><span class="line">  "-framework",</span><br><span class="line">  "\"Bugly\"",</span><br><span class="line">  "-framework",</span><br></pre></td></tr></table></figure>

<h5 id="修改了过后重新-clean-build-floder一下-然后重新运行。是不是已经可以编译通过了。"><a href="#修改了过后重新-clean-build-floder一下-然后重新运行。是不是已经可以编译通过了。" class="headerlink" title="修改了过后重新 clean build floder一下,然后重新运行。是不是已经可以编译通过了。"></a>修改了过后重新 <code>clean build floder</code>一下,然后重新运行。是不是已经可以编译通过了。</h5><p>这儿多说一点点，就是在SVN提交代码的时候，难免会冲突。有时候开发项目，是其他同事一起修改然后提交了造成的小的冲突问题不大，有时候直接修改一下就能编译通过了。但是有时候严重的时候直接项目都打不开了情况下。</p>
<p>也是同样的原理直接打开上面”xxxx”.xcodeproj文件搜索</p>
<ul>
<li>粘贴这个符号<code>---</code> 搜索出来的地方，删除乱码。</li>
<li>符号<code>---&gt;</code>搜索出来的地方，删除乱码。</li>
<li>符号<code>&lt;---</code>搜索出来的地方，删除乱码。</li>
</ul>
<h5 id="这个处理过后在保存应该就可以正常打开项目了"><a href="#这个处理过后在保存应该就可以正常打开项目了" class="headerlink" title="这个处理过后在保存应该就可以正常打开项目了"></a>这个处理过后在保存应该就可以正常打开项目了</h5><h4 id="解决问题二"><a href="#解决问题二" class="headerlink" title="解决问题二"></a><font color="red">解决问题二</font></h4><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span> *)deviceToken &#123;</span><br><span class="line">    [JPUSHService registerDeviceToken:deviceToken];<span class="comment">//注册设备token</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"didFailToRegisterForRemoteNotificationsWithError %@"</span>, error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这儿这两个方法都直接没有进入，但是之前在3.1.2的版本在另外一个项目中可以推送，是另外一个同事负责的。所以我一直觉得应该代码没什么问题，是不是在注册通知的时候版本不同造成的于是修改了以下代码。</p>
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*向APNs注册，获取deviceToken用于推送*/</span></span><br><span class="line">-(<span class="keyword">void</span>)registerAPNS:(<span class="built_in">UIApplication</span> *)application&#123;</span><br><span class="line">    <span class="keyword">float</span> systemVersionNum = [[[<span class="built_in">UIDevice</span> currentDevice] systemVersion] floatValue];</span><br><span class="line">    <span class="keyword">if</span> (systemVersionNum &gt;= <span class="number">10.0</span>) &#123;</span><br><span class="line">        <span class="comment">// iOS 10 notifications</span></span><br><span class="line">        _notificationCenter = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class="line">        <span class="comment">// 创建category，并注册到通知中心</span></span><br><span class="line">        [<span class="keyword">self</span> createCustomNotificationCategory];</span><br><span class="line">        </span><br><span class="line">        _notificationCenter.delegate = <span class="keyword">self</span>;</span><br><span class="line">        <span class="comment">// 请求推送权限</span></span><br><span class="line">        [_notificationCenter requestAuthorizationWithOptions:UNAuthorizationOptionAlert | UNAuthorizationOptionBadge | UNAuthorizationOptionSound completionHandler:^(<span class="built_in">BOOL</span> granted, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">            <span class="keyword">if</span> (granted) &#123;</span><br><span class="line">                <span class="comment">// granted</span></span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"User authored notification."</span>);</span><br><span class="line">                <span class="comment">// 向APNs注册，获取deviceToken</span></span><br><span class="line">                <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                    [application registerForRemoteNotifications];</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// not granted</span></span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"User denied notification."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (systemVersionNum &gt;= <span class="number">8.0</span>) &#123;</span><br><span class="line">        <span class="comment">// iOS 8 Notifications</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic push</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic ignored<span class="meta-string">"-Wdeprecated-declarations"</span></span></span><br><span class="line">        [application registerUserNotificationSettings:</span><br><span class="line">         [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:</span><br><span class="line">          (<span class="built_in">UIUserNotificationTypeSound</span> | <span class="built_in">UIUserNotificationTypeAlert</span> | <span class="built_in">UIUserNotificationTypeBadge</span>)</span><br><span class="line">                                           categories:<span class="literal">nil</span>]];</span><br><span class="line">        [application registerForRemoteNotifications];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic pop</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// iOS &lt; 8 Notifications</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic push</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic ignored<span class="meta-string">"-Wdeprecated-declarations"</span></span></span><br><span class="line">        [[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotificationTypes:</span><br><span class="line">         (<span class="built_in">UIRemoteNotificationTypeAlert</span> | <span class="built_in">UIRemoteNotificationTypeBadge</span> | <span class="built_in">UIRemoteNotificationTypeSound</span>)];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic pop</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>增加了在IOS10以上设备注册通知的兼容性问题，然而在他的设备上IOS 13.1 是正常的，在我自己的设备上还是一样的不进入<code>didRegisterForRemoteNotificationsWithDeviceToken</code>函数。挺郁闷的既然不是这个注册的原因，然后放弃了这种修改代码的想法。</p>
<p>然后去网上查找到</p>
<ul>
<li><p><strong>一、</strong>说有可能是其他SDK重写了AppDelegate类的方法<code>didRegisterForRemoteNotificationsWithDeviceToken</code>导致没有进入这个函数。但是我查找了并没有出现这个问题，所以这个排除了。</p>
</li>
<li><p><strong>二、</strong>检查通知开关是否开启(这个我压根不用怀疑)，<code>push</code>证书<code>entitlements</code>文件也是有的，也排除了。</p>
</li>
</ul>
<h4 id="办法"><a href="#办法" class="headerlink" title="办法:"></a>办法:</h4><p>后来发现在<code>IOS13.1</code>以下的版本，可以进去，但是有时候会出现Not get deviceToken yet. Maybe: your certificate not configured APNs? or current network is not so good so APNs registration failed?  or there is no APNs register code? Please refer to JPush docs.然后在我自己的手机设备是直接无法访问。后来去<a href="http://docs.jiguang.cn/jpush/updates/" target="_blank" rel="noopener">极光官网</a>看了更新记录文档。发现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JPush iOS SDK v3.2.0</span><br><span class="line">更新记录</span><br><span class="line">    根据JCore 2.0进行JPush重构，性能优化</span><br><span class="line">    JCore 要求版本在2.0以上</span><br><span class="line">    删除了setupWithOption:launchingOption 初始化接口，不再支持pushConfig.plist方式集成</span><br><span class="line">    优化消息状态上报逻辑</span><br><span class="line">    修复已知bug</span><br></pre></td></tr></table></figure>
<h5 id="看到了过后前面还有几个版本，没有怀疑直接更新了。"><a href="#看到了过后前面还有几个版本，没有怀疑直接更新了。" class="headerlink" title="看到了过后前面还有几个版本，没有怀疑直接更新了。"></a>看到了过后前面还有几个版本，没有怀疑直接更新了。</h5><p>修改了<code>pod &#39;JPush&#39;, &#39;~&gt; 3.2.0&#39;</code> 然后在 <code>pod update</code> 更新完过后重新运行。没错现在都会进去了 <code>didRegisterForRemoteNotificationsWithDeviceToken</code> 了，在测试了一下，在高版本也是正常可以推送了。</p>
<h5 id="到这儿为止是不是觉得想笑了，瞎折腾，哈哈哈。"><a href="#到这儿为止是不是觉得想笑了，瞎折腾，哈哈哈。" class="headerlink" title="到这儿为止是不是觉得想笑了，瞎折腾，哈哈哈。"></a>到这儿为止是不是觉得想笑了，瞎折腾，哈哈哈。</h5>]]></content>
      <categories>
        <category>ios</category>
      </categories>
      <tags>
        <tag>technology</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>《无心》</title>
    <url>/2015/12/23/poetry20151223083608/</url>
    <content><![CDATA[<p>华亭散漫风萧处，不现萦纡见浮层。<br>凡尘若是千非尽，只怪离人自有心。<br>满庭蒲扇护春草，人拟何时归残物。<br>亦作磐石盘恒心，不识烟火不赏美。<br>秋殇秋夜秋落叶，与人与事与朝夕。<br>曾有心销声匿迹，终无归人辗转起。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《游州河有感》</title>
    <url>/2015/02/15/poetry20150215222104/</url>
    <content><![CDATA[<p>   衣带州河红尘染，佳景华市人如仙。<br>   灯火重宵携入暮，曲径冰凝几陌路。<br>   星河吻对三千年，哪知人世时境迁。</p>
<p>   by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《唯你不慊》</title>
    <url>/2015/02/12/poetry20150212101102/</url>
    <content><![CDATA[<p>唯心随影侧，匿景崦嵫色。<br>不作决别深，慊然云影走。<br>疑懒偏淩晨，因夜静藏枕。<br>只为寻游下，想尽梦浮华。<br>深缆一心月，爱在是天涯。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《寻谊》</title>
    <url>/2015/02/12/poetry20150212094616/</url>
    <content><![CDATA[<p>浅疏流萤入境来。梦翳斜娑，银烛泪墙白。<br>孤影倒挂映绿苔，忽知一夜情未猜！<br>靡靡千转呼天籁。意枕寒流，淡桥折谊在。<br>遥望绿浓红绸暧，行军虏马嘶声哀。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《恋》</title>
    <url>/2015/02/12/poetry20150212092232/</url>
    <content><![CDATA[<p>资丽清容绘花颜，忆影欣悦思梦连。<br>内向孤言怕羞面，一生几回修心变。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>《拂长夜》</title>
    <url>/2015/02/12/poetry20150212091625/</url>
    <content><![CDATA[<p>憩落平仄红微墙 ，斓嫁楼裳白明窗。<br>摇去尘拂虽阻碍 ，颜欢皆平满城光。<br>任时何处夜长宵 ，梦渔溪钓无情扰。</p>
<p>by:霜</p>
]]></content>
      <categories>
        <category>诗</category>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>poetry</tag>
      </tags>
  </entry>
</search>
